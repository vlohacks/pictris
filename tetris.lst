;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11.04.2010 13:59:41
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x160A      	BSF        PCLATH, 4
0x0001	0x2800      	GOTO       4096
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00D0      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00CF      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A3      	MOVWF      35
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A2      	MOVWF      34
0x000F	0x0872      	MOVF       R2, 0
0x0010	0x00A1      	MOVWF      33
0x0011	0x0873      	MOVF       R3, 0
0x0012	0x00A0      	MOVWF      32
0x0013	0x0826      	MOVF       ___DoICPAddr, 0
0x0014	0x00A4      	MOVWF      36
0x0015	0x0827      	MOVF       39, 0
0x0016	0x00A5      	MOVWF      37
;mukke.c,88 :: 		void interrupt() {
;mukke.c,90 :: 		if (INTCON.TMR0IF) {
0x0017	0x1D0B      	BTFSS      INTCON, 2
0x0018	0x28AC      	GOTO       L_interrupt0
;mukke.c,91 :: 		INTCON.TMR0IF = 0;
0x0019	0x110B      	BCF        INTCON, 2
;mukke.c,93 :: 		if (current_note_delay == 0) {
0x001A	0x0853      	MOVF       _current_note_delay, 0
0x001B	0x3A00      	XORLW      0
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2896      	GOTO       L_interrupt1
;mukke.c,94 :: 		current_note_delay = song[song_position][1];
0x001E	0x0854      	MOVF       _song_position, 0
0x001F	0x00F0      	MOVWF      R0
0x0020	0x01F1      	CLRF       R0+1
0x0021	0x0DF0      	RLF        R0, 1
0x0022	0x0DF1      	RLF        R0+1, 1
0x0023	0x1070      	BCF        R0, 0
0x0024	0x3004      	MOVLW      _song
0x0025	0x07F0      	ADDWF      R0, 1
0x0026	0x3017      	MOVLW      hi_addr(_song)
0x0027	0x1803      	BTFSC      STATUS, 0
0x0028	0x3E01      	ADDLW      1
0x0029	0x07F1      	ADDWF      R0+1, 1
0x002A	0x0AF0      	INCF       R0, 1
0x002B	0x1903      	BTFSC      STATUS, 2
0x002C	0x0AF1      	INCF       R0+1, 1
0x002D	0x0870      	MOVF       R0, 0
0x002E	0x00A6      	MOVWF      ___DoICPAddr
0x002F	0x0871      	MOVF       R0+1, 0
0x0030	0x00A7      	MOVWF      ___DoICPAddr+1
0x0031	0x21CC      	CALL       _____DoICP
0x0032	0x118A      	BCF        PCLATH, 3
0x0033	0x120A      	BCF        PCLATH, 4
0x0034	0x00D3      	MOVWF      _current_note_delay
;mukke.c,95 :: 		PR2 = notes[song[song_position][0]][0];
0x0035	0x0854      	MOVF       _song_position, 0
0x0036	0x00F0      	MOVWF      R0
0x0037	0x01F1      	CLRF       R0+1
0x0038	0x0DF0      	RLF        R0, 1
0x0039	0x0DF1      	RLF        R0+1, 1
0x003A	0x1070      	BCF        R0, 0
0x003B	0x3004      	MOVLW      _song
0x003C	0x07F0      	ADDWF      R0, 1
0x003D	0x3017      	MOVLW      hi_addr(_song)
0x003E	0x1803      	BTFSC      STATUS, 0
0x003F	0x3E01      	ADDLW      1
0x0040	0x07F1      	ADDWF      R0+1, 1
0x0041	0x0870      	MOVF       R0, 0
0x0042	0x00A6      	MOVWF      ___DoICPAddr
0x0043	0x0871      	MOVF       R0+1, 0
0x0044	0x00A7      	MOVWF      ___DoICPAddr+1
0x0045	0x21CC      	CALL       _____DoICP
0x0046	0x118A      	BCF        PCLATH, 3
0x0047	0x120A      	BCF        PCLATH, 4
0x0048	0x00F3      	MOVWF      R3
0x0049	0x0873      	MOVF       R3, 0
0x004A	0x00F0      	MOVWF      R0
0x004B	0x01F1      	CLRF       R0+1
0x004C	0x0DF0      	RLF        R0, 1
0x004D	0x0DF1      	RLF        R0+1, 1
0x004E	0x1070      	BCF        R0, 0
0x004F	0x30A2      	MOVLW      _notes
0x0050	0x07F0      	ADDWF      R0, 1
0x0051	0x3017      	MOVLW      hi_addr(_notes)
0x0052	0x1803      	BTFSC      STATUS, 0
0x0053	0x3E01      	ADDLW      1
0x0054	0x07F1      	ADDWF      R0+1, 1
0x0055	0x0870      	MOVF       R0, 0
0x0056	0x00A6      	MOVWF      ___DoICPAddr
0x0057	0x0871      	MOVF       R0+1, 0
0x0058	0x00A7      	MOVWF      ___DoICPAddr+1
0x0059	0x21CC      	CALL       _____DoICP
0x005A	0x118A      	BCF        PCLATH, 3
0x005B	0x120A      	BCF        PCLATH, 4
0x005C	0x1683      	BSF        STATUS, 5
0x005D	0x0092      	MOVWF      PR2
;mukke.c,96 :: 		CCPR1L  = 0x28;
0x005E	0x3028      	MOVLW      40
0x005F	0x1283      	BCF        STATUS, 5
0x0060	0x0095      	MOVWF      CCPR1L
;mukke.c,97 :: 		CCP1CON = notes[song[song_position][0]][1];
0x0061	0x0854      	MOVF       _song_position, 0
0x0062	0x00F0      	MOVWF      R0
0x0063	0x01F1      	CLRF       R0+1
0x0064	0x0DF0      	RLF        R0, 1
0x0065	0x0DF1      	RLF        R0+1, 1
0x0066	0x1070      	BCF        R0, 0
0x0067	0x3004      	MOVLW      _song
0x0068	0x07F0      	ADDWF      R0, 1
0x0069	0x3017      	MOVLW      hi_addr(_song)
0x006A	0x1803      	BTFSC      STATUS, 0
0x006B	0x3E01      	ADDLW      1
0x006C	0x07F1      	ADDWF      R0+1, 1
0x006D	0x0870      	MOVF       R0, 0
0x006E	0x00A6      	MOVWF      ___DoICPAddr
0x006F	0x0871      	MOVF       R0+1, 0
0x0070	0x00A7      	MOVWF      ___DoICPAddr+1
0x0071	0x21CC      	CALL       _____DoICP
0x0072	0x118A      	BCF        PCLATH, 3
0x0073	0x120A      	BCF        PCLATH, 4
0x0074	0x00F3      	MOVWF      R3
0x0075	0x0873      	MOVF       R3, 0
0x0076	0x00F0      	MOVWF      R0
0x0077	0x01F1      	CLRF       R0+1
0x0078	0x0DF0      	RLF        R0, 1
0x0079	0x0DF1      	RLF        R0+1, 1
0x007A	0x1070      	BCF        R0, 0
0x007B	0x30A2      	MOVLW      _notes
0x007C	0x07F0      	ADDWF      R0, 1
0x007D	0x3017      	MOVLW      hi_addr(_notes)
0x007E	0x1803      	BTFSC      STATUS, 0
0x007F	0x3E01      	ADDLW      1
0x0080	0x07F1      	ADDWF      R0+1, 1
0x0081	0x0AF0      	INCF       R0, 1
0x0082	0x1903      	BTFSC      STATUS, 2
0x0083	0x0AF1      	INCF       R0+1, 1
0x0084	0x0870      	MOVF       R0, 0
0x0085	0x00A6      	MOVWF      ___DoICPAddr
0x0086	0x0871      	MOVF       R0+1, 0
0x0087	0x00A7      	MOVWF      ___DoICPAddr+1
0x0088	0x21CC      	CALL       _____DoICP
0x0089	0x118A      	BCF        PCLATH, 3
0x008A	0x120A      	BCF        PCLATH, 4
0x008B	0x0097      	MOVWF      CCP1CON
;mukke.c,98 :: 		if (song_position == SONG_LENGTH)
0x008C	0x0854      	MOVF       _song_position, 0
0x008D	0x3A4E      	XORLW      78
0x008E	0x1D03      	BTFSS      STATUS, 2
0x008F	0x2892      	GOTO       L_interrupt2
;mukke.c,99 :: 		song_position = 0;
0x0090	0x01D4      	CLRF       _song_position
0x0091	0x2896      	GOTO       L_interrupt3
L_interrupt2:
;mukke.c,101 :: 		song_position++;
0x0092	0x0A54      	INCF       _song_position, 0
0x0093	0x00F0      	MOVWF      R0
0x0094	0x0870      	MOVF       R0, 0
0x0095	0x00D4      	MOVWF      _song_position
L_interrupt3:
;mukke.c,102 :: 		}
L_interrupt1:
;mukke.c,104 :: 		if (CCPR1L && (beatcount % 16) == 0) {
0x0096	0x0815      	MOVF       CCPR1L, 0
0x0097	0x1903      	BTFSC      STATUS, 2
0x0098	0x28A1      	GOTO       L_interrupt6
0x0099	0x300F      	MOVLW      15
0x009A	0x055E      	ANDWF      _beatcount, 0
0x009B	0x00F1      	MOVWF      R1
0x009C	0x0871      	MOVF       R1, 0
0x009D	0x3A00      	XORLW      0
0x009E	0x1D03      	BTFSS      STATUS, 2
0x009F	0x28A1      	GOTO       L_interrupt6
L__interrupt9:
;mukke.c,105 :: 		CCPR1L-=1;
0x00A0	0x0395      	DECF       CCPR1L, 1
;mukke.c,106 :: 		}
L_interrupt6:
;mukke.c,108 :: 		if (beatcount == 128) {
0x00A1	0x085E      	MOVF       _beatcount, 0
0x00A2	0x3A80      	XORLW      128
0x00A3	0x1D03      	BTFSS      STATUS, 2
0x00A4	0x28AB      	GOTO       L_interrupt7
;mukke.c,109 :: 		beatcount = 0;
0x00A5	0x01DE      	CLRF       _beatcount
;mukke.c,110 :: 		current_note_delay--;
0x00A6	0x0353      	DECF       _current_note_delay, 0
0x00A7	0x00F0      	MOVWF      R0
0x00A8	0x0870      	MOVF       R0, 0
0x00A9	0x00D3      	MOVWF      _current_note_delay
;mukke.c,111 :: 		}  else {
0x00AA	0x28AC      	GOTO       L_interrupt8
L_interrupt7:
;mukke.c,112 :: 		beatcount = (beatcount + 1);
0x00AB	0x0ADE      	INCF       _beatcount, 1
;mukke.c,113 :: 		}
L_interrupt8:
;mukke.c,114 :: 		}
L_interrupt0:
;mukke.c,116 :: 		}
L__interrupt10:
0x00AC	0x0824      	MOVF       36, 0
0x00AD	0x00A6      	MOVWF      ___DoICPAddr
0x00AE	0x0825      	MOVF       37, 0
0x00AF	0x00A7      	MOVWF      39
0x00B0	0x0823      	MOVF       35, 0
0x00B1	0x00F0      	MOVWF      R0
0x00B2	0x0822      	MOVF       34, 0
0x00B3	0x00F1      	MOVWF      R1
0x00B4	0x0821      	MOVF       33, 0
0x00B5	0x00F2      	MOVWF      R2
0x00B6	0x0820      	MOVF       32, 0
0x00B7	0x00F3      	MOVWF      R3
0x00B8	0x084F      	MOVF       ___savePCLATH, 0
0x00B9	0x008A      	MOVWF      PCLATH
0x00BA	0x0E50      	SWAPF      ___saveSTATUS, 0
0x00BB	0x0083      	MOVWF      STATUS
0x00BC	0x0EFF      	SWAPF      R15, 1
0x00BD	0x0E7F      	SWAPF      R15, 0
0x00BE	0x0009      	RETFIE
; end of _interrupt
_ks0108_enable:
;ks0108.c,11 :: 		void ks0108_enable(void)
;ks0108.c,15 :: 		PORT_CTL |= CTL_EN;
0x00BF	0x1283      	BCF        STATUS, 5
0x00C0	0x1303      	BCF        STATUS, 6
0x00C1	0x1606      	BSF        PORTB, 4
;ks0108.c,17 :: 		asm nop;
0x00C2	0x0000      	NOP
;ks0108.c,18 :: 		asm nop;
0x00C3	0x0000      	NOP
;ks0108.c,19 :: 		asm nop;
0x00C4	0x0000      	NOP
;ks0108.c,20 :: 		asm nop;
0x00C5	0x0000      	NOP
;ks0108.c,22 :: 		PORT_CTL &= ~CTL_EN;
0x00C6	0x1206      	BCF        PORTB, 4
;ks0108.c,25 :: 		asm nop;
0x00C7	0x0000      	NOP
;ks0108.c,26 :: 		asm nop;
0x00C8	0x0000      	NOP
;ks0108.c,27 :: 		asm nop;
0x00C9	0x0000      	NOP
;ks0108.c,28 :: 		asm nop;
0x00CA	0x0000      	NOP
;ks0108.c,30 :: 		}
0x00CB	0x0008      	RETURN
; end of _ks0108_enable
_ks0108_command:
;ks0108.c,101 :: 		void ks0108_command(unsigned char cmd, unsigned char controller)
;ks0108.c,104 :: 		PORT_CTL = CTL_RST;
0x00CC	0x3020      	MOVLW      32
0x00CD	0x1283      	BCF        STATUS, 5
0x00CE	0x1303      	BCF        STATUS, 6
0x00CF	0x0086      	MOVWF      PORTB
;ks0108.c,107 :: 		if (controller == KS0108_CONTROLLER0) {
0x00D0	0x1703      	BSF        STATUS, 6
0x00D1	0x082A      	MOVF       FARG_ks0108_command_controller, 0
0x00D2	0x3A00      	XORLW      0
0x00D3	0x1D03      	BTFSS      STATUS, 2
0x00D4	0x28D7      	GOTO       L_ks0108_command8
;ks0108.c,108 :: 		PORT_CTL |= CTL_C0;
0x00D5	0x1486      	BSF        PORTB, 1
;ks0108.c,109 :: 		} else {
0x00D6	0x28D8      	GOTO       L_ks0108_command9
L_ks0108_command8:
;ks0108.c,110 :: 		PORT_CTL |= CTL_C1;
0x00D7	0x1406      	BSF        PORTB, 0
;ks0108.c,111 :: 		}
L_ks0108_command9:
;ks0108.c,114 :: 		REG_DATA = 0x00;
0x00D8	0x1683      	BSF        STATUS, 5
0x00D9	0x1303      	BCF        STATUS, 6
0x00DA	0x0188      	CLRF       TRISD
;ks0108.c,115 :: 		PORT_DATA = cmd;
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1703      	BSF        STATUS, 6
0x00DD	0x0829      	MOVF       FARG_ks0108_command_cmd, 0
0x00DE	0x1303      	BCF        STATUS, 6
0x00DF	0x0088      	MOVWF      PORTD
;ks0108.c,118 :: 		ks0108_enable();
0x00E0	0x20BF      	CALL       _ks0108_enable
;ks0108.c,119 :: 		}
0x00E1	0x0008      	RETURN
; end of _ks0108_command
_ks0108_locate:
;ks0108.c,72 :: 		void ks0108_locate(unsigned short x, unsigned short y)
;ks0108.c,76 :: 		ks0108_x = x;
0x00E2	0x1283      	BCF        STATUS, 5
0x00E3	0x1703      	BSF        STATUS, 6
0x00E4	0x0826      	MOVF       FARG_ks0108_locate_x, 0
0x00E5	0x1303      	BCF        STATUS, 6
0x00E6	0x00D5      	MOVWF      _ks0108_x
;ks0108.c,77 :: 		ks0108_y = y;
0x00E7	0x1703      	BSF        STATUS, 6
0x00E8	0x0827      	MOVF       FARG_ks0108_locate_y, 0
0x00E9	0x1303      	BCF        STATUS, 6
0x00EA	0x00D6      	MOVWF      _ks0108_y
;ks0108.c,80 :: 		ks0108_page = (y >> 3);
0x00EB	0x1703      	BSF        STATUS, 6
0x00EC	0x0827      	MOVF       FARG_ks0108_locate_y, 0
0x00ED	0x1303      	BCF        STATUS, 6
0x00EE	0x00D7      	MOVWF      _ks0108_page
0x00EF	0x0CD7      	RRF        _ks0108_page, 1
0x00F0	0x13D7      	BCF        _ks0108_page, 7
0x00F1	0x0CD7      	RRF        _ks0108_page, 1
0x00F2	0x13D7      	BCF        _ks0108_page, 7
0x00F3	0x0CD7      	RRF        _ks0108_page, 1
0x00F4	0x13D7      	BCF        _ks0108_page, 7
;ks0108.c,83 :: 		if (x >= 64) {
0x00F5	0x3040      	MOVLW      64
0x00F6	0x1703      	BSF        STATUS, 6
0x00F7	0x0226      	SUBWF      FARG_ks0108_locate_x, 0
0x00F8	0x1C03      	BTFSS      STATUS, 0
0x00F9	0x28FF      	GOTO       L_ks0108_locate6
;ks0108.c,84 :: 		controller = KS0108_CONTROLLER1;
0x00FA	0x3001      	MOVLW      1
0x00FB	0x00A8      	MOVWF      ks0108_locate_controller_L0
;ks0108.c,85 :: 		x -= 64;
0x00FC	0x3040      	MOVLW      64
0x00FD	0x02A6      	SUBWF      FARG_ks0108_locate_x, 1
;ks0108.c,86 :: 		} else {
0x00FE	0x2900      	GOTO       L_ks0108_locate7
L_ks0108_locate6:
;ks0108.c,87 :: 		controller = KS0108_CONTROLLER0;
0x00FF	0x01A8      	CLRF       ks0108_locate_controller_L0
;ks0108.c,88 :: 		}
L_ks0108_locate7:
;ks0108.c,91 :: 		ks0108_command(CMD_SET_PAGE | ks0108_page, KS0108_CONTROLLER0);
0x0100	0x30B8      	MOVLW      184
0x0101	0x1303      	BCF        STATUS, 6
0x0102	0x0457      	IORWF      _ks0108_page, 0
0x0103	0x1703      	BSF        STATUS, 6
0x0104	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0105	0x01AA      	CLRF       FARG_ks0108_command_controller
0x0106	0x20CC      	CALL       _ks0108_command
;ks0108.c,92 :: 		ks0108_command(CMD_SET_PAGE | ks0108_page, KS0108_CONTROLLER1);
0x0107	0x30B8      	MOVLW      184
0x0108	0x0457      	IORWF      _ks0108_page, 0
0x0109	0x1703      	BSF        STATUS, 6
0x010A	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x010B	0x3001      	MOVLW      1
0x010C	0x00AA      	MOVWF      FARG_ks0108_command_controller
0x010D	0x20CC      	CALL       _ks0108_command
;ks0108.c,95 :: 		ks0108_command(CMD_SET_ADD | x, controller);
0x010E	0x3040      	MOVLW      64
0x010F	0x1703      	BSF        STATUS, 6
0x0110	0x0426      	IORWF      FARG_ks0108_locate_x, 0
0x0111	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0112	0x0828      	MOVF       ks0108_locate_controller_L0, 0
0x0113	0x00AA      	MOVWF      FARG_ks0108_command_controller
0x0114	0x20CC      	CALL       _ks0108_command
;ks0108.c,98 :: 		}
0x0115	0x0008      	RETURN
; end of _ks0108_locate
_ks0108_data_read:
;ks0108.c,283 :: 		unsigned char ks0108_data_read()
;ks0108.c,289 :: 		PORT_DATA = 0x00;
0x0116	0x1283      	BCF        STATUS, 5
0x0117	0x1303      	BCF        STATUS, 6
0x0118	0x0188      	CLRF       PORTD
;ks0108.c,290 :: 		REG_DATA = 0xff;
0x0119	0x30FF      	MOVLW      255
0x011A	0x1683      	BSF        STATUS, 5
0x011B	0x0088      	MOVWF      TRISD
;ks0108.c,293 :: 		PORT_CTL = CTL_RST;
0x011C	0x3020      	MOVLW      32
0x011D	0x1283      	BCF        STATUS, 5
0x011E	0x0086      	MOVWF      PORTB
;ks0108.c,296 :: 		if (ks0108_x >= 64) {
0x011F	0x3040      	MOVLW      64
0x0120	0x0255      	SUBWF      _ks0108_x, 0
0x0121	0x1C03      	BTFSS      STATUS, 0
0x0122	0x2925      	GOTO       L_ks0108_data_read46
;ks0108.c,297 :: 		PORT_CTL |= CTL_C1;
0x0123	0x1406      	BSF        PORTB, 0
;ks0108.c,298 :: 		} else {
0x0124	0x2926      	GOTO       L_ks0108_data_read47
L_ks0108_data_read46:
;ks0108.c,299 :: 		PORT_CTL |= CTL_C0;
0x0125	0x1486      	BSF        PORTB, 1
;ks0108.c,300 :: 		}
L_ks0108_data_read47:
;ks0108.c,303 :: 		PORT_CTL |= CTL_DI;
0x0126	0x1506      	BSF        PORTB, 2
;ks0108.c,304 :: 		PORT_CTL |= CTL_RW;
0x0127	0x1586      	BSF        PORTB, 3
;ks0108.c,307 :: 		PORT_CTL |= CTL_EN;
0x0128	0x1606      	BSF        PORTB, 4
;ks0108.c,308 :: 		asm nop;
0x0129	0x0000      	NOP
;ks0108.c,309 :: 		asm nop;
0x012A	0x0000      	NOP
;ks0108.c,310 :: 		asm nop;
0x012B	0x0000      	NOP
;ks0108.c,311 :: 		asm nop;
0x012C	0x0000      	NOP
;ks0108.c,314 :: 		display_data = PORT_DATA;
0x012D	0x0808      	MOVF       PORTD, 0
0x012E	0x1703      	BSF        STATUS, 6
0x012F	0x00A5      	MOVWF      ks0108_data_read_display_data_L0
;ks0108.c,317 :: 		PORT_CTL &= ~CTL_EN;
0x0130	0x1206      	BCF        PORTB, 4
;ks0108.c,318 :: 		asm nop;
0x0131	0x0000      	NOP
;ks0108.c,319 :: 		asm nop;
0x0132	0x0000      	NOP
;ks0108.c,320 :: 		asm nop;
0x0133	0x0000      	NOP
;ks0108.c,321 :: 		asm nop;
0x0134	0x0000      	NOP
;ks0108.c,324 :: 		ks0108_locate(ks0108_x, ks0108_y);
0x0135	0x1303      	BCF        STATUS, 6
0x0136	0x0855      	MOVF       _ks0108_x, 0
0x0137	0x1703      	BSF        STATUS, 6
0x0138	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x0139	0x1303      	BCF        STATUS, 6
0x013A	0x0856      	MOVF       _ks0108_y, 0
0x013B	0x1703      	BSF        STATUS, 6
0x013C	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x013D	0x20E2      	CALL       _ks0108_locate
;ks0108.c,327 :: 		return display_data;
0x013E	0x1703      	BSF        STATUS, 6
0x013F	0x0825      	MOVF       ks0108_data_read_display_data_L0, 0
0x0140	0x00F0      	MOVWF      R0
;ks0108.c,329 :: 		}
0x0141	0x0008      	RETURN
; end of _ks0108_data_read
_ks0108_data_write:
;ks0108.c,333 :: 		void ks0108_data_write(unsigned char d)
;ks0108.c,337 :: 		PORT_CTL = CTL_RST;
0x0142	0x3020      	MOVLW      32
0x0143	0x1283      	BCF        STATUS, 5
0x0144	0x1303      	BCF        STATUS, 6
0x0145	0x0086      	MOVWF      PORTB
;ks0108.c,340 :: 		if (ks0108_x >= 64) {
0x0146	0x3040      	MOVLW      64
0x0147	0x0255      	SUBWF      _ks0108_x, 0
0x0148	0x1C03      	BTFSS      STATUS, 0
0x0149	0x294C      	GOTO       L_ks0108_data_write48
;ks0108.c,341 :: 		PORT_CTL |= CTL_C1;
0x014A	0x1406      	BSF        PORTB, 0
;ks0108.c,342 :: 		} else {
0x014B	0x294D      	GOTO       L_ks0108_data_write49
L_ks0108_data_write48:
;ks0108.c,343 :: 		PORT_CTL |= CTL_C0;
0x014C	0x1486      	BSF        PORTB, 1
;ks0108.c,344 :: 		}
L_ks0108_data_write49:
;ks0108.c,347 :: 		PORT_CTL |= CTL_DI;
0x014D	0x1506      	BSF        PORTB, 2
;ks0108.c,350 :: 		REG_DATA = 0x00;
0x014E	0x1683      	BSF        STATUS, 5
0x014F	0x0188      	CLRF       TRISD
;ks0108.c,351 :: 		PORT_DATA = d;
0x0150	0x1283      	BCF        STATUS, 5
0x0151	0x1703      	BSF        STATUS, 6
0x0152	0x0825      	MOVF       FARG_ks0108_data_write_d, 0
0x0153	0x1303      	BCF        STATUS, 6
0x0154	0x0088      	MOVWF      PORTD
;ks0108.c,354 :: 		ks0108_enable();
0x0155	0x20BF      	CALL       _ks0108_enable
;ks0108.c,357 :: 		ks0108_x++;
0x0156	0x0AD5      	INCF       _ks0108_x, 1
;ks0108.c,359 :: 		}
0x0157	0x0008      	RETURN
; end of _ks0108_data_write
_Div_16x16_S_L:
;__Lib_Math.c,420 :: 		
;__Lib_Math.c,426 :: 		
0x0158	0x0D71      	RLF        R1, 0
;__Lib_Math.c,427 :: 		
0x0159	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,428 :: 		
0x015A	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,429 :: 		
0x015B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,430 :: 		
0x015C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,431 :: 		
0x015D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,432 :: 		
0x015E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,433 :: 		
0x015F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,434 :: 		
0x0160	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,435 :: 		
0x0161	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,436 :: 		
0x0162	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,438 :: 		
0x0163	0x300F      	MOVLW      15
;__Lib_Math.c,439 :: 		
0x0164	0x00FC      	MOVWF      R12
;__Lib_Math.c,441 :: 		
0x0165	0x0D71      	RLF        R1, 0
;__Lib_Math.c,442 :: 		
0x0166	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,443 :: 		
0x0167	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,444 :: 		
0x0168	0x0874      	MOVF       R4, 0
;__Lib_Math.c,446 :: 		
0x0169	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,447 :: 		
0x016A	0x2971      	GOTO       $+7
;__Lib_Math.c,448 :: 		
0x016B	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,449 :: 		
0x016C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,450 :: 		
0x016D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,451 :: 		
0x016E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,452 :: 		
0x016F	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,453 :: 		
0x0170	0x2976      	GOTO       $+6
;__Lib_Math.c,455 :: 		
0x0171	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,456 :: 		
0x0172	0x0875      	MOVF       R5, 0
;__Lib_Math.c,457 :: 		
0x0173	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,458 :: 		
0x0174	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,459 :: 		
0x0175	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,461 :: 		
0x0176	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,462 :: 		
0x0177	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,464 :: 		
0x0178	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,465 :: 		
0x0179	0x2965      	GOTO       $-20
;__Lib_Math.c,467 :: 		
0x017A	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,468 :: 		
0x017B	0x2982      	GOTO       $+7
;__Lib_Math.c,469 :: 		
0x017C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,470 :: 		
0x017D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,471 :: 		
0x017E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,472 :: 		
0x017F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,473 :: 		
0x0180	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,474 :: 		
0x0181	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,475 :: 		
0x0182	0x0000      	NOP
;__Lib_Math.c,477 :: 		
0x0183	0x0008      	RETURN
; end of _Div_16x16_S_L
_Div_16x16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0184	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0185	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0186	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0187	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0188	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0189	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x018A	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x018B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x018C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x018D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x018E	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x018F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0190	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0191	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0192	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0193	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0194	0x299C      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0195	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0196	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0197	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0198	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0199	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x019A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x019B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x019C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x019D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x019E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x019F	0x298A      	GOTO       $-21
;__Lib_Math.c,251 :: 		
0x01A0	0x0008      	RETURN
; end of _Div_16x16_U
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x01A1	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x01A2	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x01A3	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x01A4	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x01A5	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x01A6	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x01A7	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x01A8	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x01A9	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x01AA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x01AB	0x29B5      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x01AC	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x01AD	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x01AE	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x01AF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x01B0	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x01B1	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x01B2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x01B3	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x01B4	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x01B5	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x01B6	0x29BD      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x01B7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x01B8	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x01B9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x01BA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x01BB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x01BC	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x01BD	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x01BE	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x01BF	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x01C0	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x01C1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x01C2	0x29A8      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x01C3	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x01C4	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x01C5	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x01C6	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x01C7	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x01C8	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x01C9	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x01CA	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x01CB	0x0008      	RETURN
; end of _Mul_16x16_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x01CC	0x1283      	BCF        STATUS, 5
0x01CD	0x1303      	BCF        STATUS, 6
0x01CE	0x0827      	MOVF       ___DoICPAddr+1, 0
0x01CF	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x01D0	0x0826      	MOVF       ___DoICPAddr, 0
0x01D1	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x01D2	0x0008      	RETURN
; end of _____DoICP
_ks0108_pset:
;ks0108.c,122 :: 		void ks0108_pset(unsigned short x, unsigned short y, unsigned short c)
;ks0108.c,126 :: 		ks0108_locate(x,y);
0x01D3	0x1283      	BCF        STATUS, 5
0x01D4	0x1703      	BSF        STATUS, 6
0x01D5	0x0821      	MOVF       FARG_ks0108_pset_x, 0
0x01D6	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x01D7	0x0822      	MOVF       FARG_ks0108_pset_y, 0
0x01D8	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x01D9	0x20E2      	CALL       _ks0108_locate
;ks0108.c,129 :: 		ks0108_data_read();
0x01DA	0x2116      	CALL       _ks0108_data_read
;ks0108.c,130 :: 		display_data = ks0108_data_read();
0x01DB	0x2116      	CALL       _ks0108_data_read
0x01DC	0x0870      	MOVF       R0, 0
0x01DD	0x00A4      	MOVWF      ks0108_pset_display_data_L0
;ks0108.c,133 :: 		if (c)
0x01DE	0x0823      	MOVF       FARG_ks0108_pset_c, 0
0x01DF	0x1903      	BTFSC      STATUS, 2
0x01E0	0x29F2      	GOTO       L_ks0108_pset10
;ks0108.c,134 :: 		display_data |= 1 << (y % 8);
0x01E1	0x3007      	MOVLW      7
0x01E2	0x0522      	ANDWF      FARG_ks0108_pset_y, 0
0x01E3	0x00F0      	MOVWF      R0
0x01E4	0x0870      	MOVF       R0, 0
0x01E5	0x00F1      	MOVWF      R1
0x01E6	0x3001      	MOVLW      1
0x01E7	0x00F0      	MOVWF      R0
0x01E8	0x0871      	MOVF       R1, 0
L__ks0108_pset51:
0x01E9	0x1903      	BTFSC      STATUS, 2
0x01EA	0x29EF      	GOTO       L__ks0108_pset52
0x01EB	0x0DF0      	RLF        R0, 1
0x01EC	0x1070      	BCF        R0, 0
0x01ED	0x3EFF      	ADDLW      255
0x01EE	0x29E9      	GOTO       L__ks0108_pset51
L__ks0108_pset52:
0x01EF	0x0870      	MOVF       R0, 0
0x01F0	0x04A4      	IORWF      ks0108_pset_display_data_L0, 1
0x01F1	0x2A03      	GOTO       L_ks0108_pset11
L_ks0108_pset10:
;ks0108.c,136 :: 		display_data &= ~(1 << (y % 8));
0x01F2	0x3007      	MOVLW      7
0x01F3	0x0522      	ANDWF      FARG_ks0108_pset_y, 0
0x01F4	0x00F0      	MOVWF      R0
0x01F5	0x0870      	MOVF       R0, 0
0x01F6	0x00F1      	MOVWF      R1
0x01F7	0x3001      	MOVLW      1
0x01F8	0x00F0      	MOVWF      R0
0x01F9	0x0871      	MOVF       R1, 0
L__ks0108_pset53:
0x01FA	0x1903      	BTFSC      STATUS, 2
0x01FB	0x2A00      	GOTO       L__ks0108_pset54
0x01FC	0x0DF0      	RLF        R0, 1
0x01FD	0x1070      	BCF        R0, 0
0x01FE	0x3EFF      	ADDLW      255
0x01FF	0x29FA      	GOTO       L__ks0108_pset53
L__ks0108_pset54:
0x0200	0x09F0      	COMF       R0, 1
0x0201	0x0870      	MOVF       R0, 0
0x0202	0x05A4      	ANDWF      ks0108_pset_display_data_L0, 1
L_ks0108_pset11:
;ks0108.c,139 :: 		ks0108_data_write(display_data);
0x0203	0x0824      	MOVF       ks0108_pset_display_data_L0, 0
0x0204	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x0205	0x2142      	CALL       _ks0108_data_write
;ks0108.c,140 :: 		}
0x0206	0x0008      	RETURN
; end of _ks0108_pset
_Div_16x16_S:
;__Lib_Math.c,479 :: 		
;__Lib_Math.c,487 :: 		
0x0207	0x1283      	BCF        STATUS, 5
0x0208	0x1303      	BCF        STATUS, 6
0x0209	0x0874      	MOVF       R4, 0
0x020A	0x3A00      	XORLW      0
0x020B	0x1D03      	BTFSS      STATUS, 2
0x020C	0x2A16      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,488 :: 		
0x020D	0x0875      	MOVF       R5, 0
0x020E	0x3A00      	XORLW      0
0x020F	0x1D03      	BTFSS      STATUS, 2
0x0210	0x2A16      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,489 :: 		
0x0211	0x30FF      	MOVLW      255
0x0212	0x00F0      	MOVWF      R0
;__Lib_Math.c,490 :: 		
0x0213	0x307F      	MOVLW      127
0x0214	0x00F1      	MOVWF      R1
;__Lib_Math.c,491 :: 		
0x0215	0x0008      	RETURN
;__Lib_Math.c,492 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,495 :: 		
0x0216	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,496 :: 		
0x0217	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,497 :: 		
0x0218	0x01FD      	CLRF       R13
;__Lib_Math.c,498 :: 		
0x0219	0x01F9      	CLRF       R9
;__Lib_Math.c,499 :: 		
0x021A	0x01F8      	CLRF       R8
;__Lib_Math.c,500 :: 		
0x021B	0x0871      	MOVF       R1, 0
;__Lib_Math.c,501 :: 		
0x021C	0x0470      	IORWF      R0, 0
;__Lib_Math.c,502 :: 		
0x021D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,503 :: 		
0x021E	0x3400      	RETLW      0
;__Lib_Math.c,505 :: 		
0x021F	0x0871      	MOVF       R1, 0
;__Lib_Math.c,506 :: 		
0x0220	0x0675      	XORWF      R5, 0
;__Lib_Math.c,507 :: 		
0x0221	0x00FA      	MOVWF      R10
;__Lib_Math.c,508 :: 		
0x0222	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,509 :: 		
0x0223	0x09FD      	COMF       R13, 1
;__Lib_Math.c,511 :: 		
0x0224	0x01FB      	CLRF       R11
;__Lib_Math.c,513 :: 		
0x0225	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,514 :: 		
0x0226	0x2A2C      	GOTO       $+6
;__Lib_Math.c,516 :: 		
0x0227	0x09F4      	COMF       R4, 1
;__Lib_Math.c,517 :: 		
0x0228	0x09F5      	COMF       R5, 1
;__Lib_Math.c,518 :: 		
0x0229	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,519 :: 		
0x022A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,520 :: 		
0x022B	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,522 :: 		
0x022C	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,523 :: 		
0x022D	0x2A33      	GOTO       $+6
;__Lib_Math.c,525 :: 		
0x022E	0x09F0      	COMF       R0, 1
;__Lib_Math.c,526 :: 		
0x022F	0x09F1      	COMF       R1, 1
;__Lib_Math.c,527 :: 		
0x0230	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,528 :: 		
0x0231	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,529 :: 		
0x0232	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,531 :: 		
0x0233	0x0871      	MOVF       R1, 0
;__Lib_Math.c,532 :: 		
0x0234	0x0475      	IORWF      R5, 0
;__Lib_Math.c,533 :: 		
0x0235	0x00FA      	MOVWF      R10
;__Lib_Math.c,534 :: 		
0x0236	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,535 :: 		
0x0237	0x2A48      	GOTO       $+17
;__Lib_Math.c,537 :: 		
0x0238	0x2158      	CALL       _Div_16x16_S_L
;__Lib_Math.c,539 :: 		
0x0239	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,540 :: 		
0x023A	0x2A5B      	GOTO       $+33
;__Lib_Math.c,542 :: 		
0x023B	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,543 :: 		
0x023C	0x3400      	RETLW      0
;__Lib_Math.c,545 :: 		
0x023D	0x09F0      	COMF       R0, 1
;__Lib_Math.c,546 :: 		
0x023E	0x09F1      	COMF       R1, 1
;__Lib_Math.c,547 :: 		
0x023F	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,548 :: 		
0x0240	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,549 :: 		
0x0241	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,551 :: 		
0x0242	0x09F8      	COMF       R8, 1
;__Lib_Math.c,552 :: 		
0x0243	0x09F9      	COMF       R9, 1
;__Lib_Math.c,553 :: 		
0x0244	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,554 :: 		
0x0245	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,555 :: 		
0x0246	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,557 :: 		
0x0247	0x3400      	RETLW      0
;__Lib_Math.c,559 :: 		
0x0248	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,560 :: 		
0x0249	0x2A57      	GOTO       $+14
;__Lib_Math.c,561 :: 		
0x024A	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,562 :: 		
0x024B	0x2A53      	GOTO       $+8
;__Lib_Math.c,563 :: 		
0x024C	0x0871      	MOVF       R1, 0
;__Lib_Math.c,564 :: 		
0x024D	0x00F9      	MOVWF      R9
;__Lib_Math.c,565 :: 		
0x024E	0x0870      	MOVF       R0, 0
;__Lib_Math.c,566 :: 		
0x024F	0x00F8      	MOVWF      R8
;__Lib_Math.c,567 :: 		
0x0250	0x01F1      	CLRF       R1
;__Lib_Math.c,568 :: 		
0x0251	0x01F0      	CLRF       R0
;__Lib_Math.c,569 :: 		
0x0252	0x2A3B      	GOTO       $-23
;__Lib_Math.c,570 :: 		
0x0253	0x01F1      	CLRF       R1
;__Lib_Math.c,571 :: 		
0x0254	0x01F0      	CLRF       R0
;__Lib_Math.c,572 :: 		
0x0255	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,573 :: 		
0x0256	0x3400      	RETLW      0
;__Lib_Math.c,575 :: 		
0x0257	0x09F1      	COMF       R1, 1
;__Lib_Math.c,576 :: 		
0x0258	0x09F0      	COMF       R0, 1
;__Lib_Math.c,577 :: 		
0x0259	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,578 :: 		
0x025A	0x2A38      	GOTO       $-34
;__Lib_Math.c,580 :: 		
0x025B	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,581 :: 		
0x025C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,582 :: 		
0x025D	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,583 :: 		
0x025E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,584 :: 		
0x025F	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,585 :: 		
0x0260	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,586 :: 		
0x0261	0x2A3B      	GOTO       $-38
;__Lib_Math.c,587 :: 		
0x0262	0x0875      	MOVF       R5, 0
;__Lib_Math.c,588 :: 		
0x0263	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,589 :: 		
0x0264	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,590 :: 		
0x0265	0x2A3B      	GOTO       $-42
;__Lib_Math.c,591 :: 		
0x0266	0x01F9      	CLRF       R9
;__Lib_Math.c,592 :: 		
0x0267	0x01F8      	CLRF       R8
;__Lib_Math.c,593 :: 		
0x0268	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,594 :: 		
0x0269	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,595 :: 		
0x026A	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,596 :: 		
0x026B	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,597 :: 		
0x026C	0x2A3B      	GOTO       $-49
;__Lib_Math.c,598 :: 		
0x026D	0x0000      	NOP
;__Lib_Math.c,599 :: 		
0x026E	0x34FF      	RETLW      255
;__Lib_Math.c,601 :: 		
0x026F	0x0008      	RETURN
; end of _Div_16x16_S
_Mul_8x8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x0270	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x0271	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x0272	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x0273	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x0274	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x0275	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x0276	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x0277	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x0278	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x0279	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x027A	0x2A7F      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x027B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x027C	0x2A78      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x027D	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x027E	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x027F	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x0280	0x2A84      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x0281	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x0282	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x0283	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x0284	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x0285	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x0286	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x0287	0x2A81      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
0x0288	0x0008      	RETURN
; end of _Mul_8x8_U
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x0289	0x1283      	BCF        STATUS, 5
0x028A	0x1703      	BSF        STATUS, 6
0x028B	0x0815      	MOVF       FARG_EEPROM_Read_Address, 0
0x028C	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x028D	0x1683      	BSF        STATUS, 5
0x028E	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x028F	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x0290	0x1283      	BCF        STATUS, 5
0x0291	0x080C      	MOVF       EEDATA, 0
0x0292	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
0x0293	0x0008      	RETURN
; end of _EEPROM_Read
_ks0108_fill:
;ks0108.c,60 :: 		void ks0108_fill(unsigned char pattern)
;ks0108.c,63 :: 		for (i=0; i<8; i++) {
0x0294	0x1283      	BCF        STATUS, 5
0x0295	0x1703      	BSF        STATUS, 6
0x0296	0x0196      	CLRF       ks0108_fill_i_L0
L_ks0108_fill0:
0x0297	0x3008      	MOVLW      8
0x0298	0x0216      	SUBWF      ks0108_fill_i_L0, 0
0x0299	0x1803      	BTFSC      STATUS, 0
0x029A	0x2AB3      	GOTO       L_ks0108_fill1
;ks0108.c,64 :: 		ks0108_locate(0, i<<3);
0x029B	0x01A6      	CLRF       FARG_ks0108_locate_x
0x029C	0x0816      	MOVF       ks0108_fill_i_L0, 0
0x029D	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x029E	0x0DA7      	RLF        FARG_ks0108_locate_y, 1
0x029F	0x1027      	BCF        FARG_ks0108_locate_y, 0
0x02A0	0x0DA7      	RLF        FARG_ks0108_locate_y, 1
0x02A1	0x1027      	BCF        FARG_ks0108_locate_y, 0
0x02A2	0x0DA7      	RLF        FARG_ks0108_locate_y, 1
0x02A3	0x1027      	BCF        FARG_ks0108_locate_y, 0
0x02A4	0x20E2      	CALL       _ks0108_locate
;ks0108.c,65 :: 		for (j=0; j<128; j++)
0x02A5	0x1703      	BSF        STATUS, 6
0x02A6	0x0197      	CLRF       ks0108_fill_j_L0
L_ks0108_fill3:
0x02A7	0x3080      	MOVLW      128
0x02A8	0x0217      	SUBWF      ks0108_fill_j_L0, 0
0x02A9	0x1803      	BTFSC      STATUS, 0
0x02AA	0x2AB1      	GOTO       L_ks0108_fill4
;ks0108.c,66 :: 		ks0108_data_write(pattern);
0x02AB	0x0815      	MOVF       FARG_ks0108_fill_pattern, 0
0x02AC	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x02AD	0x2142      	CALL       _ks0108_data_write
;ks0108.c,65 :: 		for (j=0; j<128; j++)
0x02AE	0x1703      	BSF        STATUS, 6
0x02AF	0x0A97      	INCF       ks0108_fill_j_L0, 1
;ks0108.c,66 :: 		ks0108_data_write(pattern);
0x02B0	0x2AA7      	GOTO       L_ks0108_fill3
L_ks0108_fill4:
;ks0108.c,63 :: 		for (i=0; i<8; i++) {
0x02B1	0x0A96      	INCF       ks0108_fill_i_L0, 1
;ks0108.c,68 :: 		}
0x02B2	0x2A97      	GOTO       L_ks0108_fill0
L_ks0108_fill1:
;ks0108.c,69 :: 		}
0x02B3	0x0008      	RETURN
; end of _ks0108_fill
_itoa:
;tetris.c,63 :: 		void itoa(char *target, unsigned int value, char i, unsigned int base)
;tetris.c,67 :: 		do {
L_itoa0:
;tetris.c,68 :: 		i--;
0x02B4	0x1283      	BCF        STATUS, 5
0x02B5	0x1703      	BSF        STATUS, 6
0x02B6	0x0398      	DECF       FARG_itoa_i, 1
;tetris.c,69 :: 		target[i] = digits[value % base];
0x02B7	0x0818      	MOVF       FARG_itoa_i, 0
0x02B8	0x0715      	ADDWF      FARG_itoa_target, 0
0x02B9	0x009B      	MOVWF      FLOC__itoa
0x02BA	0x0819      	MOVF       FARG_itoa_base, 0
0x02BB	0x00F4      	MOVWF      R4
0x02BC	0x081A      	MOVF       FARG_itoa_base+1, 0
0x02BD	0x00F5      	MOVWF      R4+1
0x02BE	0x0816      	MOVF       FARG_itoa_value, 0
0x02BF	0x00F0      	MOVWF      R0
0x02C0	0x0817      	MOVF       FARG_itoa_value+1, 0
0x02C1	0x00F1      	MOVWF      R0+1
0x02C2	0x2184      	CALL       _Div_16x16_U
0x02C3	0x0878      	MOVF       R8, 0
0x02C4	0x00F0      	MOVWF      R0
0x02C5	0x0879      	MOVF       R8+1, 0
0x02C6	0x00F1      	MOVWF      R0+1
0x02C7	0x30C8      	MOVLW      itoa_digits_L0
0x02C8	0x07F0      	ADDWF      R0, 1
0x02C9	0x3018      	MOVLW      hi_addr(itoa_digits_L0)
0x02CA	0x1803      	BTFSC      STATUS, 0
0x02CB	0x3E01      	ADDLW      1
0x02CC	0x07F1      	ADDWF      R0+1, 1
0x02CD	0x0870      	MOVF       R0, 0
0x02CE	0x00A6      	MOVWF      ___DoICPAddr
0x02CF	0x0871      	MOVF       R0+1, 0
0x02D0	0x00A7      	MOVWF      ___DoICPAddr+1
0x02D1	0x21CC      	CALL       _____DoICP
0x02D2	0x118A      	BCF        PCLATH, 3
0x02D3	0x120A      	BCF        PCLATH, 4
0x02D4	0x00F0      	MOVWF      R0
0x02D5	0x1703      	BSF        STATUS, 6
0x02D6	0x081B      	MOVF       FLOC__itoa, 0
0x02D7	0x0084      	MOVWF      FSR
0x02D8	0x0870      	MOVF       R0, 0
0x02D9	0x0080      	MOVWF      INDF
;tetris.c,70 :: 		value /= base;
0x02DA	0x0819      	MOVF       FARG_itoa_base, 0
0x02DB	0x00F4      	MOVWF      R4
0x02DC	0x081A      	MOVF       FARG_itoa_base+1, 0
0x02DD	0x00F5      	MOVWF      R4+1
0x02DE	0x0816      	MOVF       FARG_itoa_value, 0
0x02DF	0x00F0      	MOVWF      R0
0x02E0	0x0817      	MOVF       FARG_itoa_value+1, 0
0x02E1	0x00F1      	MOVWF      R0+1
0x02E2	0x2184      	CALL       _Div_16x16_U
0x02E3	0x0870      	MOVF       R0, 0
0x02E4	0x1703      	BSF        STATUS, 6
0x02E5	0x0096      	MOVWF      FARG_itoa_value
0x02E6	0x0871      	MOVF       R0+1, 0
0x02E7	0x0097      	MOVWF      FARG_itoa_value+1
;tetris.c,71 :: 		} while (value && i);
0x02E8	0x0870      	MOVF       R0, 0
0x02E9	0x0471      	IORWF      R0+1, 0
0x02EA	0x1903      	BTFSC      STATUS, 2
0x02EB	0x2AF0      	GOTO       L__itoa216
0x02EC	0x0818      	MOVF       FARG_itoa_i, 0
0x02ED	0x1903      	BTFSC      STATUS, 2
0x02EE	0x2AF0      	GOTO       L__itoa216
0x02EF	0x2AB4      	GOTO       L_itoa0
L__itoa216:
;tetris.c,72 :: 		}
0x02F0	0x0008      	RETURN
; end of _itoa
_ks0108_rect:
;ks0108.c,144 :: 		void ks0108_rect(unsigned short x, unsigned short y, unsigned short width, unsigned short height, unsigned short c)
;ks0108.c,148 :: 		for (j=y; j<y+height;j++) {
0x02F1	0x1283      	BCF        STATUS, 5
0x02F2	0x1703      	BSF        STATUS, 6
0x02F3	0x0816      	MOVF       FARG_ks0108_rect_y, 0
0x02F4	0x009B      	MOVWF      ks0108_rect_j_L0
L_ks0108_rect12:
0x02F5	0x0818      	MOVF       FARG_ks0108_rect_height, 0
0x02F6	0x0716      	ADDWF      FARG_ks0108_rect_y, 0
0x02F7	0x00F1      	MOVWF      R1
0x02F8	0x01F2      	CLRF       R1+1
0x02F9	0x1803      	BTFSC      STATUS, 0
0x02FA	0x0AF2      	INCF       R1+1, 1
0x02FB	0x3080      	MOVLW      128
0x02FC	0x00F0      	MOVWF      R0
0x02FD	0x3080      	MOVLW      128
0x02FE	0x0672      	XORWF      R1+1, 0
0x02FF	0x0270      	SUBWF      R0, 0
0x0300	0x1D03      	BTFSS      STATUS, 2
0x0301	0x2B04      	GOTO       L__ks0108_rect55
0x0302	0x0871      	MOVF       R1, 0
0x0303	0x021B      	SUBWF      ks0108_rect_j_L0, 0
L__ks0108_rect55:
0x0304	0x1803      	BTFSC      STATUS, 0
0x0305	0x2B54      	GOTO       L_ks0108_rect13
;ks0108.c,150 :: 		if ( (j==y) || (j==(y+(height-1))) ) {
0x0306	0x081B      	MOVF       ks0108_rect_j_L0, 0
0x0307	0x0616      	XORWF      FARG_ks0108_rect_y, 0
0x0308	0x1903      	BTFSC      STATUS, 2
0x0309	0x2B21      	GOTO       L__ks0108_rect50
0x030A	0x3001      	MOVLW      1
0x030B	0x0218      	SUBWF      FARG_ks0108_rect_height, 0
0x030C	0x00F0      	MOVWF      R0
0x030D	0x01F1      	CLRF       R0+1
0x030E	0x1C03      	BTFSS      STATUS, 0
0x030F	0x03F1      	DECF       R0+1, 1
0x0310	0x0870      	MOVF       R0, 0
0x0311	0x0716      	ADDWF      FARG_ks0108_rect_y, 0
0x0312	0x00F2      	MOVWF      R2
0x0313	0x3000      	MOVLW      0
0x0314	0x1803      	BTFSC      STATUS, 0
0x0315	0x3E01      	ADDLW      1
0x0316	0x0771      	ADDWF      R0+1, 0
0x0317	0x00F3      	MOVWF      R2+1
0x0318	0x3000      	MOVLW      0
0x0319	0x0673      	XORWF      R2+1, 0
0x031A	0x1D03      	BTFSS      STATUS, 2
0x031B	0x2B1E      	GOTO       L__ks0108_rect56
0x031C	0x0872      	MOVF       R2, 0
0x031D	0x061B      	XORWF      ks0108_rect_j_L0, 0
L__ks0108_rect56:
0x031E	0x1903      	BTFSC      STATUS, 2
0x031F	0x2B21      	GOTO       L__ks0108_rect50
0x0320	0x2B3F      	GOTO       L_ks0108_rect17
L__ks0108_rect50:
;ks0108.c,152 :: 		for (i=x; i<x+width;i++) {
0x0321	0x0815      	MOVF       FARG_ks0108_rect_x, 0
0x0322	0x009A      	MOVWF      ks0108_rect_i_L0
L_ks0108_rect18:
0x0323	0x0817      	MOVF       FARG_ks0108_rect_width, 0
0x0324	0x0715      	ADDWF      FARG_ks0108_rect_x, 0
0x0325	0x00F1      	MOVWF      R1
0x0326	0x01F2      	CLRF       R1+1
0x0327	0x1803      	BTFSC      STATUS, 0
0x0328	0x0AF2      	INCF       R1+1, 1
0x0329	0x3080      	MOVLW      128
0x032A	0x00F0      	MOVWF      R0
0x032B	0x3080      	MOVLW      128
0x032C	0x0672      	XORWF      R1+1, 0
0x032D	0x0270      	SUBWF      R0, 0
0x032E	0x1D03      	BTFSS      STATUS, 2
0x032F	0x2B32      	GOTO       L__ks0108_rect57
0x0330	0x0871      	MOVF       R1, 0
0x0331	0x021A      	SUBWF      ks0108_rect_i_L0, 0
L__ks0108_rect57:
0x0332	0x1803      	BTFSC      STATUS, 0
0x0333	0x2B3E      	GOTO       L_ks0108_rect19
;ks0108.c,153 :: 		ks0108_pset(i, j, c);
0x0334	0x081A      	MOVF       ks0108_rect_i_L0, 0
0x0335	0x00A1      	MOVWF      FARG_ks0108_pset_x
0x0336	0x081B      	MOVF       ks0108_rect_j_L0, 0
0x0337	0x00A2      	MOVWF      FARG_ks0108_pset_y
0x0338	0x0819      	MOVF       FARG_ks0108_rect_c, 0
0x0339	0x00A3      	MOVWF      FARG_ks0108_pset_c
0x033A	0x21D3      	CALL       _ks0108_pset
;ks0108.c,152 :: 		for (i=x; i<x+width;i++) {
0x033B	0x1703      	BSF        STATUS, 6
0x033C	0x0A9A      	INCF       ks0108_rect_i_L0, 1
;ks0108.c,154 :: 		}
0x033D	0x2B23      	GOTO       L_ks0108_rect18
L_ks0108_rect19:
;ks0108.c,155 :: 		} else {
0x033E	0x2B51      	GOTO       L_ks0108_rect21
L_ks0108_rect17:
;ks0108.c,157 :: 		ks0108_pset(x,j,c);
0x033F	0x0815      	MOVF       FARG_ks0108_rect_x, 0
0x0340	0x00A1      	MOVWF      FARG_ks0108_pset_x
0x0341	0x081B      	MOVF       ks0108_rect_j_L0, 0
0x0342	0x00A2      	MOVWF      FARG_ks0108_pset_y
0x0343	0x0819      	MOVF       FARG_ks0108_rect_c, 0
0x0344	0x00A3      	MOVWF      FARG_ks0108_pset_c
0x0345	0x21D3      	CALL       _ks0108_pset
;ks0108.c,158 :: 		ks0108_pset(x+(width-1),j,c);
0x0346	0x1703      	BSF        STATUS, 6
0x0347	0x0317      	DECF       FARG_ks0108_rect_width, 0
0x0348	0x00F0      	MOVWF      R0
0x0349	0x0870      	MOVF       R0, 0
0x034A	0x0715      	ADDWF      FARG_ks0108_rect_x, 0
0x034B	0x00A1      	MOVWF      FARG_ks0108_pset_x
0x034C	0x081B      	MOVF       ks0108_rect_j_L0, 0
0x034D	0x00A2      	MOVWF      FARG_ks0108_pset_y
0x034E	0x0819      	MOVF       FARG_ks0108_rect_c, 0
0x034F	0x00A3      	MOVWF      FARG_ks0108_pset_c
0x0350	0x21D3      	CALL       _ks0108_pset
;ks0108.c,159 :: 		}
L_ks0108_rect21:
;ks0108.c,148 :: 		for (j=y; j<y+height;j++) {
0x0351	0x1703      	BSF        STATUS, 6
0x0352	0x0A9B      	INCF       ks0108_rect_j_L0, 1
;ks0108.c,160 :: 		}
0x0353	0x2AF5      	GOTO       L_ks0108_rect12
L_ks0108_rect13:
;ks0108.c,162 :: 		}
0x0354	0x0008      	RETURN
; end of _ks0108_rect
_build_shape_matrix:
;tetris.c,216 :: 		void build_shape_matrix(unsigned char *matrix, unsigned char type, unsigned char rotation)
;tetris.c,219 :: 		for (i=0;i<5;i++)
0x0355	0x1283      	BCF        STATUS, 5
0x0356	0x1703      	BSF        STATUS, 6
0x0357	0x0198      	CLRF       build_shape_matrix_i_L0
L_build_shape_matrix41:
0x0358	0x3005      	MOVLW      5
0x0359	0x0218      	SUBWF      build_shape_matrix_i_L0, 0
0x035A	0x1803      	BTFSC      STATUS, 0
0x035B	0x2B95      	GOTO       L_build_shape_matrix42
;tetris.c,220 :: 		matrix[i] = shapes_matrix[rotation][i][type];
0x035C	0x0818      	MOVF       build_shape_matrix_i_L0, 0
0x035D	0x0715      	ADDWF      FARG_build_shape_matrix_matrix, 0
0x035E	0x009B      	MOVWF      FLOC__build_shape_matrix+2
0x035F	0x0817      	MOVF       FARG_build_shape_matrix_rotation, 0
0x0360	0x00F0      	MOVWF      R0
0x0361	0x01F1      	CLRF       R0+1
0x0362	0x3023      	MOVLW      35
0x0363	0x00F4      	MOVWF      R4
0x0364	0x3000      	MOVLW      0
0x0365	0x00F5      	MOVWF      R4+1
0x0366	0x21A1      	CALL       _Mul_16x16_U
0x0367	0x3000      	MOVLW      _shapes_matrix
0x0368	0x07F0      	ADDWF      R0, 1
0x0369	0x3018      	MOVLW      hi_addr(_shapes_matrix)
0x036A	0x1803      	BTFSC      STATUS, 0
0x036B	0x3E01      	ADDLW      1
0x036C	0x07F1      	ADDWF      R0+1, 1
0x036D	0x0870      	MOVF       R0, 0
0x036E	0x1703      	BSF        STATUS, 6
0x036F	0x0099      	MOVWF      FLOC__build_shape_matrix
0x0370	0x0871      	MOVF       R0+1, 0
0x0371	0x009A      	MOVWF      FLOC__build_shape_matrix+1
0x0372	0x0818      	MOVF       build_shape_matrix_i_L0, 0
0x0373	0x00F0      	MOVWF      R0
0x0374	0x01F1      	CLRF       R0+1
0x0375	0x3007      	MOVLW      7
0x0376	0x00F4      	MOVWF      R4
0x0377	0x3000      	MOVLW      0
0x0378	0x00F5      	MOVWF      R4+1
0x0379	0x21A1      	CALL       _Mul_16x16_U
0x037A	0x1703      	BSF        STATUS, 6
0x037B	0x0819      	MOVF       FLOC__build_shape_matrix, 0
0x037C	0x07F0      	ADDWF      R0, 1
0x037D	0x081A      	MOVF       FLOC__build_shape_matrix+1, 0
0x037E	0x1803      	BTFSC      STATUS, 0
0x037F	0x3E01      	ADDLW      1
0x0380	0x07F1      	ADDWF      R0+1, 1
0x0381	0x0816      	MOVF       FARG_build_shape_matrix_type, 0
0x0382	0x07F0      	ADDWF      R0, 1
0x0383	0x1803      	BTFSC      STATUS, 0
0x0384	0x0AF1      	INCF       R0+1, 1
0x0385	0x0870      	MOVF       R0, 0
0x0386	0x1303      	BCF        STATUS, 6
0x0387	0x00A6      	MOVWF      ___DoICPAddr
0x0388	0x0871      	MOVF       R0+1, 0
0x0389	0x00A7      	MOVWF      ___DoICPAddr+1
0x038A	0x21CC      	CALL       _____DoICP
0x038B	0x118A      	BCF        PCLATH, 3
0x038C	0x120A      	BCF        PCLATH, 4
0x038D	0x00F0      	MOVWF      R0
0x038E	0x1703      	BSF        STATUS, 6
0x038F	0x081B      	MOVF       FLOC__build_shape_matrix+2, 0
0x0390	0x0084      	MOVWF      FSR
0x0391	0x0870      	MOVF       R0, 0
0x0392	0x0080      	MOVWF      INDF
;tetris.c,219 :: 		for (i=0;i<5;i++)
0x0393	0x0A98      	INCF       build_shape_matrix_i_L0, 1
;tetris.c,220 :: 		matrix[i] = shapes_matrix[rotation][i][type];
0x0394	0x2B58      	GOTO       L_build_shape_matrix41
L_build_shape_matrix42:
;tetris.c,222 :: 		}
0x0395	0x0008      	RETURN
; end of _build_shape_matrix
_strcpy:
;tetris.c,74 :: 		void strcpy(char *target, char *source, char length) {
;tetris.c,76 :: 		for (i=0;i<length;i++)
0x0396	0x1283      	BCF        STATUS, 5
0x0397	0x1303      	BCF        STATUS, 6
0x0398	0x01F2      	CLRF       R2
0x0399	0x01F3      	CLRF       R2+1
L_strcpy5:
0x039A	0x3080      	MOVLW      128
0x039B	0x0673      	XORWF      R2+1, 0
0x039C	0x00F0      	MOVWF      R0
0x039D	0x3080      	MOVLW      128
0x039E	0x0270      	SUBWF      R0, 0
0x039F	0x1D03      	BTFSS      STATUS, 2
0x03A0	0x2BA4      	GOTO       L__strcpy223
0x03A1	0x1703      	BSF        STATUS, 6
0x03A2	0x0817      	MOVF       FARG_strcpy_length, 0
0x03A3	0x0272      	SUBWF      R2, 0
L__strcpy223:
0x03A4	0x1803      	BTFSC      STATUS, 0
0x03A5	0x2BB7      	GOTO       L_strcpy6
;tetris.c,77 :: 		target[i] = source[i];
0x03A6	0x1703      	BSF        STATUS, 6
0x03A7	0x0872      	MOVF       R2, 0
0x03A8	0x0715      	ADDWF      FARG_strcpy_target, 0
0x03A9	0x00F1      	MOVWF      R1
0x03AA	0x0872      	MOVF       R2, 0
0x03AB	0x0716      	ADDWF      FARG_strcpy_source, 0
0x03AC	0x0084      	MOVWF      FSR
0x03AD	0x0800      	MOVF       INDF, 0
0x03AE	0x00F0      	MOVWF      R0
0x03AF	0x0871      	MOVF       R1, 0
0x03B0	0x0084      	MOVWF      FSR
0x03B1	0x0870      	MOVF       R0, 0
0x03B2	0x0080      	MOVWF      INDF
;tetris.c,76 :: 		for (i=0;i<length;i++)
0x03B3	0x0AF2      	INCF       R2, 1
0x03B4	0x1903      	BTFSC      STATUS, 2
0x03B5	0x0AF3      	INCF       R2+1, 1
;tetris.c,77 :: 		target[i] = source[i];
0x03B6	0x2B9A      	GOTO       L_strcpy5
L_strcpy6:
;tetris.c,78 :: 		return;
;tetris.c,79 :: 		}
0x03B7	0x0008      	RETURN
; end of _strcpy
_ks0108_char_portrait:
;ks0108.c,225 :: 		void ks0108_char_portrait(unsigned short x, unsigned short y, unsigned short c, unsigned char invert)
;ks0108.c,230 :: 		j = (c * 5) + 4;
0x03B8	0x1283      	BCF        STATUS, 5
0x03B9	0x1703      	BSF        STATUS, 6
0x03BA	0x0817      	MOVF       FARG_ks0108_char_portrait_c, 0
0x03BB	0x00F0      	MOVWF      R0
0x03BC	0x3005      	MOVLW      5
0x03BD	0x00F4      	MOVWF      R4
0x03BE	0x2270      	CALL       _Mul_8x8_U
0x03BF	0x3004      	MOVLW      4
0x03C0	0x0770      	ADDWF      R0, 0
0x03C1	0x1703      	BSF        STATUS, 6
0x03C2	0x009E      	MOVWF      ks0108_char_portrait_j_L0
0x03C3	0x0871      	MOVF       R0+1, 0
0x03C4	0x1803      	BTFSC      STATUS, 0
0x03C5	0x3E01      	ADDLW      1
0x03C6	0x009F      	MOVWF      ks0108_char_portrait_j_L0+1
;ks0108.c,231 :: 		for (i=0;i<5;i++) {
0x03C7	0x0199      	CLRF       ks0108_char_portrait_i_L0
L_ks0108_char_portrait26:
0x03C8	0x3005      	MOVLW      5
0x03C9	0x0219      	SUBWF      ks0108_char_portrait_i_L0, 0
0x03CA	0x1803      	BTFSC      STATUS, 0
0x03CB	0x2CA2      	GOTO       L_ks0108_char_portrait27
;ks0108.c,235 :: 		d = (font5x7[j]);
0x03CC	0x081E      	MOVF       ks0108_char_portrait_j_L0, 0
0x03CD	0x3E1C      	ADDLW      ks0108_font5x7
0x03CE	0x00F0      	MOVWF      R0
0x03CF	0x300E      	MOVLW      hi_addr(ks0108_font5x7)
0x03D0	0x1803      	BTFSC      STATUS, 0
0x03D1	0x3E01      	ADDLW      1
0x03D2	0x071F      	ADDWF      ks0108_char_portrait_j_L0+1, 0
0x03D3	0x00F1      	MOVWF      R0+1
0x03D4	0x0870      	MOVF       R0, 0
0x03D5	0x1303      	BCF        STATUS, 6
0x03D6	0x00A6      	MOVWF      ___DoICPAddr
0x03D7	0x0871      	MOVF       R0+1, 0
0x03D8	0x00A7      	MOVWF      ___DoICPAddr+1
0x03D9	0x21CC      	CALL       _____DoICP
0x03DA	0x118A      	BCF        PCLATH, 3
0x03DB	0x120A      	BCF        PCLATH, 4
0x03DC	0x1703      	BSF        STATUS, 6
0x03DD	0x009B      	MOVWF      ks0108_char_portrait_d_L0
;ks0108.c,236 :: 		if (invert)
0x03DE	0x0818      	MOVF       FARG_ks0108_char_portrait_invert, 0
0x03DF	0x1903      	BTFSC      STATUS, 2
0x03E0	0x2BE2      	GOTO       L_ks0108_char_portrait29
;ks0108.c,237 :: 		d = ~d;
0x03E1	0x099B      	COMF       ks0108_char_portrait_d_L0, 1
L_ks0108_char_portrait29:
;ks0108.c,239 :: 		ks0108_locate(x,y);
0x03E2	0x0815      	MOVF       FARG_ks0108_char_portrait_x, 0
0x03E3	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x03E4	0x0816      	MOVF       FARG_ks0108_char_portrait_y, 0
0x03E5	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x03E6	0x20E2      	CALL       _ks0108_locate
;ks0108.c,240 :: 		for (k=0; k<7; k++) {
0x03E7	0x1703      	BSF        STATUS, 6
0x03E8	0x019A      	CLRF       ks0108_char_portrait_k_L0
L_ks0108_char_portrait30:
0x03E9	0x3007      	MOVLW      7
0x03EA	0x021A      	SUBWF      ks0108_char_portrait_k_L0, 0
0x03EB	0x1803      	BTFSC      STATUS, 0
0x03EC	0x2C32      	GOTO       L_ks0108_char_portrait31
;ks0108.c,241 :: 		ks0108_data_read();
0x03ED	0x2116      	CALL       _ks0108_data_read
;ks0108.c,242 :: 		e = ks0108_data_read();
0x03EE	0x2116      	CALL       _ks0108_data_read
0x03EF	0x0870      	MOVF       R0, 0
0x03F0	0x009C      	MOVWF      ks0108_char_portrait_e_L0
;ks0108.c,243 :: 		f = ((d & (1<<k)) >> k) << (i + (y % 8));
0x03F1	0x081A      	MOVF       ks0108_char_portrait_k_L0, 0
0x03F2	0x00F2      	MOVWF      R2
0x03F3	0x3001      	MOVLW      1
0x03F4	0x00F0      	MOVWF      R0
0x03F5	0x3000      	MOVLW      0
0x03F6	0x00F1      	MOVWF      R0+1
0x03F7	0x0872      	MOVF       R2, 0
L__ks0108_char_portrait60:
0x03F8	0x1903      	BTFSC      STATUS, 2
0x03F9	0x2BFF      	GOTO       L__ks0108_char_portrait61
0x03FA	0x0DF0      	RLF        R0, 1
0x03FB	0x0DF1      	RLF        R0+1, 1
0x03FC	0x1070      	BCF        R0, 0
0x03FD	0x3EFF      	ADDLW      255
0x03FE	0x2BF8      	GOTO       L__ks0108_char_portrait60
L__ks0108_char_portrait61:
0x03FF	0x0870      	MOVF       R0, 0
0x0400	0x051B      	ANDWF      ks0108_char_portrait_d_L0, 0
0x0401	0x00F3      	MOVWF      R3
0x0402	0x3000      	MOVLW      0
0x0403	0x0571      	ANDWF      R0+1, 0
0x0404	0x00F4      	MOVWF      R3+1
0x0405	0x081A      	MOVF       ks0108_char_portrait_k_L0, 0
0x0406	0x00F0      	MOVWF      R0
0x0407	0x0873      	MOVF       R3, 0
0x0408	0x00F1      	MOVWF      R1
0x0409	0x0874      	MOVF       R3+1, 0
0x040A	0x00F2      	MOVWF      R1+1
0x040B	0x0870      	MOVF       R0, 0
L__ks0108_char_portrait62:
0x040C	0x1903      	BTFSC      STATUS, 2
0x040D	0x2C15      	GOTO       L__ks0108_char_portrait63
0x040E	0x0CF2      	RRF        R1+1, 1
0x040F	0x0CF1      	RRF        R1, 1
0x0410	0x13F2      	BCF        R1+1, 7
0x0411	0x1B72      	BTFSC      R1+1, 6
0x0412	0x17F2      	BSF        R1+1, 7
0x0413	0x3EFF      	ADDLW      255
0x0414	0x2C0C      	GOTO       L__ks0108_char_portrait62
L__ks0108_char_portrait63:
0x0415	0x3007      	MOVLW      7
0x0416	0x0516      	ANDWF      FARG_ks0108_char_portrait_y, 0
0x0417	0x00F0      	MOVWF      R0
0x0418	0x0819      	MOVF       ks0108_char_portrait_i_L0, 0
0x0419	0x07F0      	ADDWF      R0, 1
0x041A	0x0871      	MOVF       R1, 0
0x041B	0x009D      	MOVWF      ks0108_char_portrait_f_L0
0x041C	0x0870      	MOVF       R0, 0
L__ks0108_char_portrait64:
0x041D	0x1903      	BTFSC      STATUS, 2
0x041E	0x2C23      	GOTO       L__ks0108_char_portrait65
0x041F	0x0D9D      	RLF        ks0108_char_portrait_f_L0, 1
0x0420	0x101D      	BCF        ks0108_char_portrait_f_L0, 0
0x0421	0x3EFF      	ADDLW      255
0x0422	0x2C1D      	GOTO       L__ks0108_char_portrait64
L__ks0108_char_portrait65:
;ks0108.c,244 :: 		if (i == 0)
0x0423	0x0819      	MOVF       ks0108_char_portrait_i_L0, 0
0x0424	0x3A00      	XORLW      0
0x0425	0x1D03      	BTFSS      STATUS, 2
0x0426	0x2C2A      	GOTO       L_ks0108_char_portrait33
;ks0108.c,245 :: 		e = f;
0x0427	0x081D      	MOVF       ks0108_char_portrait_f_L0, 0
0x0428	0x009C      	MOVWF      ks0108_char_portrait_e_L0
0x0429	0x2C2C      	GOTO       L_ks0108_char_portrait34
L_ks0108_char_portrait33:
;ks0108.c,247 :: 		e |= f;
0x042A	0x081D      	MOVF       ks0108_char_portrait_f_L0, 0
0x042B	0x049C      	IORWF      ks0108_char_portrait_e_L0, 1
L_ks0108_char_portrait34:
;ks0108.c,248 :: 		ks0108_data_write(e);
0x042C	0x081C      	MOVF       ks0108_char_portrait_e_L0, 0
0x042D	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x042E	0x2142      	CALL       _ks0108_data_write
;ks0108.c,240 :: 		for (k=0; k<7; k++) {
0x042F	0x1703      	BSF        STATUS, 6
0x0430	0x0A9A      	INCF       ks0108_char_portrait_k_L0, 1
;ks0108.c,249 :: 		}
0x0431	0x2BE9      	GOTO       L_ks0108_char_portrait30
L_ks0108_char_portrait31:
;ks0108.c,252 :: 		if (y % 8) {
0x0432	0x3007      	MOVLW      7
0x0433	0x0516      	ANDWF      FARG_ks0108_char_portrait_y, 0
0x0434	0x00F0      	MOVWF      R0
0x0435	0x1903      	BTFSC      STATUS, 2
0x0436	0x2C9C      	GOTO       L_ks0108_char_portrait35
;ks0108.c,253 :: 		ks0108_locate(x,y+8);
0x0437	0x0815      	MOVF       FARG_ks0108_char_portrait_x, 0
0x0438	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x0439	0x3008      	MOVLW      8
0x043A	0x0716      	ADDWF      FARG_ks0108_char_portrait_y, 0
0x043B	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x043C	0x20E2      	CALL       _ks0108_locate
;ks0108.c,254 :: 		for (k=0; k<7; k++) {
0x043D	0x1703      	BSF        STATUS, 6
0x043E	0x019A      	CLRF       ks0108_char_portrait_k_L0
L_ks0108_char_portrait36:
0x043F	0x3007      	MOVLW      7
0x0440	0x021A      	SUBWF      ks0108_char_portrait_k_L0, 0
0x0441	0x1803      	BTFSC      STATUS, 0
0x0442	0x2C9C      	GOTO       L_ks0108_char_portrait37
;ks0108.c,255 :: 		ks0108_data_read();
0x0443	0x2116      	CALL       _ks0108_data_read
;ks0108.c,256 :: 		e = ks0108_data_read();
0x0444	0x2116      	CALL       _ks0108_data_read
0x0445	0x0870      	MOVF       R0, 0
0x0446	0x009C      	MOVWF      ks0108_char_portrait_e_L0
;ks0108.c,257 :: 		e |=  (((d & (1<<k)) >> k) << i) >> (8 - (y % 8));
0x0447	0x081A      	MOVF       ks0108_char_portrait_k_L0, 0
0x0448	0x00F3      	MOVWF      R3
0x0449	0x3001      	MOVLW      1
0x044A	0x00F1      	MOVWF      R1
0x044B	0x3000      	MOVLW      0
0x044C	0x00F2      	MOVWF      R1+1
0x044D	0x0873      	MOVF       R3, 0
L__ks0108_char_portrait66:
0x044E	0x1903      	BTFSC      STATUS, 2
0x044F	0x2C55      	GOTO       L__ks0108_char_portrait67
0x0450	0x0DF1      	RLF        R1, 1
0x0451	0x0DF2      	RLF        R1+1, 1
0x0452	0x1071      	BCF        R1, 0
0x0453	0x3EFF      	ADDLW      255
0x0454	0x2C4E      	GOTO       L__ks0108_char_portrait66
L__ks0108_char_portrait67:
0x0455	0x0871      	MOVF       R1, 0
0x0456	0x051B      	ANDWF      ks0108_char_portrait_d_L0, 0
0x0457	0x00F4      	MOVWF      R4
0x0458	0x3000      	MOVLW      0
0x0459	0x0572      	ANDWF      R1+1, 0
0x045A	0x00F5      	MOVWF      R4+1
0x045B	0x081A      	MOVF       ks0108_char_portrait_k_L0, 0
0x045C	0x00F1      	MOVWF      R1
0x045D	0x0874      	MOVF       R4, 0
0x045E	0x00F2      	MOVWF      R2
0x045F	0x0875      	MOVF       R4+1, 0
0x0460	0x00F3      	MOVWF      R2+1
0x0461	0x0871      	MOVF       R1, 0
L__ks0108_char_portrait68:
0x0462	0x1903      	BTFSC      STATUS, 2
0x0463	0x2C6B      	GOTO       L__ks0108_char_portrait69
0x0464	0x0CF3      	RRF        R2+1, 1
0x0465	0x0CF2      	RRF        R2, 1
0x0466	0x13F3      	BCF        R2+1, 7
0x0467	0x1B73      	BTFSC      R2+1, 6
0x0468	0x17F3      	BSF        R2+1, 7
0x0469	0x3EFF      	ADDLW      255
0x046A	0x2C62      	GOTO       L__ks0108_char_portrait68
L__ks0108_char_portrait69:
0x046B	0x0819      	MOVF       ks0108_char_portrait_i_L0, 0
0x046C	0x00F1      	MOVWF      R1
0x046D	0x0872      	MOVF       R2, 0
0x046E	0x00F4      	MOVWF      R4
0x046F	0x0873      	MOVF       R2+1, 0
0x0470	0x00F5      	MOVWF      R4+1
0x0471	0x0871      	MOVF       R1, 0
L__ks0108_char_portrait70:
0x0472	0x1903      	BTFSC      STATUS, 2
0x0473	0x2C79      	GOTO       L__ks0108_char_portrait71
0x0474	0x0DF4      	RLF        R4, 1
0x0475	0x0DF5      	RLF        R4+1, 1
0x0476	0x1074      	BCF        R4, 0
0x0477	0x3EFF      	ADDLW      255
0x0478	0x2C72      	GOTO       L__ks0108_char_portrait70
L__ks0108_char_portrait71:
0x0479	0x3007      	MOVLW      7
0x047A	0x0516      	ANDWF      FARG_ks0108_char_portrait_y, 0
0x047B	0x00F1      	MOVWF      R1
0x047C	0x0871      	MOVF       R1, 0
0x047D	0x3C08      	SUBLW      8
0x047E	0x00F1      	MOVWF      R1
0x047F	0x01F2      	CLRF       R1+1
0x0480	0x1C03      	BTFSS      STATUS, 0
0x0481	0x03F2      	DECF       R1+1, 1
0x0482	0x0871      	MOVF       R1, 0
0x0483	0x00F3      	MOVWF      R3
0x0484	0x0874      	MOVF       R4, 0
0x0485	0x00F1      	MOVWF      R1
0x0486	0x0875      	MOVF       R4+1, 0
0x0487	0x00F2      	MOVWF      R1+1
0x0488	0x0873      	MOVF       R3, 0
L__ks0108_char_portrait72:
0x0489	0x1903      	BTFSC      STATUS, 2
0x048A	0x2C92      	GOTO       L__ks0108_char_portrait73
0x048B	0x0CF2      	RRF        R1+1, 1
0x048C	0x0CF1      	RRF        R1, 1
0x048D	0x13F2      	BCF        R1+1, 7
0x048E	0x1B72      	BTFSC      R1+1, 6
0x048F	0x17F2      	BSF        R1+1, 7
0x0490	0x3EFF      	ADDLW      255
0x0491	0x2C89      	GOTO       L__ks0108_char_portrait72
L__ks0108_char_portrait73:
0x0492	0x0871      	MOVF       R1, 0
0x0493	0x04F0      	IORWF      R0, 1
0x0494	0x0870      	MOVF       R0, 0
0x0495	0x009C      	MOVWF      ks0108_char_portrait_e_L0
;ks0108.c,258 :: 		ks0108_data_write(e);
0x0496	0x0870      	MOVF       R0, 0
0x0497	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x0498	0x2142      	CALL       _ks0108_data_write
;ks0108.c,254 :: 		for (k=0; k<7; k++) {
0x0499	0x1703      	BSF        STATUS, 6
0x049A	0x0A9A      	INCF       ks0108_char_portrait_k_L0, 1
;ks0108.c,259 :: 		}
0x049B	0x2C3F      	GOTO       L_ks0108_char_portrait36
L_ks0108_char_portrait37:
;ks0108.c,260 :: 		}
L_ks0108_char_portrait35:
;ks0108.c,263 :: 		j--;
0x049C	0x3001      	MOVLW      1
0x049D	0x029E      	SUBWF      ks0108_char_portrait_j_L0, 1
0x049E	0x1C03      	BTFSS      STATUS, 0
0x049F	0x039F      	DECF       ks0108_char_portrait_j_L0+1, 1
;ks0108.c,231 :: 		for (i=0;i<5;i++) {
0x04A0	0x0A99      	INCF       ks0108_char_portrait_i_L0, 1
;ks0108.c,264 :: 		}
0x04A1	0x2BC8      	GOTO       L_ks0108_char_portrait26
L_ks0108_char_portrait27:
;ks0108.c,265 :: 		}
0x04A2	0x0008      	RETURN
; end of _ks0108_char_portrait
_ks0108_char:
;ks0108.c,206 :: 		void ks0108_char(unsigned short x, unsigned short y, unsigned char c, unsigned char invert)
;ks0108.c,212 :: 		j = c * 5;
0x04A3	0x1283      	BCF        STATUS, 5
0x04A4	0x1703      	BSF        STATUS, 6
0x04A5	0x0817      	MOVF       FARG_ks0108_char_c, 0
0x04A6	0x00F0      	MOVWF      R0
0x04A7	0x3005      	MOVLW      5
0x04A8	0x00F4      	MOVWF      R4
0x04A9	0x2270      	CALL       _Mul_8x8_U
0x04AA	0x0870      	MOVF       R0, 0
0x04AB	0x1703      	BSF        STATUS, 6
0x04AC	0x009B      	MOVWF      ks0108_char_j_L0
0x04AD	0x0871      	MOVF       R0+1, 0
0x04AE	0x009C      	MOVWF      ks0108_char_j_L0+1
;ks0108.c,213 :: 		ks0108_locate(x,y);
0x04AF	0x0815      	MOVF       FARG_ks0108_char_x, 0
0x04B0	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x04B1	0x0816      	MOVF       FARG_ks0108_char_y, 0
0x04B2	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x04B3	0x20E2      	CALL       _ks0108_locate
;ks0108.c,214 :: 		for (i=0;i<5;i++) {
0x04B4	0x1703      	BSF        STATUS, 6
0x04B5	0x0199      	CLRF       ks0108_char_i_L0
L_ks0108_char22:
0x04B6	0x3005      	MOVLW      5
0x04B7	0x0219      	SUBWF      ks0108_char_i_L0, 0
0x04B8	0x1803      	BTFSC      STATUS, 0
0x04B9	0x2CE9      	GOTO       L_ks0108_char23
;ks0108.c,215 :: 		ks0108_data_read();
0x04BA	0x2116      	CALL       _ks0108_data_read
;ks0108.c,216 :: 		d = ks0108_data_read();
0x04BB	0x2116      	CALL       _ks0108_data_read
0x04BC	0x0870      	MOVF       R0, 0
0x04BD	0x009A      	MOVWF      ks0108_char_d_L0
;ks0108.c,217 :: 		d = (font5x7[j] << (y % 8));
0x04BE	0x081B      	MOVF       ks0108_char_j_L0, 0
0x04BF	0x3E1C      	ADDLW      ks0108_font5x7
0x04C0	0x00F0      	MOVWF      R0
0x04C1	0x300E      	MOVLW      hi_addr(ks0108_font5x7)
0x04C2	0x1803      	BTFSC      STATUS, 0
0x04C3	0x3E01      	ADDLW      1
0x04C4	0x071C      	ADDWF      ks0108_char_j_L0+1, 0
0x04C5	0x00F1      	MOVWF      R0+1
0x04C6	0x0870      	MOVF       R0, 0
0x04C7	0x1303      	BCF        STATUS, 6
0x04C8	0x00A6      	MOVWF      ___DoICPAddr
0x04C9	0x0871      	MOVF       R0+1, 0
0x04CA	0x00A7      	MOVWF      ___DoICPAddr+1
0x04CB	0x21CC      	CALL       _____DoICP
0x04CC	0x118A      	BCF        PCLATH, 3
0x04CD	0x120A      	BCF        PCLATH, 4
0x04CE	0x00F1      	MOVWF      R1
0x04CF	0x3007      	MOVLW      7
0x04D0	0x1703      	BSF        STATUS, 6
0x04D1	0x0516      	ANDWF      FARG_ks0108_char_y, 0
0x04D2	0x00F0      	MOVWF      R0
0x04D3	0x0871      	MOVF       R1, 0
0x04D4	0x009A      	MOVWF      ks0108_char_d_L0
0x04D5	0x0870      	MOVF       R0, 0
L__ks0108_char58:
0x04D6	0x1903      	BTFSC      STATUS, 2
0x04D7	0x2CDC      	GOTO       L__ks0108_char59
0x04D8	0x0D9A      	RLF        ks0108_char_d_L0, 1
0x04D9	0x101A      	BCF        ks0108_char_d_L0, 0
0x04DA	0x3EFF      	ADDLW      255
0x04DB	0x2CD6      	GOTO       L__ks0108_char58
L__ks0108_char59:
;ks0108.c,218 :: 		if (invert)
0x04DC	0x0818      	MOVF       FARG_ks0108_char_invert, 0
0x04DD	0x1903      	BTFSC      STATUS, 2
0x04DE	0x2CE0      	GOTO       L_ks0108_char25
;ks0108.c,219 :: 		d = ~d;
0x04DF	0x099A      	COMF       ks0108_char_d_L0, 1
L_ks0108_char25:
;ks0108.c,220 :: 		ks0108_data_write(d);
0x04E0	0x081A      	MOVF       ks0108_char_d_L0, 0
0x04E1	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x04E2	0x2142      	CALL       _ks0108_data_write
;ks0108.c,221 :: 		j++;
0x04E3	0x1703      	BSF        STATUS, 6
0x04E4	0x0A9B      	INCF       ks0108_char_j_L0, 1
0x04E5	0x1903      	BTFSC      STATUS, 2
0x04E6	0x0A9C      	INCF       ks0108_char_j_L0+1, 1
;ks0108.c,214 :: 		for (i=0;i<5;i++) {
0x04E7	0x0A99      	INCF       ks0108_char_i_L0, 1
;ks0108.c,222 :: 		}
0x04E8	0x2CB6      	GOTO       L_ks0108_char22
L_ks0108_char23:
;ks0108.c,223 :: 		}
0x04E9	0x0008      	RETURN
; end of _ks0108_char
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x04EA	0x1683      	BSF        STATUS, 5
0x04EB	0x1703      	BSF        STATUS, 6
0x04EC	0x1C8C      	BTFSS      EECON1, 1
0x04ED	0x2CF0      	GOTO       L_EEPROM_Write1
0x04EE	0x0000      	NOP
0x04EF	0x2CEA      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x04F0	0x1283      	BCF        STATUS, 5
0x04F1	0x0815      	MOVF       FARG_EEPROM_Write_Address, 0
0x04F2	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x04F3	0x0816      	MOVF       FARG_EEPROM_Write_data_, 0
0x04F4	0x008C      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x04F5	0x1683      	BSF        STATUS, 5
0x04F6	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x04F7	0x150C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x04F8	0x080B      	MOVF       INTCON, 0
0x04F9	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x04FA	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x04FB	0x3055      	MOVLW      85
0x04FC	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x04FD	0x30AA      	MOVLW      170
0x04FE	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x04FF	0x148C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x0500	0x1BF0      	BTFSC      R0, 7
0x0501	0x2D04      	GOTO       L__EEPROM_Write2
0x0502	0x138B      	BCF        INTCON, 7
0x0503	0x2D05      	GOTO       L__EEPROM_Write3
L__EEPROM_Write2:
0x0504	0x178B      	BSF        INTCON, 7
L__EEPROM_Write3:
;__Lib_EEPROM.c,37 :: 		
0x0505	0x110C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
0x0506	0x0008      	RETURN
; end of _EEPROM_Write
_draw_quad:
;tetris.c,81 :: 		void draw_quad(unsigned short x, unsigned short y, unsigned short c, unsigned short addsingle)
;tetris.c,96 :: 		x = ((x+1)*4);
0x0507	0x1283      	BCF        STATUS, 5
0x0508	0x1703      	BSF        STATUS, 6
0x0509	0x0A15      	INCF       FARG_draw_quad_x, 0
0x050A	0x00F1      	MOVWF      R1
0x050B	0x0871      	MOVF       R1, 0
0x050C	0x00F3      	MOVWF      R3
0x050D	0x0DF3      	RLF        R3, 1
0x050E	0x1073      	BCF        R3, 0
0x050F	0x0DF3      	RLF        R3, 1
0x0510	0x1073      	BCF        R3, 0
0x0511	0x0873      	MOVF       R3, 0
0x0512	0x0095      	MOVWF      FARG_draw_quad_x
;tetris.c,97 :: 		y = ((y+1)*4)-2;
0x0513	0x0A16      	INCF       FARG_draw_quad_y, 0
0x0514	0x00F2      	MOVWF      R2
0x0515	0x0872      	MOVF       R2, 0
0x0516	0x00F0      	MOVWF      R0
0x0517	0x0DF0      	RLF        R0, 1
0x0518	0x1070      	BCF        R0, 0
0x0519	0x0DF0      	RLF        R0, 1
0x051A	0x1070      	BCF        R0, 0
0x051B	0x3002      	MOVLW      2
0x051C	0x02F0      	SUBWF      R0, 1
0x051D	0x0870      	MOVF       R0, 0
0x051E	0x0096      	MOVWF      FARG_draw_quad_y
;tetris.c,98 :: 		y += addsingle;
0x051F	0x0818      	MOVF       FARG_draw_quad_addsingle, 0
0x0520	0x07F0      	ADDWF      R0, 1
0x0521	0x0870      	MOVF       R0, 0
0x0522	0x0096      	MOVWF      FARG_draw_quad_y
;tetris.c,101 :: 		screen_x = y;
0x0523	0x0870      	MOVF       R0, 0
0x0524	0x009B      	MOVWF      draw_quad_screen_x_L0
0x0525	0x019C      	CLRF       draw_quad_screen_x_L0+1
;tetris.c,102 :: 		screen_y = 60-x;
0x0526	0x0873      	MOVF       R3, 0
0x0527	0x3C3C      	SUBLW      60
0x0528	0x00F0      	MOVWF      R0
0x0529	0x01F1      	CLRF       R0+1
0x052A	0x1C03      	BTFSS      STATUS, 0
0x052B	0x03F1      	DECF       R0+1, 1
0x052C	0x0870      	MOVF       R0, 0
0x052D	0x009D      	MOVWF      draw_quad_screen_y_L0
0x052E	0x0871      	MOVF       R0+1, 0
0x052F	0x009E      	MOVWF      draw_quad_screen_y_L0+1
;tetris.c,104 :: 		ks0108_locate(screen_x, screen_y);
0x0530	0x081B      	MOVF       draw_quad_screen_x_L0, 0
0x0531	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x0532	0x0870      	MOVF       R0, 0
0x0533	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x0534	0x20E2      	CALL       _ks0108_locate
;tetris.c,105 :: 		for (i=0; i<4; i++) {
0x0535	0x1703      	BSF        STATUS, 6
0x0536	0x0199      	CLRF       draw_quad_i_L0
0x0537	0x019A      	CLRF       draw_quad_i_L0+1
L_draw_quad8:
0x0538	0x3080      	MOVLW      128
0x0539	0x061A      	XORWF      draw_quad_i_L0+1, 0
0x053A	0x00F0      	MOVWF      R0
0x053B	0x3080      	MOVLW      128
0x053C	0x0270      	SUBWF      R0, 0
0x053D	0x1D03      	BTFSS      STATUS, 2
0x053E	0x2D41      	GOTO       L__draw_quad224
0x053F	0x3004      	MOVLW      4
0x0540	0x0219      	SUBWF      draw_quad_i_L0, 0
L__draw_quad224:
0x0541	0x1803      	BTFSC      STATUS, 0
0x0542	0x2DC5      	GOTO       L_draw_quad9
;tetris.c,107 :: 		if (screen_x+i==64)
0x0543	0x0819      	MOVF       draw_quad_i_L0, 0
0x0544	0x071B      	ADDWF      draw_quad_screen_x_L0, 0
0x0545	0x00F1      	MOVWF      R1
0x0546	0x081C      	MOVF       draw_quad_screen_x_L0+1, 0
0x0547	0x1803      	BTFSC      STATUS, 0
0x0548	0x3E01      	ADDLW      1
0x0549	0x071A      	ADDWF      draw_quad_i_L0+1, 0
0x054A	0x00F2      	MOVWF      R1+1
0x054B	0x3000      	MOVLW      0
0x054C	0x0672      	XORWF      R1+1, 0
0x054D	0x1D03      	BTFSS      STATUS, 2
0x054E	0x2D51      	GOTO       L__draw_quad225
0x054F	0x3040      	MOVLW      64
0x0550	0x0671      	XORWF      R1, 0
L__draw_quad225:
0x0551	0x1D03      	BTFSS      STATUS, 2
0x0552	0x2D59      	GOTO       L_draw_quad11
;tetris.c,108 :: 		ks0108_locate(screen_x+i,screen_y);
0x0553	0x0819      	MOVF       draw_quad_i_L0, 0
0x0554	0x071B      	ADDWF      draw_quad_screen_x_L0, 0
0x0555	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x0556	0x081D      	MOVF       draw_quad_screen_y_L0, 0
0x0557	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x0558	0x20E2      	CALL       _ks0108_locate
L_draw_quad11:
;tetris.c,111 :: 		ks0108_data_read();
0x0559	0x2116      	CALL       _ks0108_data_read
;tetris.c,112 :: 		display_data = ks0108_data_read();
0x055A	0x2116      	CALL       _ks0108_data_read
0x055B	0x0870      	MOVF       R0, 0
0x055C	0x009F      	MOVWF      draw_quad_display_data_L0
;tetris.c,114 :: 		if (i==1||i==2)
0x055D	0x3000      	MOVLW      0
0x055E	0x061A      	XORWF      draw_quad_i_L0+1, 0
0x055F	0x1D03      	BTFSS      STATUS, 2
0x0560	0x2D63      	GOTO       L__draw_quad226
0x0561	0x3001      	MOVLW      1
0x0562	0x0619      	XORWF      draw_quad_i_L0, 0
L__draw_quad226:
0x0563	0x1903      	BTFSC      STATUS, 2
0x0564	0x2D6E      	GOTO       L__draw_quad217
0x0565	0x3000      	MOVLW      0
0x0566	0x061A      	XORWF      draw_quad_i_L0+1, 0
0x0567	0x1D03      	BTFSS      STATUS, 2
0x0568	0x2D6B      	GOTO       L__draw_quad227
0x0569	0x3002      	MOVLW      2
0x056A	0x0619      	XORWF      draw_quad_i_L0, 0
L__draw_quad227:
0x056B	0x1903      	BTFSC      STATUS, 2
0x056C	0x2D6E      	GOTO       L__draw_quad217
0x056D	0x2D71      	GOTO       L_draw_quad14
L__draw_quad217:
;tetris.c,115 :: 		box_data =0b1001;
0x056E	0x3009      	MOVLW      9
0x056F	0x00A0      	MOVWF      draw_quad_box_data_L0
0x0570	0x2D73      	GOTO       L_draw_quad15
L_draw_quad14:
;tetris.c,117 :: 		box_data = 0b1111;
0x0571	0x300F      	MOVLW      15
0x0572	0x00A0      	MOVWF      draw_quad_box_data_L0
L_draw_quad15:
;tetris.c,119 :: 		if (c) {
0x0573	0x0817      	MOVF       FARG_draw_quad_c, 0
0x0574	0x1903      	BTFSC      STATUS, 2
0x0575	0x2DA1      	GOTO       L_draw_quad16
;tetris.c,120 :: 		display_data &= ~(0b1111 << ( screen_y % 8 ));
0x0576	0x3008      	MOVLW      8
0x0577	0x00F4      	MOVWF      R4
0x0578	0x3000      	MOVLW      0
0x0579	0x00F5      	MOVWF      R4+1
0x057A	0x081D      	MOVF       draw_quad_screen_y_L0, 0
0x057B	0x00F0      	MOVWF      R0
0x057C	0x081E      	MOVF       draw_quad_screen_y_L0+1, 0
0x057D	0x00F1      	MOVWF      R0+1
0x057E	0x2207      	CALL       _Div_16x16_S
0x057F	0x0878      	MOVF       R8, 0
0x0580	0x00F0      	MOVWF      R0
0x0581	0x0879      	MOVF       R8+1, 0
0x0582	0x00F1      	MOVWF      R0+1
0x0583	0x0870      	MOVF       R0, 0
0x0584	0x00F3      	MOVWF      R3
0x0585	0x300F      	MOVLW      15
0x0586	0x00F2      	MOVWF      R2
0x0587	0x0873      	MOVF       R3, 0
L__draw_quad228:
0x0588	0x1903      	BTFSC      STATUS, 2
0x0589	0x2D8E      	GOTO       L__draw_quad229
0x058A	0x0DF2      	RLF        R2, 1
0x058B	0x1072      	BCF        R2, 0
0x058C	0x3EFF      	ADDLW      255
0x058D	0x2D88      	GOTO       L__draw_quad228
L__draw_quad229:
0x058E	0x09F2      	COMF       R2, 1
0x058F	0x0872      	MOVF       R2, 0
0x0590	0x1703      	BSF        STATUS, 6
0x0591	0x059F      	ANDWF      draw_quad_display_data_L0, 1
;tetris.c,121 :: 		display_data |= (box_data << ( screen_y % 8 ));
0x0592	0x0870      	MOVF       R0, 0
0x0593	0x00F1      	MOVWF      R1
0x0594	0x0820      	MOVF       draw_quad_box_data_L0, 0
0x0595	0x00F0      	MOVWF      R0
0x0596	0x0871      	MOVF       R1, 0
L__draw_quad230:
0x0597	0x1903      	BTFSC      STATUS, 2
0x0598	0x2D9D      	GOTO       L__draw_quad231
0x0599	0x0DF0      	RLF        R0, 1
0x059A	0x1070      	BCF        R0, 0
0x059B	0x3EFF      	ADDLW      255
0x059C	0x2D97      	GOTO       L__draw_quad230
L__draw_quad231:
0x059D	0x1703      	BSF        STATUS, 6
0x059E	0x0870      	MOVF       R0, 0
0x059F	0x049F      	IORWF      draw_quad_display_data_L0, 1
;tetris.c,122 :: 		} else {
0x05A0	0x2DBD      	GOTO       L_draw_quad17
L_draw_quad16:
;tetris.c,123 :: 		display_data &= ~(0b1111 << ( screen_y % 8 ));
0x05A1	0x3008      	MOVLW      8
0x05A2	0x00F4      	MOVWF      R4
0x05A3	0x3000      	MOVLW      0
0x05A4	0x00F5      	MOVWF      R4+1
0x05A5	0x081D      	MOVF       draw_quad_screen_y_L0, 0
0x05A6	0x00F0      	MOVWF      R0
0x05A7	0x081E      	MOVF       draw_quad_screen_y_L0+1, 0
0x05A8	0x00F1      	MOVWF      R0+1
0x05A9	0x2207      	CALL       _Div_16x16_S
0x05AA	0x0878      	MOVF       R8, 0
0x05AB	0x00F0      	MOVWF      R0
0x05AC	0x0879      	MOVF       R8+1, 0
0x05AD	0x00F1      	MOVWF      R0+1
0x05AE	0x0870      	MOVF       R0, 0
0x05AF	0x00F1      	MOVWF      R1
0x05B0	0x300F      	MOVLW      15
0x05B1	0x00F0      	MOVWF      R0
0x05B2	0x0871      	MOVF       R1, 0
L__draw_quad232:
0x05B3	0x1903      	BTFSC      STATUS, 2
0x05B4	0x2DB9      	GOTO       L__draw_quad233
0x05B5	0x0DF0      	RLF        R0, 1
0x05B6	0x1070      	BCF        R0, 0
0x05B7	0x3EFF      	ADDLW      255
0x05B8	0x2DB3      	GOTO       L__draw_quad232
L__draw_quad233:
0x05B9	0x09F0      	COMF       R0, 1
0x05BA	0x0870      	MOVF       R0, 0
0x05BB	0x1703      	BSF        STATUS, 6
0x05BC	0x059F      	ANDWF      draw_quad_display_data_L0, 1
;tetris.c,124 :: 		}
L_draw_quad17:
;tetris.c,126 :: 		ks0108_data_write(display_data);
0x05BD	0x081F      	MOVF       draw_quad_display_data_L0, 0
0x05BE	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x05BF	0x2142      	CALL       _ks0108_data_write
;tetris.c,105 :: 		for (i=0; i<4; i++) {
0x05C0	0x1703      	BSF        STATUS, 6
0x05C1	0x0A99      	INCF       draw_quad_i_L0, 1
0x05C2	0x1903      	BTFSC      STATUS, 2
0x05C3	0x0A9A      	INCF       draw_quad_i_L0+1, 1
;tetris.c,127 :: 		}
0x05C4	0x2D38      	GOTO       L_draw_quad8
L_draw_quad9:
;tetris.c,134 :: 		}
0x05C5	0x0008      	RETURN
; end of _draw_quad
_check_and_update_position:
;tetris.c,226 :: 		char check_and_update_position(unsigned short x, unsigned short y, unsigned char type, unsigned char rot)
;tetris.c,233 :: 		build_shape_matrix(tmp_matrix, type, rot);
0x05C6	0x30D3      	MOVLW      check_and_update_position_tmp_matrix_L0
0x05C7	0x1283      	BCF        STATUS, 5
0x05C8	0x1703      	BSF        STATUS, 6
0x05C9	0x0095      	MOVWF      FARG_build_shape_matrix_matrix
0x05CA	0x1683      	BSF        STATUS, 5
0x05CB	0x1303      	BCF        STATUS, 6
0x05CC	0x084F      	MOVF       FARG_check_and_update_position_type, 0
0x05CD	0x1283      	BCF        STATUS, 5
0x05CE	0x1703      	BSF        STATUS, 6
0x05CF	0x0096      	MOVWF      FARG_build_shape_matrix_type
0x05D0	0x1683      	BSF        STATUS, 5
0x05D1	0x1303      	BCF        STATUS, 6
0x05D2	0x0850      	MOVF       FARG_check_and_update_position_rot, 0
0x05D3	0x1283      	BCF        STATUS, 5
0x05D4	0x1703      	BSF        STATUS, 6
0x05D5	0x0097      	MOVWF      FARG_build_shape_matrix_rotation
0x05D6	0x2355      	CALL       _build_shape_matrix
;tetris.c,235 :: 		for (i=0; i<5; i++) {
0x05D7	0x1683      	BSF        STATUS, 5
0x05D8	0x1303      	BCF        STATUS, 6
0x05D9	0x01D1      	CLRF       check_and_update_position_i_L0
L_check_and_update_position44:
0x05DA	0x3005      	MOVLW      5
0x05DB	0x0251      	SUBWF      check_and_update_position_i_L0, 0
0x05DC	0x1803      	BTFSC      STATUS, 0
0x05DD	0x2E8C      	GOTO       L_check_and_update_position45
;tetris.c,237 :: 		for (j=0; j<5; j++) {
0x05DE	0x01D2      	CLRF       check_and_update_position_j_L0
L_check_and_update_position47:
0x05DF	0x3005      	MOVLW      5
0x05E0	0x0252      	SUBWF      check_and_update_position_j_L0, 0
0x05E1	0x1803      	BTFSC      STATUS, 0
0x05E2	0x2E8A      	GOTO       L_check_and_update_position48
;tetris.c,248 :: 		if (tmp_matrix[i] & (1 << j) ) {
0x05E3	0x0851      	MOVF       check_and_update_position_i_L0, 0
0x05E4	0x3ED3      	ADDLW      check_and_update_position_tmp_matrix_L0
0x05E5	0x0084      	MOVWF      FSR
0x05E6	0x0852      	MOVF       check_and_update_position_j_L0, 0
0x05E7	0x00F2      	MOVWF      R2
0x05E8	0x3001      	MOVLW      1
0x05E9	0x00F0      	MOVWF      R0
0x05EA	0x3000      	MOVLW      0
0x05EB	0x00F1      	MOVWF      R0+1
0x05EC	0x0872      	MOVF       R2, 0
L__check_and_update_position241:
0x05ED	0x1903      	BTFSC      STATUS, 2
0x05EE	0x2DF4      	GOTO       L__check_and_update_position242
0x05EF	0x0DF0      	RLF        R0, 1
0x05F0	0x0DF1      	RLF        R0+1, 1
0x05F1	0x1070      	BCF        R0, 0
0x05F2	0x3EFF      	ADDLW      255
0x05F3	0x2DED      	GOTO       L__check_and_update_position241
L__check_and_update_position242:
0x05F4	0x0800      	MOVF       INDF, 0
0x05F5	0x05F0      	ANDWF      R0, 1
0x05F6	0x3000      	MOVLW      0
0x05F7	0x05F1      	ANDWF      R0+1, 1
0x05F8	0x0870      	MOVF       R0, 0
0x05F9	0x0471      	IORWF      R0+1, 0
0x05FA	0x1903      	BTFSC      STATUS, 2
0x05FB	0x2E88      	GOTO       L_check_and_update_position50
;tetris.c,253 :: 		if ( ((unsigned short)x + (j - 2)) < 0 )
0x05FC	0x3002      	MOVLW      2
0x05FD	0x0252      	SUBWF      check_and_update_position_j_L0, 0
0x05FE	0x00F0      	MOVWF      R0
0x05FF	0x01F1      	CLRF       R0+1
0x0600	0x1C03      	BTFSS      STATUS, 0
0x0601	0x03F1      	DECF       R0+1, 1
0x0602	0x0870      	MOVF       R0, 0
0x0603	0x074D      	ADDWF      FARG_check_and_update_position_x, 0
0x0604	0x00F2      	MOVWF      R2
0x0605	0x3000      	MOVLW      0
0x0606	0x1803      	BTFSC      STATUS, 0
0x0607	0x3E01      	ADDLW      1
0x0608	0x0771      	ADDWF      R0+1, 0
0x0609	0x00F3      	MOVWF      R2+1
0x060A	0x3080      	MOVLW      128
0x060B	0x0673      	XORWF      R2+1, 0
0x060C	0x00F0      	MOVWF      R0
0x060D	0x3080      	MOVLW      128
0x060E	0x0270      	SUBWF      R0, 0
0x060F	0x1D03      	BTFSS      STATUS, 2
0x0610	0x2E13      	GOTO       L__check_and_update_position243
0x0611	0x3000      	MOVLW      0
0x0612	0x0272      	SUBWF      R2, 0
L__check_and_update_position243:
0x0613	0x1803      	BTFSC      STATUS, 0
0x0614	0x2E17      	GOTO       L_check_and_update_position51
;tetris.c,254 :: 		return 0;
0x0615	0x01F0      	CLRF       R0
0x0616	0x0008      	RETURN
L_check_and_update_position51:
;tetris.c,257 :: 		if ( ((unsigned short)x + (j - 2)) > 13 )
0x0617	0x3002      	MOVLW      2
0x0618	0x0252      	SUBWF      check_and_update_position_j_L0, 0
0x0619	0x00F0      	MOVWF      R0
0x061A	0x01F1      	CLRF       R0+1
0x061B	0x1C03      	BTFSS      STATUS, 0
0x061C	0x03F1      	DECF       R0+1, 1
0x061D	0x0870      	MOVF       R0, 0
0x061E	0x074D      	ADDWF      FARG_check_and_update_position_x, 0
0x061F	0x00F2      	MOVWF      R2
0x0620	0x3000      	MOVLW      0
0x0621	0x1803      	BTFSC      STATUS, 0
0x0622	0x3E01      	ADDLW      1
0x0623	0x0771      	ADDWF      R0+1, 0
0x0624	0x00F3      	MOVWF      R2+1
0x0625	0x3080      	MOVLW      128
0x0626	0x00F0      	MOVWF      R0
0x0627	0x3080      	MOVLW      128
0x0628	0x0673      	XORWF      R2+1, 0
0x0629	0x0270      	SUBWF      R0, 0
0x062A	0x1D03      	BTFSS      STATUS, 2
0x062B	0x2E2E      	GOTO       L__check_and_update_position244
0x062C	0x0872      	MOVF       R2, 0
0x062D	0x3C0D      	SUBLW      13
L__check_and_update_position244:
0x062E	0x1803      	BTFSC      STATUS, 0
0x062F	0x2E32      	GOTO       L_check_and_update_position52
;tetris.c,258 :: 		return 0;
0x0630	0x01F0      	CLRF       R0
0x0631	0x0008      	RETURN
L_check_and_update_position52:
;tetris.c,261 :: 		if ( ((unsigned short)y + (i - 2)) > 19 )
0x0632	0x3002      	MOVLW      2
0x0633	0x0251      	SUBWF      check_and_update_position_i_L0, 0
0x0634	0x00F0      	MOVWF      R0
0x0635	0x01F1      	CLRF       R0+1
0x0636	0x1C03      	BTFSS      STATUS, 0
0x0637	0x03F1      	DECF       R0+1, 1
0x0638	0x0870      	MOVF       R0, 0
0x0639	0x074E      	ADDWF      FARG_check_and_update_position_y, 0
0x063A	0x00F2      	MOVWF      R2
0x063B	0x3000      	MOVLW      0
0x063C	0x1803      	BTFSC      STATUS, 0
0x063D	0x3E01      	ADDLW      1
0x063E	0x0771      	ADDWF      R0+1, 0
0x063F	0x00F3      	MOVWF      R2+1
0x0640	0x3080      	MOVLW      128
0x0641	0x00F0      	MOVWF      R0
0x0642	0x3080      	MOVLW      128
0x0643	0x0673      	XORWF      R2+1, 0
0x0644	0x0270      	SUBWF      R0, 0
0x0645	0x1D03      	BTFSS      STATUS, 2
0x0646	0x2E49      	GOTO       L__check_and_update_position245
0x0647	0x0872      	MOVF       R2, 0
0x0648	0x3C13      	SUBLW      19
L__check_and_update_position245:
0x0649	0x1803      	BTFSC      STATUS, 0
0x064A	0x2E4D      	GOTO       L_check_and_update_position53
;tetris.c,262 :: 		return 0;
0x064B	0x01F0      	CLRF       R0
0x064C	0x0008      	RETURN
L_check_and_update_position53:
;tetris.c,265 :: 		if ( playfield[y + (i-2) ] & (1 << x + (j-2) ) )
0x064D	0x3002      	MOVLW      2
0x064E	0x0251      	SUBWF      check_and_update_position_i_L0, 0
0x064F	0x00F0      	MOVWF      R0
0x0650	0x01F1      	CLRF       R0+1
0x0651	0x1C03      	BTFSS      STATUS, 0
0x0652	0x03F1      	DECF       R0+1, 1
0x0653	0x0870      	MOVF       R0, 0
0x0654	0x074E      	ADDWF      FARG_check_and_update_position_y, 0
0x0655	0x00F3      	MOVWF      R3
0x0656	0x3000      	MOVLW      0
0x0657	0x1803      	BTFSC      STATUS, 0
0x0658	0x3E01      	ADDLW      1
0x0659	0x0771      	ADDWF      R0+1, 0
0x065A	0x00F4      	MOVWF      R3+1
0x065B	0x0873      	MOVF       R3, 0
0x065C	0x00F0      	MOVWF      R0
0x065D	0x0874      	MOVF       R3+1, 0
0x065E	0x00F1      	MOVWF      R0+1
0x065F	0x0DF0      	RLF        R0, 1
0x0660	0x0DF1      	RLF        R0+1, 1
0x0661	0x1070      	BCF        R0, 0
0x0662	0x0870      	MOVF       R0, 0
0x0663	0x3EA0      	ADDLW      _playfield
0x0664	0x0084      	MOVWF      FSR
0x0665	0x3002      	MOVLW      2
0x0666	0x0252      	SUBWF      check_and_update_position_j_L0, 0
0x0667	0x00F0      	MOVWF      R0
0x0668	0x01F1      	CLRF       R0+1
0x0669	0x1C03      	BTFSS      STATUS, 0
0x066A	0x03F1      	DECF       R0+1, 1
0x066B	0x084D      	MOVF       FARG_check_and_update_position_x, 0
0x066C	0x07F0      	ADDWF      R0, 1
0x066D	0x1803      	BTFSC      STATUS, 0
0x066E	0x0AF1      	INCF       R0+1, 1
0x066F	0x0870      	MOVF       R0, 0
0x0670	0x00F2      	MOVWF      R2
0x0671	0x3001      	MOVLW      1
0x0672	0x00F0      	MOVWF      R0
0x0673	0x3000      	MOVLW      0
0x0674	0x00F1      	MOVWF      R0+1
0x0675	0x0872      	MOVF       R2, 0
L__check_and_update_position246:
0x0676	0x1903      	BTFSC      STATUS, 2
0x0677	0x2E7D      	GOTO       L__check_and_update_position247
0x0678	0x0DF0      	RLF        R0, 1
0x0679	0x0DF1      	RLF        R0+1, 1
0x067A	0x1070      	BCF        R0, 0
0x067B	0x3EFF      	ADDLW      255
0x067C	0x2E76      	GOTO       L__check_and_update_position246
L__check_and_update_position247:
0x067D	0x0800      	MOVF       INDF, 0
0x067E	0x05F0      	ANDWF      R0, 1
0x067F	0x0A84      	INCF       FSR, 1
0x0680	0x0800      	MOVF       INDF, 0
0x0681	0x05F1      	ANDWF      R0+1, 1
0x0682	0x0870      	MOVF       R0, 0
0x0683	0x0471      	IORWF      R0+1, 0
0x0684	0x1903      	BTFSC      STATUS, 2
0x0685	0x2E88      	GOTO       L_check_and_update_position54
;tetris.c,266 :: 		return 0;
0x0686	0x01F0      	CLRF       R0
0x0687	0x0008      	RETURN
L_check_and_update_position54:
;tetris.c,269 :: 		}
L_check_and_update_position50:
;tetris.c,237 :: 		for (j=0; j<5; j++) {
0x0688	0x0AD2      	INCF       check_and_update_position_j_L0, 1
;tetris.c,271 :: 		}
0x0689	0x2DDF      	GOTO       L_check_and_update_position47
L_check_and_update_position48:
;tetris.c,235 :: 		for (i=0; i<5; i++) {
0x068A	0x0AD1      	INCF       check_and_update_position_i_L0, 1
;tetris.c,272 :: 		}
0x068B	0x2DDA      	GOTO       L_check_and_update_position44
L_check_and_update_position45:
;tetris.c,279 :: 		for (i=0; i<5;i++)
0x068C	0x01D1      	CLRF       check_and_update_position_i_L0
L_check_and_update_position55:
0x068D	0x3005      	MOVLW      5
0x068E	0x0251      	SUBWF      check_and_update_position_i_L0, 0
0x068F	0x1803      	BTFSC      STATUS, 0
0x0690	0x2E9F      	GOTO       L_check_and_update_position56
;tetris.c,280 :: 		curr_shape_matrix[i] = tmp_matrix[i];
0x0691	0x0851      	MOVF       check_and_update_position_i_L0, 0
0x0692	0x3E60      	ADDLW      _curr_shape_matrix
0x0693	0x00F1      	MOVWF      R1
0x0694	0x0851      	MOVF       check_and_update_position_i_L0, 0
0x0695	0x3ED3      	ADDLW      check_and_update_position_tmp_matrix_L0
0x0696	0x0084      	MOVWF      FSR
0x0697	0x0800      	MOVF       INDF, 0
0x0698	0x00F0      	MOVWF      R0
0x0699	0x0871      	MOVF       R1, 0
0x069A	0x0084      	MOVWF      FSR
0x069B	0x0870      	MOVF       R0, 0
0x069C	0x0080      	MOVWF      INDF
;tetris.c,279 :: 		for (i=0; i<5;i++)
0x069D	0x0AD1      	INCF       check_and_update_position_i_L0, 1
;tetris.c,280 :: 		curr_shape_matrix[i] = tmp_matrix[i];
0x069E	0x2E8D      	GOTO       L_check_and_update_position55
L_check_and_update_position56:
;tetris.c,282 :: 		block_pos_x = x;
0x069F	0x084D      	MOVF       FARG_check_and_update_position_x, 0
0x06A0	0x1283      	BCF        STATUS, 5
0x06A1	0x00DA      	MOVWF      _block_pos_x
;tetris.c,283 :: 		block_pos_y = y;
0x06A2	0x1683      	BSF        STATUS, 5
0x06A3	0x084E      	MOVF       FARG_check_and_update_position_y, 0
0x06A4	0x1283      	BCF        STATUS, 5
0x06A5	0x00DC      	MOVWF      _block_pos_y
;tetris.c,284 :: 		rotation = rot;
0x06A6	0x1683      	BSF        STATUS, 5
0x06A7	0x0850      	MOVF       FARG_check_and_update_position_rot, 0
0x06A8	0x1283      	BCF        STATUS, 5
0x06A9	0x00DB      	MOVWF      _rotation
;tetris.c,290 :: 		return 1;
0x06AA	0x3001      	MOVLW      1
0x06AB	0x00F0      	MOVWF      R0
;tetris.c,292 :: 		}
0x06AC	0x0008      	RETURN
; end of _check_and_update_position
_destroy_row:
;tetris.c,137 :: 		void destroy_row(unsigned short row)
;tetris.c,168 :: 		for (i=0; i<14; i++) {
0x06AD	0x1683      	BSF        STATUS, 5
0x06AE	0x1303      	BCF        STATUS, 6
0x06AF	0x01CE      	CLRF       destroy_row_i_L0
0x06B0	0x01CF      	CLRF       destroy_row_i_L0+1
L_destroy_row18:
0x06B1	0x3080      	MOVLW      128
0x06B2	0x064F      	XORWF      destroy_row_i_L0+1, 0
0x06B3	0x00F0      	MOVWF      R0
0x06B4	0x3080      	MOVLW      128
0x06B5	0x0270      	SUBWF      R0, 0
0x06B6	0x1D03      	BTFSS      STATUS, 2
0x06B7	0x2EBA      	GOTO       L__destroy_row234
0x06B8	0x300E      	MOVLW      14
0x06B9	0x024E      	SUBWF      destroy_row_i_L0, 0
L__destroy_row234:
0x06BA	0x1803      	BTFSC      STATUS, 0
0x06BB	0x2EFB      	GOTO       L_destroy_row19
;tetris.c,169 :: 		if ((playfield[row] & (1 << i) ) ) {
0x06BC	0x084D      	MOVF       FARG_destroy_row_row, 0
0x06BD	0x00F0      	MOVWF      R0
0x06BE	0x0DF0      	RLF        R0, 1
0x06BF	0x1070      	BCF        R0, 0
0x06C0	0x0870      	MOVF       R0, 0
0x06C1	0x3EA0      	ADDLW      _playfield
0x06C2	0x0084      	MOVWF      FSR
0x06C3	0x084E      	MOVF       destroy_row_i_L0, 0
0x06C4	0x00F2      	MOVWF      R2
0x06C5	0x3001      	MOVLW      1
0x06C6	0x00F0      	MOVWF      R0
0x06C7	0x3000      	MOVLW      0
0x06C8	0x00F1      	MOVWF      R0+1
0x06C9	0x0872      	MOVF       R2, 0
L__destroy_row235:
0x06CA	0x1903      	BTFSC      STATUS, 2
0x06CB	0x2ED1      	GOTO       L__destroy_row236
0x06CC	0x0DF0      	RLF        R0, 1
0x06CD	0x0DF1      	RLF        R0+1, 1
0x06CE	0x1070      	BCF        R0, 0
0x06CF	0x3EFF      	ADDLW      255
0x06D0	0x2ECA      	GOTO       L__destroy_row235
L__destroy_row236:
0x06D1	0x0800      	MOVF       INDF, 0
0x06D2	0x05F0      	ANDWF      R0, 1
0x06D3	0x0A84      	INCF       FSR, 1
0x06D4	0x0800      	MOVF       INDF, 0
0x06D5	0x05F1      	ANDWF      R0+1, 1
0x06D6	0x0870      	MOVF       R0, 0
0x06D7	0x0471      	IORWF      R0+1, 0
0x06D8	0x1903      	BTFSC      STATUS, 2
0x06D9	0x2EF5      	GOTO       L_destroy_row21
;tetris.c,171 :: 		draw_quad(i,row,0,0);
0x06DA	0x084E      	MOVF       destroy_row_i_L0, 0
0x06DB	0x1283      	BCF        STATUS, 5
0x06DC	0x1703      	BSF        STATUS, 6
0x06DD	0x0095      	MOVWF      FARG_draw_quad_x
0x06DE	0x1683      	BSF        STATUS, 5
0x06DF	0x1303      	BCF        STATUS, 6
0x06E0	0x084D      	MOVF       FARG_destroy_row_row, 0
0x06E1	0x1283      	BCF        STATUS, 5
0x06E2	0x1703      	BSF        STATUS, 6
0x06E3	0x0096      	MOVWF      FARG_draw_quad_y
0x06E4	0x0197      	CLRF       FARG_draw_quad_c
0x06E5	0x0198      	CLRF       FARG_draw_quad_addsingle
0x06E6	0x2507      	CALL       _draw_quad
;tetris.c,172 :: 		Delay_ms(50);
0x06E7	0x3002      	MOVLW      2
0x06E8	0x00FB      	MOVWF      R11
0x06E9	0x3045      	MOVLW      69
0x06EA	0x00FC      	MOVWF      R12
0x06EB	0x30A9      	MOVLW      169
0x06EC	0x00FD      	MOVWF      R13
L_destroy_row22:
0x06ED	0x0BFD      	DECFSZ     R13, 1
0x06EE	0x2EED      	GOTO       L_destroy_row22
0x06EF	0x0BFC      	DECFSZ     R12, 1
0x06F0	0x2EED      	GOTO       L_destroy_row22
0x06F1	0x0BFB      	DECFSZ     R11, 1
0x06F2	0x2EED      	GOTO       L_destroy_row22
0x06F3	0x0000      	NOP
0x06F4	0x0000      	NOP
;tetris.c,177 :: 		}
L_destroy_row21:
;tetris.c,168 :: 		for (i=0; i<14; i++) {
0x06F5	0x1683      	BSF        STATUS, 5
0x06F6	0x1303      	BCF        STATUS, 6
0x06F7	0x0ACE      	INCF       destroy_row_i_L0, 1
0x06F8	0x1903      	BTFSC      STATUS, 2
0x06F9	0x0ACF      	INCF       destroy_row_i_L0+1, 1
;tetris.c,181 :: 		}
0x06FA	0x2EB1      	GOTO       L_destroy_row18
L_destroy_row19:
;tetris.c,183 :: 		}
0x06FB	0x0008      	RETURN
; end of _destroy_row
_draw_shape:
;tetris.c,203 :: 		void draw_shape(unsigned short c, unsigned short x, unsigned short y)
;tetris.c,208 :: 		for (i=0; i<5; i++) {
0x06FC	0x1683      	BSF        STATUS, 5
0x06FD	0x1303      	BCF        STATUS, 6
0x06FE	0x01D0      	CLRF       draw_shape_i_L0
L_draw_shape34:
0x06FF	0x3005      	MOVLW      5
0x0700	0x0250      	SUBWF      draw_shape_i_L0, 0
0x0701	0x1803      	BTFSC      STATUS, 0
0x0702	0x2F41      	GOTO       L_draw_shape35
;tetris.c,209 :: 		for (j=0; j<5; j++) {
0x0703	0x01D1      	CLRF       draw_shape_j_L0
L_draw_shape37:
0x0704	0x3005      	MOVLW      5
0x0705	0x0251      	SUBWF      draw_shape_j_L0, 0
0x0706	0x1803      	BTFSC      STATUS, 0
0x0707	0x2F3F      	GOTO       L_draw_shape38
;tetris.c,210 :: 		if (curr_shape_matrix[i] & 1 << j)
0x0708	0x0850      	MOVF       draw_shape_i_L0, 0
0x0709	0x3E60      	ADDLW      _curr_shape_matrix
0x070A	0x0084      	MOVWF      FSR
0x070B	0x0851      	MOVF       draw_shape_j_L0, 0
0x070C	0x00F2      	MOVWF      R2
0x070D	0x3001      	MOVLW      1
0x070E	0x00F0      	MOVWF      R0
0x070F	0x3000      	MOVLW      0
0x0710	0x00F1      	MOVWF      R0+1
0x0711	0x0872      	MOVF       R2, 0
L__draw_shape239:
0x0712	0x1903      	BTFSC      STATUS, 2
0x0713	0x2F19      	GOTO       L__draw_shape240
0x0714	0x0DF0      	RLF        R0, 1
0x0715	0x0DF1      	RLF        R0+1, 1
0x0716	0x1070      	BCF        R0, 0
0x0717	0x3EFF      	ADDLW      255
0x0718	0x2F12      	GOTO       L__draw_shape239
L__draw_shape240:
0x0719	0x0800      	MOVF       INDF, 0
0x071A	0x05F0      	ANDWF      R0, 1
0x071B	0x3000      	MOVLW      0
0x071C	0x05F1      	ANDWF      R0+1, 1
0x071D	0x0870      	MOVF       R0, 0
0x071E	0x0471      	IORWF      R0+1, 0
0x071F	0x1903      	BTFSC      STATUS, 2
0x0720	0x2F3B      	GOTO       L_draw_shape40
;tetris.c,211 :: 		draw_quad(x + (j-2), y + (i-2), c, 0);
0x0721	0x3002      	MOVLW      2
0x0722	0x0251      	SUBWF      draw_shape_j_L0, 0
0x0723	0x00F0      	MOVWF      R0
0x0724	0x0870      	MOVF       R0, 0
0x0725	0x074E      	ADDWF      FARG_draw_shape_x, 0
0x0726	0x1283      	BCF        STATUS, 5
0x0727	0x1703      	BSF        STATUS, 6
0x0728	0x0095      	MOVWF      FARG_draw_quad_x
0x0729	0x3002      	MOVLW      2
0x072A	0x1683      	BSF        STATUS, 5
0x072B	0x1303      	BCF        STATUS, 6
0x072C	0x0250      	SUBWF      draw_shape_i_L0, 0
0x072D	0x00F0      	MOVWF      R0
0x072E	0x0870      	MOVF       R0, 0
0x072F	0x074F      	ADDWF      FARG_draw_shape_y, 0
0x0730	0x1283      	BCF        STATUS, 5
0x0731	0x1703      	BSF        STATUS, 6
0x0732	0x0096      	MOVWF      FARG_draw_quad_y
0x0733	0x1683      	BSF        STATUS, 5
0x0734	0x1303      	BCF        STATUS, 6
0x0735	0x084D      	MOVF       FARG_draw_shape_c, 0
0x0736	0x1283      	BCF        STATUS, 5
0x0737	0x1703      	BSF        STATUS, 6
0x0738	0x0097      	MOVWF      FARG_draw_quad_c
0x0739	0x0198      	CLRF       FARG_draw_quad_addsingle
0x073A	0x2507      	CALL       _draw_quad
L_draw_shape40:
;tetris.c,209 :: 		for (j=0; j<5; j++) {
0x073B	0x1683      	BSF        STATUS, 5
0x073C	0x1303      	BCF        STATUS, 6
0x073D	0x0AD1      	INCF       draw_shape_j_L0, 1
;tetris.c,212 :: 		}
0x073E	0x2F04      	GOTO       L_draw_shape37
L_draw_shape38:
;tetris.c,208 :: 		for (i=0; i<5; i++) {
0x073F	0x0AD0      	INCF       draw_shape_i_L0, 1
;tetris.c,213 :: 		}
0x0740	0x2EFF      	GOTO       L_draw_shape34
L_draw_shape35:
;tetris.c,214 :: 		}
0x0741	0x0008      	RETURN
; end of _draw_shape
_init_gamescreen:
;tetris.c,488 :: 		void init_gamescreen(void)
;tetris.c,491 :: 		const char *tmp = "Next :";
0x0742	0x30F9      	MOVLW      ?lstr_5_tetris
0x0743	0x1683      	BSF        STATUS, 5
0x0744	0x1303      	BCF        STATUS, 6
0x0745	0x00CF      	MOVWF      init_gamescreen_tmp_L0
0x0746	0x3017      	MOVLW      hi_addr(?lstr_5_tetris)
0x0747	0x00D0      	MOVWF      init_gamescreen_tmp_L0+1
;tetris.c,493 :: 		ks0108_fill(0);
0x0748	0x1283      	BCF        STATUS, 5
0x0749	0x1703      	BSF        STATUS, 6
0x074A	0x0195      	CLRF       FARG_ks0108_fill_pattern
0x074B	0x2294      	CALL       _ks0108_fill
;tetris.c,496 :: 		ks0108_rect(1,3, 82, 58,1);
0x074C	0x3001      	MOVLW      1
0x074D	0x0095      	MOVWF      FARG_ks0108_rect_x
0x074E	0x3003      	MOVLW      3
0x074F	0x0096      	MOVWF      FARG_ks0108_rect_y
0x0750	0x3052      	MOVLW      82
0x0751	0x0097      	MOVWF      FARG_ks0108_rect_width
0x0752	0x303A      	MOVLW      58
0x0753	0x0098      	MOVWF      FARG_ks0108_rect_height
0x0754	0x3001      	MOVLW      1
0x0755	0x0099      	MOVWF      FARG_ks0108_rect_c
0x0756	0x22F1      	CALL       _ks0108_rect
;tetris.c,499 :: 		y = 56;
0x0757	0x3038      	MOVLW      56
0x0758	0x1683      	BSF        STATUS, 5
0x0759	0x1303      	BCF        STATUS, 6
0x075A	0x00CE      	MOVWF      init_gamescreen_y_L0
;tetris.c,500 :: 		for (i=0; i<6; i++) {
0x075B	0x01CD      	CLRF       init_gamescreen_i_L0
L_init_gamescreen143:
0x075C	0x3006      	MOVLW      6
0x075D	0x024D      	SUBWF      init_gamescreen_i_L0, 0
0x075E	0x1803      	BTFSC      STATUS, 0
0x075F	0x2F88      	GOTO       L_init_gamescreen144
;tetris.c,501 :: 		ks0108_char_portrait(90, y, tmp[i]-32,0);
0x0760	0x305A      	MOVLW      90
0x0761	0x1283      	BCF        STATUS, 5
0x0762	0x1703      	BSF        STATUS, 6
0x0763	0x0095      	MOVWF      FARG_ks0108_char_portrait_x
0x0764	0x1683      	BSF        STATUS, 5
0x0765	0x1303      	BCF        STATUS, 6
0x0766	0x084E      	MOVF       init_gamescreen_y_L0, 0
0x0767	0x1283      	BCF        STATUS, 5
0x0768	0x1703      	BSF        STATUS, 6
0x0769	0x0096      	MOVWF      FARG_ks0108_char_portrait_y
0x076A	0x1683      	BSF        STATUS, 5
0x076B	0x1303      	BCF        STATUS, 6
0x076C	0x084D      	MOVF       init_gamescreen_i_L0, 0
0x076D	0x074F      	ADDWF      init_gamescreen_tmp_L0, 0
0x076E	0x00F0      	MOVWF      R0
0x076F	0x0850      	MOVF       init_gamescreen_tmp_L0+1, 0
0x0770	0x1803      	BTFSC      STATUS, 0
0x0771	0x3E01      	ADDLW      1
0x0772	0x00F1      	MOVWF      R0+1
0x0773	0x0870      	MOVF       R0, 0
0x0774	0x1283      	BCF        STATUS, 5
0x0775	0x00A6      	MOVWF      ___DoICPAddr
0x0776	0x0871      	MOVF       R0+1, 0
0x0777	0x00A7      	MOVWF      ___DoICPAddr+1
0x0778	0x21CC      	CALL       _____DoICP
0x0779	0x118A      	BCF        PCLATH, 3
0x077A	0x120A      	BCF        PCLATH, 4
0x077B	0x00F0      	MOVWF      R0
0x077C	0x3020      	MOVLW      32
0x077D	0x0270      	SUBWF      R0, 0
0x077E	0x1703      	BSF        STATUS, 6
0x077F	0x0097      	MOVWF      FARG_ks0108_char_portrait_c
0x0780	0x0198      	CLRF       FARG_ks0108_char_portrait_invert
0x0781	0x23B8      	CALL       _ks0108_char_portrait
;tetris.c,502 :: 		y -= 6;
0x0782	0x3006      	MOVLW      6
0x0783	0x1683      	BSF        STATUS, 5
0x0784	0x1303      	BCF        STATUS, 6
0x0785	0x02CE      	SUBWF      init_gamescreen_y_L0, 1
;tetris.c,500 :: 		for (i=0; i<6; i++) {
0x0786	0x0ACD      	INCF       init_gamescreen_i_L0, 1
;tetris.c,503 :: 		}
0x0787	0x2F5C      	GOTO       L_init_gamescreen143
L_init_gamescreen144:
;tetris.c,509 :: 		}
0x0788	0x0008      	RETURN
; end of _init_gamescreen
_lower_rows:
;tetris.c,185 :: 		void lower_rows(unsigned short start, unsigned short end)
;tetris.c,188 :: 		for (k=1;k<5;k++) {
0x0789	0x3001      	MOVLW      1
0x078A	0x1683      	BSF        STATUS, 5
0x078B	0x1303      	BCF        STATUS, 6
0x078C	0x00D1      	MOVWF      lower_rows_k_L0
L_lower_rows23:
0x078D	0x3005      	MOVLW      5
0x078E	0x0251      	SUBWF      lower_rows_k_L0, 0
0x078F	0x1803      	BTFSC      STATUS, 0
0x0790	0x2FEA      	GOTO       L_lower_rows24
;tetris.c,189 :: 		for (i=start;i<end;i++) {
0x0791	0x084D      	MOVF       FARG_lower_rows_start, 0
0x0792	0x00CF      	MOVWF      lower_rows_i_L0
L_lower_rows26:
0x0793	0x084E      	MOVF       FARG_lower_rows_end, 0
0x0794	0x024F      	SUBWF      lower_rows_i_L0, 0
0x0795	0x1803      	BTFSC      STATUS, 0
0x0796	0x2FE8      	GOTO       L_lower_rows27
;tetris.c,190 :: 		for (j=0; j<14; j++) {
0x0797	0x01D0      	CLRF       lower_rows_j_L0
L_lower_rows29:
0x0798	0x300E      	MOVLW      14
0x0799	0x0250      	SUBWF      lower_rows_j_L0, 0
0x079A	0x1803      	BTFSC      STATUS, 0
0x079B	0x2FE6      	GOTO       L_lower_rows30
;tetris.c,191 :: 		if (playfield[i] & (1<<j)) {
0x079C	0x084F      	MOVF       lower_rows_i_L0, 0
0x079D	0x00F0      	MOVWF      R0
0x079E	0x0DF0      	RLF        R0, 1
0x079F	0x1070      	BCF        R0, 0
0x07A0	0x0870      	MOVF       R0, 0
0x07A1	0x3EA0      	ADDLW      _playfield
0x07A2	0x0084      	MOVWF      FSR
0x07A3	0x0850      	MOVF       lower_rows_j_L0, 0
0x07A4	0x00F2      	MOVWF      R2
0x07A5	0x3001      	MOVLW      1
0x07A6	0x00F0      	MOVWF      R0
0x07A7	0x3000      	MOVLW      0
0x07A8	0x00F1      	MOVWF      R0+1
0x07A9	0x0872      	MOVF       R2, 0
L__lower_rows237:
0x07AA	0x1903      	BTFSC      STATUS, 2
0x07AB	0x2FB1      	GOTO       L__lower_rows238
0x07AC	0x0DF0      	RLF        R0, 1
0x07AD	0x0DF1      	RLF        R0+1, 1
0x07AE	0x1070      	BCF        R0, 0
0x07AF	0x3EFF      	ADDLW      255
0x07B0	0x2FAA      	GOTO       L__lower_rows237
L__lower_rows238:
0x07B1	0x0800      	MOVF       INDF, 0
0x07B2	0x05F0      	ANDWF      R0, 1
0x07B3	0x0A84      	INCF       FSR, 1
0x07B4	0x0800      	MOVF       INDF, 0
0x07B5	0x05F1      	ANDWF      R0+1, 1
0x07B6	0x0870      	MOVF       R0, 0
0x07B7	0x0471      	IORWF      R0+1, 0
0x07B8	0x1903      	BTFSC      STATUS, 2
0x07B9	0x2FCE      	GOTO       L_lower_rows32
;tetris.c,192 :: 		draw_quad(j, i, 1, k);
0x07BA	0x0850      	MOVF       lower_rows_j_L0, 0
0x07BB	0x1283      	BCF        STATUS, 5
0x07BC	0x1703      	BSF        STATUS, 6
0x07BD	0x0095      	MOVWF      FARG_draw_quad_x
0x07BE	0x1683      	BSF        STATUS, 5
0x07BF	0x1303      	BCF        STATUS, 6
0x07C0	0x084F      	MOVF       lower_rows_i_L0, 0
0x07C1	0x1283      	BCF        STATUS, 5
0x07C2	0x1703      	BSF        STATUS, 6
0x07C3	0x0096      	MOVWF      FARG_draw_quad_y
0x07C4	0x3001      	MOVLW      1
0x07C5	0x0097      	MOVWF      FARG_draw_quad_c
0x07C6	0x1683      	BSF        STATUS, 5
0x07C7	0x1303      	BCF        STATUS, 6
0x07C8	0x0851      	MOVF       lower_rows_k_L0, 0
0x07C9	0x1283      	BCF        STATUS, 5
0x07CA	0x1703      	BSF        STATUS, 6
0x07CB	0x0098      	MOVWF      FARG_draw_quad_addsingle
0x07CC	0x2507      	CALL       _draw_quad
;tetris.c,193 :: 		} else {
0x07CD	0x2FE2      	GOTO       L_lower_rows33
L_lower_rows32:
;tetris.c,194 :: 		draw_quad(j, i, 0, k);
0x07CE	0x1683      	BSF        STATUS, 5
0x07CF	0x1303      	BCF        STATUS, 6
0x07D0	0x0850      	MOVF       lower_rows_j_L0, 0
0x07D1	0x1283      	BCF        STATUS, 5
0x07D2	0x1703      	BSF        STATUS, 6
0x07D3	0x0095      	MOVWF      FARG_draw_quad_x
0x07D4	0x1683      	BSF        STATUS, 5
0x07D5	0x1303      	BCF        STATUS, 6
0x07D6	0x084F      	MOVF       lower_rows_i_L0, 0
0x07D7	0x1283      	BCF        STATUS, 5
0x07D8	0x1703      	BSF        STATUS, 6
0x07D9	0x0096      	MOVWF      FARG_draw_quad_y
0x07DA	0x0197      	CLRF       FARG_draw_quad_c
0x07DB	0x1683      	BSF        STATUS, 5
0x07DC	0x1303      	BCF        STATUS, 6
0x07DD	0x0851      	MOVF       lower_rows_k_L0, 0
0x07DE	0x1283      	BCF        STATUS, 5
0x07DF	0x1703      	BSF        STATUS, 6
0x07E0	0x0098      	MOVWF      FARG_draw_quad_addsingle
0x07E1	0x2507      	CALL       _draw_quad
;tetris.c,195 :: 		}
L_lower_rows33:
;tetris.c,190 :: 		for (j=0; j<14; j++) {
0x07E2	0x1683      	BSF        STATUS, 5
0x07E3	0x1303      	BCF        STATUS, 6
0x07E4	0x0AD0      	INCF       lower_rows_j_L0, 1
;tetris.c,196 :: 		}
0x07E5	0x2F98      	GOTO       L_lower_rows29
L_lower_rows30:
;tetris.c,189 :: 		for (i=start;i<end;i++) {
0x07E6	0x0ACF      	INCF       lower_rows_i_L0, 1
;tetris.c,197 :: 		}
0x07E7	0x2F93      	GOTO       L_lower_rows26
L_lower_rows27:
;tetris.c,188 :: 		for (k=1;k<5;k++) {
0x07E8	0x0AD1      	INCF       lower_rows_k_L0, 1
;tetris.c,199 :: 		}
0x07E9	0x2F8D      	GOTO       L_lower_rows23
L_lower_rows24:
;tetris.c,200 :: 		}
0x07EA	0x0008      	RETURN
; end of _lower_rows
_mukke_stop:
;mukke.c,134 :: 		void mukke_stop()
;mukke.c,136 :: 		INTCON.TMR0IE = 0;
0x07EB	0x128B      	BCF        INTCON, 5
;mukke.c,137 :: 		T2CON = 0;
0x07EC	0x1283      	BCF        STATUS, 5
0x07ED	0x1303      	BCF        STATUS, 6
0x07EE	0x0192      	CLRF       T2CON
;mukke.c,138 :: 		}
0x07EF	0x0008      	RETURN
; end of _mukke_stop
_check_highscore:
;tetris.c,350 :: 		unsigned char check_highscore(void)
;tetris.c,358 :: 		const unsigned char *msg1 = "Congratulations!   ";
0x0800	0x30A0      	MOVLW      ?lstr_2_tetris
0x0801	0x1683      	BSF        STATUS, 5
0x0802	0x1303      	BCF        STATUS, 6
0x0803	0x00EE      	MOVWF      check_highscore_msg1_L0
0x0804	0x3018      	MOVLW      hi_addr(?lstr_2_tetris)
0x0805	0x00EF      	MOVWF      check_highscore_msg1_L0+1
;tetris.c,359 :: 		const unsigned char *msg2 = "You are placed     ";
0x0806	0x308C      	MOVLW      ?lstr_3_tetris
0x0807	0x1283      	BCF        STATUS, 5
0x0808	0x1703      	BSF        STATUS, 6
0x0809	0x0090      	MOVWF      check_highscore_msg2_L0
0x080A	0x3018      	MOVLW      hi_addr(?lstr_3_tetris)
0x080B	0x0091      	MOVWF      check_highscore_msg2_L0+1
;tetris.c,360 :: 		const unsigned char *msg3 = "Enter name:        ";
0x080C	0x30B4      	MOVLW      ?lstr_4_tetris
0x080D	0x0092      	MOVWF      check_highscore_msg3_L0
0x080E	0x3018      	MOVLW      hi_addr(?lstr_4_tetris)
0x080F	0x0093      	MOVWF      check_highscore_msg3_L0+1
;tetris.c,364 :: 		addr = 0;
0x0810	0x1683      	BSF        STATUS, 5
0x0811	0x1303      	BCF        STATUS, 6
0x0812	0x01EB      	CLRF       check_highscore_addr_L0
;tetris.c,365 :: 		for (i=0; i<8; i++) {
0x0813	0x01E7      	CLRF       check_highscore_i_L0
L_check_highscore73:
0x0814	0x3008      	MOVLW      8
0x0815	0x0267      	SUBWF      check_highscore_i_L0, 0
0x0816	0x1803      	BTFSC      STATUS, 0
0x0817	0x2B4F      	GOTO       L_check_highscore74
;tetris.c,366 :: 		Delay_ms(20);
0x0818	0x3082      	MOVLW      130
0x0819	0x00FC      	MOVWF      R12
0x081A	0x30DD      	MOVLW      221
0x081B	0x00FD      	MOVWF      R13
L_check_highscore76:
0x081C	0x0BFD      	DECFSZ     R13, 1
0x081D	0x281C      	GOTO       L_check_highscore76
0x081E	0x0BFC      	DECFSZ     R12, 1
0x081F	0x281C      	GOTO       L_check_highscore76
0x0820	0x0000      	NOP
0x0821	0x0000      	NOP
;tetris.c,367 :: 		for (j=0; j<16; j++) {
0x0822	0x01E8      	CLRF       check_highscore_j_L0
L_check_highscore77:
0x0823	0x3010      	MOVLW      16
0x0824	0x0268      	SUBWF      check_highscore_j_L0, 0
0x0825	0x1803      	BTFSC      STATUS, 0
0x0826	0x2841      	GOTO       L_check_highscore78
;tetris.c,368 :: 		hiscore_record[addr % 16] = EEPROM_Read(addr);
0x0827	0x300F      	MOVLW      15
0x0828	0x056B      	ANDWF      check_highscore_addr_L0, 0
0x0829	0x00F0      	MOVWF      R0
0x082A	0x0870      	MOVF       R0, 0
0x082B	0x3ECD      	ADDLW      check_highscore_hiscore_record_L0
0x082C	0x1283      	BCF        STATUS, 5
0x082D	0x1703      	BSF        STATUS, 6
0x082E	0x0094      	MOVWF      FLOC__check_highscore
0x082F	0x1683      	BSF        STATUS, 5
0x0830	0x1303      	BCF        STATUS, 6
0x0831	0x086B      	MOVF       check_highscore_addr_L0, 0
0x0832	0x1283      	BCF        STATUS, 5
0x0833	0x1703      	BSF        STATUS, 6
0x0834	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0835	0x118A      	BCF        PCLATH, 3
0x0836	0x2289      	CALL       _EEPROM_Read
0x0837	0x158A      	BSF        PCLATH, 3
0x0838	0x0814      	MOVF       FLOC__check_highscore, 0
0x0839	0x0084      	MOVWF      FSR
0x083A	0x0870      	MOVF       R0, 0
0x083B	0x0080      	MOVWF      INDF
;tetris.c,369 :: 		addr++;
0x083C	0x1683      	BSF        STATUS, 5
0x083D	0x1303      	BCF        STATUS, 6
0x083E	0x0AEB      	INCF       check_highscore_addr_L0, 1
;tetris.c,367 :: 		for (j=0; j<16; j++) {
0x083F	0x0AE8      	INCF       check_highscore_j_L0, 1
;tetris.c,370 :: 		}
0x0840	0x2823      	GOTO       L_check_highscore77
L_check_highscore78:
;tetris.c,371 :: 		Delay_ms(20);
0x0841	0x3082      	MOVLW      130
0x0842	0x00FC      	MOVWF      R12
0x0843	0x30DD      	MOVLW      221
0x0844	0x00FD      	MOVWF      R13
L_check_highscore80:
0x0845	0x0BFD      	DECFSZ     R13, 1
0x0846	0x2845      	GOTO       L_check_highscore80
0x0847	0x0BFC      	DECFSZ     R12, 1
0x0848	0x2845      	GOTO       L_check_highscore80
0x0849	0x0000      	NOP
0x084A	0x0000      	NOP
;tetris.c,372 :: 		hiscore = hiscore_record[14];
0x084B	0x085B      	MOVF       check_highscore_hiscore_record_L0+14, 0
0x084C	0x00EC      	MOVWF      check_highscore_hiscore_L0
0x084D	0x01ED      	CLRF       check_highscore_hiscore_L0+1
;tetris.c,373 :: 		hiscore |= hiscore_record[15] << 8;
0x084E	0x085C      	MOVF       check_highscore_hiscore_record_L0+15, 0
0x084F	0x00F1      	MOVWF      R0+1
0x0850	0x01F0      	CLRF       R0
0x0851	0x0870      	MOVF       R0, 0
0x0852	0x046C      	IORWF      check_highscore_hiscore_L0, 0
0x0853	0x00F2      	MOVWF      R2
0x0854	0x086D      	MOVF       check_highscore_hiscore_L0+1, 0
0x0855	0x0471      	IORWF      R0+1, 0
0x0856	0x00F3      	MOVWF      R2+1
0x0857	0x0872      	MOVF       R2, 0
0x0858	0x00EC      	MOVWF      check_highscore_hiscore_L0
0x0859	0x0873      	MOVF       R2+1, 0
0x085A	0x00ED      	MOVWF      check_highscore_hiscore_L0+1
;tetris.c,374 :: 		if (score > hiscore) {
0x085B	0x1283      	BCF        STATUS, 5
0x085C	0x0859      	MOVF       _score+1, 0
0x085D	0x0273      	SUBWF      R2+1, 0
0x085E	0x1D03      	BTFSS      STATUS, 2
0x085F	0x2862      	GOTO       L__check_highscore248
0x0860	0x0858      	MOVF       _score, 0
0x0861	0x0272      	SUBWF      R2, 0
L__check_highscore248:
0x0862	0x1803      	BTFSC      STATUS, 0
0x0863	0x2B4C      	GOTO       L_check_highscore81
;tetris.c,376 :: 		addr = 0x80;
0x0864	0x3080      	MOVLW      128
0x0865	0x1683      	BSF        STATUS, 5
0x0866	0x00EB      	MOVWF      check_highscore_addr_L0
;tetris.c,377 :: 		Delay_ms(20);
0x0867	0x3082      	MOVLW      130
0x0868	0x00FC      	MOVWF      R12
0x0869	0x30DD      	MOVLW      221
0x086A	0x00FD      	MOVWF      R13
L_check_highscore82:
0x086B	0x0BFD      	DECFSZ     R13, 1
0x086C	0x286B      	GOTO       L_check_highscore82
0x086D	0x0BFC      	DECFSZ     R12, 1
0x086E	0x286B      	GOTO       L_check_highscore82
0x086F	0x0000      	NOP
0x0870	0x0000      	NOP
;tetris.c,378 :: 		for (k=0;k<10;k++) {
0x0871	0x01E9      	CLRF       check_highscore_k_L0
L_check_highscore83:
0x0872	0x300A      	MOVLW      10
0x0873	0x0269      	SUBWF      check_highscore_k_L0, 0
0x0874	0x1803      	BTFSC      STATUS, 0
0x0875	0x288D      	GOTO       L_check_highscore84
;tetris.c,379 :: 		player_name[k] = EEPROM_Read(addr++);
0x0876	0x0869      	MOVF       check_highscore_k_L0, 0
0x0877	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0878	0x1283      	BCF        STATUS, 5
0x0879	0x1703      	BSF        STATUS, 6
0x087A	0x0094      	MOVWF      FLOC__check_highscore
0x087B	0x1683      	BSF        STATUS, 5
0x087C	0x1303      	BCF        STATUS, 6
0x087D	0x086B      	MOVF       check_highscore_addr_L0, 0
0x087E	0x1283      	BCF        STATUS, 5
0x087F	0x1703      	BSF        STATUS, 6
0x0880	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0881	0x118A      	BCF        PCLATH, 3
0x0882	0x2289      	CALL       _EEPROM_Read
0x0883	0x158A      	BSF        PCLATH, 3
0x0884	0x0814      	MOVF       FLOC__check_highscore, 0
0x0885	0x0084      	MOVWF      FSR
0x0886	0x0870      	MOVF       R0, 0
0x0887	0x0080      	MOVWF      INDF
0x0888	0x1683      	BSF        STATUS, 5
0x0889	0x1303      	BCF        STATUS, 6
0x088A	0x0AEB      	INCF       check_highscore_addr_L0, 1
;tetris.c,378 :: 		for (k=0;k<10;k++) {
0x088B	0x0AE9      	INCF       check_highscore_k_L0, 1
;tetris.c,380 :: 		}
0x088C	0x2872      	GOTO       L_check_highscore83
L_check_highscore84:
;tetris.c,381 :: 		Delay_ms(20);
0x088D	0x3082      	MOVLW      130
0x088E	0x00FC      	MOVWF      R12
0x088F	0x30DD      	MOVLW      221
0x0890	0x00FD      	MOVWF      R13
L_check_highscore86:
0x0891	0x0BFD      	DECFSZ     R13, 1
0x0892	0x2891      	GOTO       L_check_highscore86
0x0893	0x0BFC      	DECFSZ     R12, 1
0x0894	0x2891      	GOTO       L_check_highscore86
0x0895	0x0000      	NOP
0x0896	0x0000      	NOP
;tetris.c,383 :: 		ks0108_fill(0);
0x0897	0x1283      	BCF        STATUS, 5
0x0898	0x1703      	BSF        STATUS, 6
0x0899	0x0195      	CLRF       FARG_ks0108_fill_pattern
0x089A	0x118A      	BCF        PCLATH, 3
0x089B	0x2294      	CALL       _ks0108_fill
0x089C	0x158A      	BSF        PCLATH, 3
;tetris.c,384 :: 		x = 0;
0x089D	0x1683      	BSF        STATUS, 5
0x089E	0x1303      	BCF        STATUS, 6
0x089F	0x01EA      	CLRF       check_highscore_x_L0
;tetris.c,385 :: 		for (j=0; j<16; j++) {
0x08A0	0x01E8      	CLRF       check_highscore_j_L0
L_check_highscore87:
0x08A1	0x3010      	MOVLW      16
0x08A2	0x0268      	SUBWF      check_highscore_j_L0, 0
0x08A3	0x1803      	BTFSC      STATUS, 0
0x08A4	0x2915      	GOTO       L_check_highscore88
;tetris.c,386 :: 		ks0108_char(x,0,msg1[j]-32,0);
0x08A5	0x086A      	MOVF       check_highscore_x_L0, 0
0x08A6	0x1283      	BCF        STATUS, 5
0x08A7	0x1703      	BSF        STATUS, 6
0x08A8	0x0095      	MOVWF      FARG_ks0108_char_x
0x08A9	0x0196      	CLRF       FARG_ks0108_char_y
0x08AA	0x1683      	BSF        STATUS, 5
0x08AB	0x1303      	BCF        STATUS, 6
0x08AC	0x0868      	MOVF       check_highscore_j_L0, 0
0x08AD	0x076E      	ADDWF      check_highscore_msg1_L0, 0
0x08AE	0x00F0      	MOVWF      R0
0x08AF	0x086F      	MOVF       check_highscore_msg1_L0+1, 0
0x08B0	0x1803      	BTFSC      STATUS, 0
0x08B1	0x3E01      	ADDLW      1
0x08B2	0x00F1      	MOVWF      R0+1
0x08B3	0x0870      	MOVF       R0, 0
0x08B4	0x1283      	BCF        STATUS, 5
0x08B5	0x00A6      	MOVWF      ___DoICPAddr
0x08B6	0x0871      	MOVF       R0+1, 0
0x08B7	0x00A7      	MOVWF      ___DoICPAddr+1
0x08B8	0x118A      	BCF        PCLATH, 3
0x08B9	0x21CC      	CALL       _____DoICP
0x08BA	0x158A      	BSF        PCLATH, 3
0x08BB	0x120A      	BCF        PCLATH, 4
0x08BC	0x00F0      	MOVWF      R0
0x08BD	0x3020      	MOVLW      32
0x08BE	0x0270      	SUBWF      R0, 0
0x08BF	0x1703      	BSF        STATUS, 6
0x08C0	0x0097      	MOVWF      FARG_ks0108_char_c
0x08C1	0x0198      	CLRF       FARG_ks0108_char_invert
0x08C2	0x118A      	BCF        PCLATH, 3
0x08C3	0x24A3      	CALL       _ks0108_char
0x08C4	0x158A      	BSF        PCLATH, 3
;tetris.c,387 :: 		ks0108_char(x,8,msg2[j]-32,0);
0x08C5	0x1683      	BSF        STATUS, 5
0x08C6	0x1303      	BCF        STATUS, 6
0x08C7	0x086A      	MOVF       check_highscore_x_L0, 0
0x08C8	0x1283      	BCF        STATUS, 5
0x08C9	0x1703      	BSF        STATUS, 6
0x08CA	0x0095      	MOVWF      FARG_ks0108_char_x
0x08CB	0x3008      	MOVLW      8
0x08CC	0x0096      	MOVWF      FARG_ks0108_char_y
0x08CD	0x1683      	BSF        STATUS, 5
0x08CE	0x1303      	BCF        STATUS, 6
0x08CF	0x0868      	MOVF       check_highscore_j_L0, 0
0x08D0	0x1283      	BCF        STATUS, 5
0x08D1	0x1703      	BSF        STATUS, 6
0x08D2	0x0710      	ADDWF      check_highscore_msg2_L0, 0
0x08D3	0x00F0      	MOVWF      R0
0x08D4	0x0811      	MOVF       check_highscore_msg2_L0+1, 0
0x08D5	0x1803      	BTFSC      STATUS, 0
0x08D6	0x3E01      	ADDLW      1
0x08D7	0x00F1      	MOVWF      R0+1
0x08D8	0x0870      	MOVF       R0, 0
0x08D9	0x1303      	BCF        STATUS, 6
0x08DA	0x00A6      	MOVWF      ___DoICPAddr
0x08DB	0x0871      	MOVF       R0+1, 0
0x08DC	0x00A7      	MOVWF      ___DoICPAddr+1
0x08DD	0x118A      	BCF        PCLATH, 3
0x08DE	0x21CC      	CALL       _____DoICP
0x08DF	0x158A      	BSF        PCLATH, 3
0x08E0	0x120A      	BCF        PCLATH, 4
0x08E1	0x00F0      	MOVWF      R0
0x08E2	0x3020      	MOVLW      32
0x08E3	0x0270      	SUBWF      R0, 0
0x08E4	0x1703      	BSF        STATUS, 6
0x08E5	0x0097      	MOVWF      FARG_ks0108_char_c
0x08E6	0x0198      	CLRF       FARG_ks0108_char_invert
0x08E7	0x118A      	BCF        PCLATH, 3
0x08E8	0x24A3      	CALL       _ks0108_char
0x08E9	0x158A      	BSF        PCLATH, 3
;tetris.c,388 :: 		ks0108_char(x,16,msg3[j]-32,0);
0x08EA	0x1683      	BSF        STATUS, 5
0x08EB	0x1303      	BCF        STATUS, 6
0x08EC	0x086A      	MOVF       check_highscore_x_L0, 0
0x08ED	0x1283      	BCF        STATUS, 5
0x08EE	0x1703      	BSF        STATUS, 6
0x08EF	0x0095      	MOVWF      FARG_ks0108_char_x
0x08F0	0x3010      	MOVLW      16
0x08F1	0x0096      	MOVWF      FARG_ks0108_char_y
0x08F2	0x1683      	BSF        STATUS, 5
0x08F3	0x1303      	BCF        STATUS, 6
0x08F4	0x0868      	MOVF       check_highscore_j_L0, 0
0x08F5	0x1283      	BCF        STATUS, 5
0x08F6	0x1703      	BSF        STATUS, 6
0x08F7	0x0712      	ADDWF      check_highscore_msg3_L0, 0
0x08F8	0x00F0      	MOVWF      R0
0x08F9	0x0813      	MOVF       check_highscore_msg3_L0+1, 0
0x08FA	0x1803      	BTFSC      STATUS, 0
0x08FB	0x3E01      	ADDLW      1
0x08FC	0x00F1      	MOVWF      R0+1
0x08FD	0x0870      	MOVF       R0, 0
0x08FE	0x1303      	BCF        STATUS, 6
0x08FF	0x00A6      	MOVWF      ___DoICPAddr
0x0900	0x0871      	MOVF       R0+1, 0
0x0901	0x00A7      	MOVWF      ___DoICPAddr+1
0x0902	0x118A      	BCF        PCLATH, 3
0x0903	0x21CC      	CALL       _____DoICP
0x0904	0x158A      	BSF        PCLATH, 3
0x0905	0x120A      	BCF        PCLATH, 4
0x0906	0x00F0      	MOVWF      R0
0x0907	0x3020      	MOVLW      32
0x0908	0x0270      	SUBWF      R0, 0
0x0909	0x1703      	BSF        STATUS, 6
0x090A	0x0097      	MOVWF      FARG_ks0108_char_c
0x090B	0x0198      	CLRF       FARG_ks0108_char_invert
0x090C	0x118A      	BCF        PCLATH, 3
0x090D	0x24A3      	CALL       _ks0108_char
0x090E	0x158A      	BSF        PCLATH, 3
;tetris.c,389 :: 		x+=6;
0x090F	0x3006      	MOVLW      6
0x0910	0x1683      	BSF        STATUS, 5
0x0911	0x1303      	BCF        STATUS, 6
0x0912	0x07EA      	ADDWF      check_highscore_x_L0, 1
;tetris.c,385 :: 		for (j=0; j<16; j++) {
0x0913	0x0AE8      	INCF       check_highscore_j_L0, 1
;tetris.c,390 :: 		}
0x0914	0x28A1      	GOTO       L_check_highscore87
L_check_highscore88:
;tetris.c,391 :: 		ks0108_char(95,8,i+17,0);
0x0915	0x305F      	MOVLW      95
0x0916	0x1283      	BCF        STATUS, 5
0x0917	0x1703      	BSF        STATUS, 6
0x0918	0x0095      	MOVWF      FARG_ks0108_char_x
0x0919	0x3008      	MOVLW      8
0x091A	0x0096      	MOVWF      FARG_ks0108_char_y
0x091B	0x3011      	MOVLW      17
0x091C	0x1683      	BSF        STATUS, 5
0x091D	0x1303      	BCF        STATUS, 6
0x091E	0x0767      	ADDWF      check_highscore_i_L0, 0
0x091F	0x1283      	BCF        STATUS, 5
0x0920	0x1703      	BSF        STATUS, 6
0x0921	0x0097      	MOVWF      FARG_ks0108_char_c
0x0922	0x0198      	CLRF       FARG_ks0108_char_invert
0x0923	0x118A      	BCF        PCLATH, 3
0x0924	0x24A3      	CALL       _ks0108_char
0x0925	0x158A      	BSF        PCLATH, 3
;tetris.c,392 :: 		j = (i > 3) ? 3 : i;
0x0926	0x1683      	BSF        STATUS, 5
0x0927	0x1303      	BCF        STATUS, 6
0x0928	0x0867      	MOVF       check_highscore_i_L0, 0
0x0929	0x3C03      	SUBLW      3
0x092A	0x1803      	BTFSC      STATUS, 0
0x092B	0x292F      	GOTO       L_check_highscore90
0x092C	0x3003      	MOVLW      3
0x092D	0x00F3      	MOVWF      R3
0x092E	0x2931      	GOTO       L_check_highscore91
L_check_highscore90:
0x092F	0x0867      	MOVF       check_highscore_i_L0, 0
0x0930	0x00F3      	MOVWF      R3
L_check_highscore91:
0x0931	0x0873      	MOVF       R3, 0
0x0932	0x00E8      	MOVWF      check_highscore_j_L0
;tetris.c,393 :: 		ks0108_char(101,8,suffix[j][0]-32,0);
0x0933	0x3065      	MOVLW      101
0x0934	0x1283      	BCF        STATUS, 5
0x0935	0x1703      	BSF        STATUS, 6
0x0936	0x0095      	MOVWF      FARG_ks0108_char_x
0x0937	0x3008      	MOVLW      8
0x0938	0x0096      	MOVWF      FARG_ks0108_char_y
0x0939	0x0873      	MOVF       R3, 0
0x093A	0x00F0      	MOVWF      R0
0x093B	0x01F1      	CLRF       R0+1
0x093C	0x0DF0      	RLF        R0, 1
0x093D	0x0DF1      	RLF        R0+1, 1
0x093E	0x1070      	BCF        R0, 0
0x093F	0x30EA      	MOVLW      check_highscore_suffix_L0
0x0940	0x07F0      	ADDWF      R0, 1
0x0941	0x3018      	MOVLW      hi_addr(check_highscore_suffix_L0)
0x0942	0x1803      	BTFSC      STATUS, 0
0x0943	0x3E01      	ADDLW      1
0x0944	0x07F1      	ADDWF      R0+1, 1
0x0945	0x0870      	MOVF       R0, 0
0x0946	0x1303      	BCF        STATUS, 6
0x0947	0x00A6      	MOVWF      ___DoICPAddr
0x0948	0x0871      	MOVF       R0+1, 0
0x0949	0x00A7      	MOVWF      ___DoICPAddr+1
0x094A	0x118A      	BCF        PCLATH, 3
0x094B	0x21CC      	CALL       _____DoICP
0x094C	0x158A      	BSF        PCLATH, 3
0x094D	0x120A      	BCF        PCLATH, 4
0x094E	0x00F0      	MOVWF      R0
0x094F	0x3020      	MOVLW      32
0x0950	0x0270      	SUBWF      R0, 0
0x0951	0x1703      	BSF        STATUS, 6
0x0952	0x0097      	MOVWF      FARG_ks0108_char_c
0x0953	0x0198      	CLRF       FARG_ks0108_char_invert
0x0954	0x118A      	BCF        PCLATH, 3
0x0955	0x24A3      	CALL       _ks0108_char
0x0956	0x158A      	BSF        PCLATH, 3
;tetris.c,394 :: 		ks0108_char(107,8,suffix[j][1]-32,0);
0x0957	0x306B      	MOVLW      107
0x0958	0x0095      	MOVWF      FARG_ks0108_char_x
0x0959	0x3008      	MOVLW      8
0x095A	0x0096      	MOVWF      FARG_ks0108_char_y
0x095B	0x1683      	BSF        STATUS, 5
0x095C	0x1303      	BCF        STATUS, 6
0x095D	0x0868      	MOVF       check_highscore_j_L0, 0
0x095E	0x00F0      	MOVWF      R0
0x095F	0x01F1      	CLRF       R0+1
0x0960	0x0DF0      	RLF        R0, 1
0x0961	0x0DF1      	RLF        R0+1, 1
0x0962	0x1070      	BCF        R0, 0
0x0963	0x30EA      	MOVLW      check_highscore_suffix_L0
0x0964	0x07F0      	ADDWF      R0, 1
0x0965	0x3018      	MOVLW      hi_addr(check_highscore_suffix_L0)
0x0966	0x1803      	BTFSC      STATUS, 0
0x0967	0x3E01      	ADDLW      1
0x0968	0x07F1      	ADDWF      R0+1, 1
0x0969	0x0AF0      	INCF       R0, 1
0x096A	0x1903      	BTFSC      STATUS, 2
0x096B	0x0AF1      	INCF       R0+1, 1
0x096C	0x0870      	MOVF       R0, 0
0x096D	0x1283      	BCF        STATUS, 5
0x096E	0x00A6      	MOVWF      ___DoICPAddr
0x096F	0x0871      	MOVF       R0+1, 0
0x0970	0x00A7      	MOVWF      ___DoICPAddr+1
0x0971	0x118A      	BCF        PCLATH, 3
0x0972	0x21CC      	CALL       _____DoICP
0x0973	0x158A      	BSF        PCLATH, 3
0x0974	0x120A      	BCF        PCLATH, 4
0x0975	0x00F0      	MOVWF      R0
0x0976	0x3020      	MOVLW      32
0x0977	0x0270      	SUBWF      R0, 0
0x0978	0x1703      	BSF        STATUS, 6
0x0979	0x0097      	MOVWF      FARG_ks0108_char_c
0x097A	0x0198      	CLRF       FARG_ks0108_char_invert
0x097B	0x118A      	BCF        PCLATH, 3
0x097C	0x24A3      	CALL       _ks0108_char
0x097D	0x158A      	BSF        PCLATH, 3
;tetris.c,396 :: 		addr = 0;
0x097E	0x1683      	BSF        STATUS, 5
0x097F	0x1303      	BCF        STATUS, 6
0x0980	0x01EB      	CLRF       check_highscore_addr_L0
;tetris.c,397 :: 		j = 1;
0x0981	0x3001      	MOVLW      1
0x0982	0x00E8      	MOVWF      check_highscore_j_L0
;tetris.c,398 :: 		x = 1;
0x0983	0x3001      	MOVLW      1
0x0984	0x00EA      	MOVWF      check_highscore_x_L0
;tetris.c,399 :: 		while (PORTC & 0xf0);
L_check_highscore92:
0x0985	0x30F0      	MOVLW      240
0x0986	0x1283      	BCF        STATUS, 5
0x0987	0x0507      	ANDWF      PORTC, 0
0x0988	0x00F0      	MOVWF      R0
0x0989	0x1903      	BTFSC      STATUS, 2
0x098A	0x298C      	GOTO       L_check_highscore93
0x098B	0x2985      	GOTO       L_check_highscore92
L_check_highscore93:
;tetris.c,400 :: 		while (1) {
L_check_highscore94:
0x098C	0x1283      	BCF        STATUS, 5
;tetris.c,402 :: 		if (PORTC || j) {
0x098D	0x0807      	MOVF       PORTC, 0
0x098E	0x1D03      	BTFSS      STATUS, 2
0x098F	0x2995      	GOTO       L__check_highscore219
0x0990	0x1683      	BSF        STATUS, 5
0x0991	0x0868      	MOVF       check_highscore_j_L0, 0
0x0992	0x1D03      	BTFSS      STATUS, 2
0x0993	0x2995      	GOTO       L__check_highscore219
0x0994	0x2A7A      	GOTO       L_check_highscore98
L__check_highscore219:
;tetris.c,403 :: 		if (PORTC & KEY1) {
0x0995	0x1283      	BCF        STATUS, 5
0x0996	0x1F87      	BTFSS      PORTC, 7
0x0997	0x29B1      	GOTO       L_check_highscore99
;tetris.c,404 :: 		if (player_name[addr] == 0)
0x0998	0x1683      	BSF        STATUS, 5
0x0999	0x086B      	MOVF       check_highscore_addr_L0, 0
0x099A	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x099B	0x0084      	MOVWF      FSR
0x099C	0x0800      	MOVF       INDF, 0
0x099D	0x3A00      	XORLW      0
0x099E	0x1D03      	BTFSS      STATUS, 2
0x099F	0x29A6      	GOTO       L_check_highscore100
;tetris.c,405 :: 		player_name[addr] = 58;
0x09A0	0x086B      	MOVF       check_highscore_addr_L0, 0
0x09A1	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x09A2	0x0084      	MOVWF      FSR
0x09A3	0x303A      	MOVLW      58
0x09A4	0x0080      	MOVWF      INDF
0x09A5	0x29B1      	GOTO       L_check_highscore101
L_check_highscore100:
;tetris.c,407 :: 		player_name[addr]--;
0x09A6	0x086B      	MOVF       check_highscore_addr_L0, 0
0x09A7	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x09A8	0x00F1      	MOVWF      R1
0x09A9	0x0871      	MOVF       R1, 0
0x09AA	0x0084      	MOVWF      FSR
0x09AB	0x0300      	DECF       INDF, 0
0x09AC	0x00F0      	MOVWF      R0
0x09AD	0x0871      	MOVF       R1, 0
0x09AE	0x0084      	MOVWF      FSR
0x09AF	0x0870      	MOVF       R0, 0
0x09B0	0x0080      	MOVWF      INDF
L_check_highscore101:
;tetris.c,408 :: 		}
L_check_highscore99:
;tetris.c,410 :: 		if (PORTC & KEY2) {
0x09B1	0x1283      	BCF        STATUS, 5
0x09B2	0x1F07      	BTFSS      PORTC, 6
0x09B3	0x29D2      	GOTO       L_check_highscore102
;tetris.c,411 :: 		player_name[addr] = (player_name[addr] + 1) % 59;
0x09B4	0x1683      	BSF        STATUS, 5
0x09B5	0x086B      	MOVF       check_highscore_addr_L0, 0
0x09B6	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x09B7	0x1283      	BCF        STATUS, 5
0x09B8	0x1703      	BSF        STATUS, 6
0x09B9	0x0094      	MOVWF      FLOC__check_highscore
0x09BA	0x0814      	MOVF       FLOC__check_highscore, 0
0x09BB	0x0084      	MOVWF      FSR
0x09BC	0x0800      	MOVF       INDF, 0
0x09BD	0x3E01      	ADDLW      1
0x09BE	0x00F0      	MOVWF      R0
0x09BF	0x01F1      	CLRF       R0+1
0x09C0	0x1803      	BTFSC      STATUS, 0
0x09C1	0x0AF1      	INCF       R0+1, 1
0x09C2	0x303B      	MOVLW      59
0x09C3	0x00F4      	MOVWF      R4
0x09C4	0x3000      	MOVLW      0
0x09C5	0x00F5      	MOVWF      R4+1
0x09C6	0x118A      	BCF        PCLATH, 3
0x09C7	0x2207      	CALL       _Div_16x16_S
0x09C8	0x158A      	BSF        PCLATH, 3
0x09C9	0x0878      	MOVF       R8, 0
0x09CA	0x00F0      	MOVWF      R0
0x09CB	0x0879      	MOVF       R8+1, 0
0x09CC	0x00F1      	MOVWF      R0+1
0x09CD	0x1703      	BSF        STATUS, 6
0x09CE	0x0814      	MOVF       FLOC__check_highscore, 0
0x09CF	0x0084      	MOVWF      FSR
0x09D0	0x0870      	MOVF       R0, 0
0x09D1	0x0080      	MOVWF      INDF
;tetris.c,412 :: 		}
L_check_highscore102:
;tetris.c,414 :: 		if (PORTC & KEY3) {
0x09D2	0x1303      	BCF        STATUS, 6
0x09D3	0x1E87      	BTFSS      PORTC, 5
0x09D4	0x29EA      	GOTO       L_check_highscore103
;tetris.c,415 :: 		addr = (addr + 1) % 10;
0x09D5	0x1683      	BSF        STATUS, 5
0x09D6	0x086B      	MOVF       check_highscore_addr_L0, 0
0x09D7	0x3E01      	ADDLW      1
0x09D8	0x00F0      	MOVWF      R0
0x09D9	0x01F1      	CLRF       R0+1
0x09DA	0x1803      	BTFSC      STATUS, 0
0x09DB	0x0AF1      	INCF       R0+1, 1
0x09DC	0x300A      	MOVLW      10
0x09DD	0x00F4      	MOVWF      R4
0x09DE	0x3000      	MOVLW      0
0x09DF	0x00F5      	MOVWF      R4+1
0x09E0	0x118A      	BCF        PCLATH, 3
0x09E1	0x2207      	CALL       _Div_16x16_S
0x09E2	0x158A      	BSF        PCLATH, 3
0x09E3	0x0878      	MOVF       R8, 0
0x09E4	0x00F0      	MOVWF      R0
0x09E5	0x0879      	MOVF       R8+1, 0
0x09E6	0x00F1      	MOVWF      R0+1
0x09E7	0x0870      	MOVF       R0, 0
0x09E8	0x1683      	BSF        STATUS, 5
0x09E9	0x00EB      	MOVWF      check_highscore_addr_L0
;tetris.c,416 :: 		}
L_check_highscore103:
;tetris.c,418 :: 		if (PORTC & KEY4)
0x09EA	0x1283      	BCF        STATUS, 5
0x09EB	0x1E07      	BTFSS      PORTC, 4
0x09EC	0x29EE      	GOTO       L_check_highscore104
;tetris.c,419 :: 		break;
0x09ED	0x2A7D      	GOTO       L_check_highscore95
L_check_highscore104:
;tetris.c,422 :: 		x = 0;
0x09EE	0x1683      	BSF        STATUS, 5
0x09EF	0x01EA      	CLRF       check_highscore_x_L0
;tetris.c,423 :: 		for (j=0; j<10; j++) {
0x09F0	0x01E8      	CLRF       check_highscore_j_L0
L_check_highscore105:
0x09F1	0x300A      	MOVLW      10
0x09F2	0x0268      	SUBWF      check_highscore_j_L0, 0
0x09F3	0x1803      	BTFSC      STATUS, 0
0x09F4	0x2A34      	GOTO       L_check_highscore106
;tetris.c,424 :: 		if (player_name[j] > 58)
0x09F5	0x0868      	MOVF       check_highscore_j_L0, 0
0x09F6	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x09F7	0x0084      	MOVWF      FSR
0x09F8	0x0800      	MOVF       INDF, 0
0x09F9	0x3C3A      	SUBLW      58
0x09FA	0x1803      	BTFSC      STATUS, 0
0x09FB	0x2A00      	GOTO       L_check_highscore108
;tetris.c,425 :: 		player_name[j] = 0;
0x09FC	0x0868      	MOVF       check_highscore_j_L0, 0
0x09FD	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x09FE	0x0084      	MOVWF      FSR
0x09FF	0x0180      	CLRF       INDF
L_check_highscore108:
;tetris.c,426 :: 		if (j == addr)
0x0A00	0x0868      	MOVF       check_highscore_j_L0, 0
0x0A01	0x066B      	XORWF      check_highscore_addr_L0, 0
0x0A02	0x1D03      	BTFSS      STATUS, 2
0x0A03	0x2A19      	GOTO       L_check_highscore109
;tetris.c,427 :: 		ks0108_char(x,32,player_name[j],1);
0x0A04	0x086A      	MOVF       check_highscore_x_L0, 0
0x0A05	0x1283      	BCF        STATUS, 5
0x0A06	0x1703      	BSF        STATUS, 6
0x0A07	0x0095      	MOVWF      FARG_ks0108_char_x
0x0A08	0x3020      	MOVLW      32
0x0A09	0x0096      	MOVWF      FARG_ks0108_char_y
0x0A0A	0x1683      	BSF        STATUS, 5
0x0A0B	0x1303      	BCF        STATUS, 6
0x0A0C	0x0868      	MOVF       check_highscore_j_L0, 0
0x0A0D	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0A0E	0x0084      	MOVWF      FSR
0x0A0F	0x0800      	MOVF       INDF, 0
0x0A10	0x1283      	BCF        STATUS, 5
0x0A11	0x1703      	BSF        STATUS, 6
0x0A12	0x0097      	MOVWF      FARG_ks0108_char_c
0x0A13	0x3001      	MOVLW      1
0x0A14	0x0098      	MOVWF      FARG_ks0108_char_invert
0x0A15	0x118A      	BCF        PCLATH, 3
0x0A16	0x24A3      	CALL       _ks0108_char
0x0A17	0x158A      	BSF        PCLATH, 3
0x0A18	0x2A2E      	GOTO       L_check_highscore110
L_check_highscore109:
;tetris.c,429 :: 		ks0108_char(x,32,player_name[j],0);
0x0A19	0x1683      	BSF        STATUS, 5
0x0A1A	0x1303      	BCF        STATUS, 6
0x0A1B	0x086A      	MOVF       check_highscore_x_L0, 0
0x0A1C	0x1283      	BCF        STATUS, 5
0x0A1D	0x1703      	BSF        STATUS, 6
0x0A1E	0x0095      	MOVWF      FARG_ks0108_char_x
0x0A1F	0x3020      	MOVLW      32
0x0A20	0x0096      	MOVWF      FARG_ks0108_char_y
0x0A21	0x1683      	BSF        STATUS, 5
0x0A22	0x1303      	BCF        STATUS, 6
0x0A23	0x0868      	MOVF       check_highscore_j_L0, 0
0x0A24	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0A25	0x0084      	MOVWF      FSR
0x0A26	0x0800      	MOVF       INDF, 0
0x0A27	0x1283      	BCF        STATUS, 5
0x0A28	0x1703      	BSF        STATUS, 6
0x0A29	0x0097      	MOVWF      FARG_ks0108_char_c
0x0A2A	0x0198      	CLRF       FARG_ks0108_char_invert
0x0A2B	0x118A      	BCF        PCLATH, 3
0x0A2C	0x24A3      	CALL       _ks0108_char
0x0A2D	0x158A      	BSF        PCLATH, 3
L_check_highscore110:
;tetris.c,430 :: 		x+=6;
0x0A2E	0x3006      	MOVLW      6
0x0A2F	0x1683      	BSF        STATUS, 5
0x0A30	0x1303      	BCF        STATUS, 6
0x0A31	0x07EA      	ADDWF      check_highscore_x_L0, 1
;tetris.c,423 :: 		for (j=0; j<10; j++) {
0x0A32	0x0AE8      	INCF       check_highscore_j_L0, 1
;tetris.c,431 :: 		}
0x0A33	0x29F1      	GOTO       L_check_highscore105
L_check_highscore106:
;tetris.c,432 :: 		j = 0;
0x0A34	0x01E8      	CLRF       check_highscore_j_L0
;tetris.c,434 :: 		while (PORTC & 0xf0) {
L_check_highscore111:
0x0A35	0x30F0      	MOVLW      240
0x0A36	0x1283      	BCF        STATUS, 5
0x0A37	0x0507      	ANDWF      PORTC, 0
0x0A38	0x00F0      	MOVWF      R0
0x0A39	0x1903      	BTFSC      STATUS, 2
0x0A3A	0x2A79      	GOTO       L_check_highscore112
;tetris.c,435 :: 		if (k>=20) {
0x0A3B	0x3014      	MOVLW      20
0x0A3C	0x1683      	BSF        STATUS, 5
0x0A3D	0x0269      	SUBWF      check_highscore_k_L0, 0
0x0A3E	0x1C03      	BTFSS      STATUS, 0
0x0A3F	0x2A68      	GOTO       L_check_highscore113
;tetris.c,436 :: 		if ( !(PORTC & KEY3) && (player_name[addr] == 0) )
0x0A40	0x1283      	BCF        STATUS, 5
0x0A41	0x1A87      	BTFSC      PORTC, 5
0x0A42	0x2A59      	GOTO       L_check_highscore116
0x0A43	0x1683      	BSF        STATUS, 5
0x0A44	0x086B      	MOVF       check_highscore_addr_L0, 0
0x0A45	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0A46	0x0084      	MOVWF      FSR
0x0A47	0x0800      	MOVF       INDF, 0
0x0A48	0x3A00      	XORLW      0
0x0A49	0x1D03      	BTFSS      STATUS, 2
0x0A4A	0x2A59      	GOTO       L_check_highscore116
L__check_highscore218:
;tetris.c,437 :: 		Delay_ms(500);
0x0A4B	0x300D      	MOVLW      13
0x0A4C	0x00FB      	MOVWF      R11
0x0A4D	0x30AF      	MOVLW      175
0x0A4E	0x00FC      	MOVWF      R12
0x0A4F	0x30B6      	MOVLW      182
0x0A50	0x00FD      	MOVWF      R13
L_check_highscore117:
0x0A51	0x0BFD      	DECFSZ     R13, 1
0x0A52	0x2A51      	GOTO       L_check_highscore117
0x0A53	0x0BFC      	DECFSZ     R12, 1
0x0A54	0x2A51      	GOTO       L_check_highscore117
0x0A55	0x0BFB      	DECFSZ     R11, 1
0x0A56	0x2A51      	GOTO       L_check_highscore117
0x0A57	0x0000      	NOP
0x0A58	0x2A67      	GOTO       L_check_highscore118
L_check_highscore116:
;tetris.c,439 :: 		Delay_ms(50);
0x0A59	0x3002      	MOVLW      2
0x0A5A	0x00FB      	MOVWF      R11
0x0A5B	0x3045      	MOVLW      69
0x0A5C	0x00FC      	MOVWF      R12
0x0A5D	0x30A9      	MOVLW      169
0x0A5E	0x00FD      	MOVWF      R13
L_check_highscore119:
0x0A5F	0x0BFD      	DECFSZ     R13, 1
0x0A60	0x2A5F      	GOTO       L_check_highscore119
0x0A61	0x0BFC      	DECFSZ     R12, 1
0x0A62	0x2A5F      	GOTO       L_check_highscore119
0x0A63	0x0BFB      	DECFSZ     R11, 1
0x0A64	0x2A5F      	GOTO       L_check_highscore119
0x0A65	0x0000      	NOP
0x0A66	0x0000      	NOP
L_check_highscore118:
;tetris.c,440 :: 		break;
0x0A67	0x2A79      	GOTO       L_check_highscore112
;tetris.c,441 :: 		} else {
L_check_highscore113:
0x0A68	0x1683      	BSF        STATUS, 5
;tetris.c,442 :: 		k++;
0x0A69	0x0AE9      	INCF       check_highscore_k_L0, 1
;tetris.c,443 :: 		Delay_ms(50);
0x0A6A	0x3002      	MOVLW      2
0x0A6B	0x00FB      	MOVWF      R11
0x0A6C	0x3045      	MOVLW      69
0x0A6D	0x00FC      	MOVWF      R12
0x0A6E	0x30A9      	MOVLW      169
0x0A6F	0x00FD      	MOVWF      R13
L_check_highscore121:
0x0A70	0x0BFD      	DECFSZ     R13, 1
0x0A71	0x2A70      	GOTO       L_check_highscore121
0x0A72	0x0BFC      	DECFSZ     R12, 1
0x0A73	0x2A70      	GOTO       L_check_highscore121
0x0A74	0x0BFB      	DECFSZ     R11, 1
0x0A75	0x2A70      	GOTO       L_check_highscore121
0x0A76	0x0000      	NOP
0x0A77	0x0000      	NOP
;tetris.c,445 :: 		}
0x0A78	0x2A35      	GOTO       L_check_highscore111
L_check_highscore112:
;tetris.c,446 :: 		} else {
0x0A79	0x2A7C      	GOTO       L_check_highscore122
L_check_highscore98:
0x0A7A	0x1683      	BSF        STATUS, 5
;tetris.c,447 :: 		k=0;
0x0A7B	0x01E9      	CLRF       check_highscore_k_L0
;tetris.c,448 :: 		}
L_check_highscore122:
;tetris.c,449 :: 		}
0x0A7C	0x298C      	GOTO       L_check_highscore94
L_check_highscore95:
0x0A7D	0x1683      	BSF        STATUS, 5
;tetris.c,451 :: 		j=7;
0x0A7E	0x3007      	MOVLW      7
0x0A7F	0x00E8      	MOVWF      check_highscore_j_L0
;tetris.c,452 :: 		do {
L_check_highscore123:
;tetris.c,453 :: 		j--;
0x0A80	0x03E8      	DECF       check_highscore_j_L0, 1
;tetris.c,454 :: 		addr = j<<4;
0x0A81	0x0868      	MOVF       check_highscore_j_L0, 0
0x0A82	0x00EB      	MOVWF      check_highscore_addr_L0
0x0A83	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0A84	0x106B      	BCF        check_highscore_addr_L0, 0
0x0A85	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0A86	0x106B      	BCF        check_highscore_addr_L0, 0
0x0A87	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0A88	0x106B      	BCF        check_highscore_addr_L0, 0
0x0A89	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0A8A	0x106B      	BCF        check_highscore_addr_L0, 0
;tetris.c,455 :: 		for (k=0;k<16;k++) {
0x0A8B	0x01E9      	CLRF       check_highscore_k_L0
L_check_highscore126:
0x0A8C	0x3010      	MOVLW      16
0x0A8D	0x0269      	SUBWF      check_highscore_k_L0, 0
0x0A8E	0x1803      	BTFSC      STATUS, 0
0x0A8F	0x2AA7      	GOTO       L_check_highscore127
;tetris.c,456 :: 		hiscore_record[k] = EEPROM_Read(addr + k);
0x0A90	0x0869      	MOVF       check_highscore_k_L0, 0
0x0A91	0x3ECD      	ADDLW      check_highscore_hiscore_record_L0
0x0A92	0x1283      	BCF        STATUS, 5
0x0A93	0x1703      	BSF        STATUS, 6
0x0A94	0x0094      	MOVWF      FLOC__check_highscore
0x0A95	0x1683      	BSF        STATUS, 5
0x0A96	0x1303      	BCF        STATUS, 6
0x0A97	0x0869      	MOVF       check_highscore_k_L0, 0
0x0A98	0x076B      	ADDWF      check_highscore_addr_L0, 0
0x0A99	0x1283      	BCF        STATUS, 5
0x0A9A	0x1703      	BSF        STATUS, 6
0x0A9B	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0A9C	0x118A      	BCF        PCLATH, 3
0x0A9D	0x2289      	CALL       _EEPROM_Read
0x0A9E	0x158A      	BSF        PCLATH, 3
0x0A9F	0x0814      	MOVF       FLOC__check_highscore, 0
0x0AA0	0x0084      	MOVWF      FSR
0x0AA1	0x0870      	MOVF       R0, 0
0x0AA2	0x0080      	MOVWF      INDF
;tetris.c,455 :: 		for (k=0;k<16;k++) {
0x0AA3	0x1683      	BSF        STATUS, 5
0x0AA4	0x1303      	BCF        STATUS, 6
0x0AA5	0x0AE9      	INCF       check_highscore_k_L0, 1
;tetris.c,457 :: 		}
0x0AA6	0x2A8C      	GOTO       L_check_highscore126
L_check_highscore127:
;tetris.c,458 :: 		Delay_ms(20);
0x0AA7	0x3082      	MOVLW      130
0x0AA8	0x00FC      	MOVWF      R12
0x0AA9	0x30DD      	MOVLW      221
0x0AAA	0x00FD      	MOVWF      R13
L_check_highscore129:
0x0AAB	0x0BFD      	DECFSZ     R13, 1
0x0AAC	0x2AAB      	GOTO       L_check_highscore129
0x0AAD	0x0BFC      	DECFSZ     R12, 1
0x0AAE	0x2AAB      	GOTO       L_check_highscore129
0x0AAF	0x0000      	NOP
0x0AB0	0x0000      	NOP
;tetris.c,459 :: 		addr += 16;
0x0AB1	0x3010      	MOVLW      16
0x0AB2	0x07EB      	ADDWF      check_highscore_addr_L0, 1
;tetris.c,460 :: 		for (k=0;k<16;k++) {
0x0AB3	0x01E9      	CLRF       check_highscore_k_L0
L_check_highscore130:
0x0AB4	0x3010      	MOVLW      16
0x0AB5	0x0269      	SUBWF      check_highscore_k_L0, 0
0x0AB6	0x1803      	BTFSC      STATUS, 0
0x0AB7	0x2ACC      	GOTO       L_check_highscore131
;tetris.c,461 :: 		EEPROM_Write(addr + k, hiscore_record[k]);
0x0AB8	0x0869      	MOVF       check_highscore_k_L0, 0
0x0AB9	0x076B      	ADDWF      check_highscore_addr_L0, 0
0x0ABA	0x1283      	BCF        STATUS, 5
0x0ABB	0x1703      	BSF        STATUS, 6
0x0ABC	0x0095      	MOVWF      FARG_EEPROM_Write_Address
0x0ABD	0x1683      	BSF        STATUS, 5
0x0ABE	0x1303      	BCF        STATUS, 6
0x0ABF	0x0869      	MOVF       check_highscore_k_L0, 0
0x0AC0	0x3ECD      	ADDLW      check_highscore_hiscore_record_L0
0x0AC1	0x0084      	MOVWF      FSR
0x0AC2	0x0800      	MOVF       INDF, 0
0x0AC3	0x1283      	BCF        STATUS, 5
0x0AC4	0x1703      	BSF        STATUS, 6
0x0AC5	0x0096      	MOVWF      FARG_EEPROM_Write_data_
0x0AC6	0x118A      	BCF        PCLATH, 3
0x0AC7	0x24EA      	CALL       _EEPROM_Write
0x0AC8	0x158A      	BSF        PCLATH, 3
;tetris.c,460 :: 		for (k=0;k<16;k++) {
0x0AC9	0x1303      	BCF        STATUS, 6
0x0ACA	0x0AE9      	INCF       check_highscore_k_L0, 1
;tetris.c,462 :: 		}
0x0ACB	0x2AB4      	GOTO       L_check_highscore130
L_check_highscore131:
;tetris.c,463 :: 		Delay_ms(20);
0x0ACC	0x3082      	MOVLW      130
0x0ACD	0x00FC      	MOVWF      R12
0x0ACE	0x30DD      	MOVLW      221
0x0ACF	0x00FD      	MOVWF      R13
L_check_highscore133:
0x0AD0	0x0BFD      	DECFSZ     R13, 1
0x0AD1	0x2AD0      	GOTO       L_check_highscore133
0x0AD2	0x0BFC      	DECFSZ     R12, 1
0x0AD3	0x2AD0      	GOTO       L_check_highscore133
0x0AD4	0x0000      	NOP
0x0AD5	0x0000      	NOP
;tetris.c,464 :: 		} while (j>i);
0x0AD6	0x0868      	MOVF       check_highscore_j_L0, 0
0x0AD7	0x0267      	SUBWF      check_highscore_i_L0, 0
0x0AD8	0x1C03      	BTFSS      STATUS, 0
0x0AD9	0x2A80      	GOTO       L_check_highscore123
;tetris.c,466 :: 		hiscore_record[14] = score & 255;
0x0ADA	0x30FF      	MOVLW      255
0x0ADB	0x1283      	BCF        STATUS, 5
0x0ADC	0x0558      	ANDWF      _score, 0
0x0ADD	0x1683      	BSF        STATUS, 5
0x0ADE	0x00DB      	MOVWF      check_highscore_hiscore_record_L0+14
;tetris.c,467 :: 		hiscore_record[15] = score >> 8;
0x0ADF	0x1283      	BCF        STATUS, 5
0x0AE0	0x0859      	MOVF       _score+1, 0
0x0AE1	0x00F0      	MOVWF      R0
0x0AE2	0x01F1      	CLRF       R0+1
0x0AE3	0x0870      	MOVF       R0, 0
0x0AE4	0x1683      	BSF        STATUS, 5
0x0AE5	0x00DC      	MOVWF      check_highscore_hiscore_record_L0+15
;tetris.c,469 :: 		addr = i<<4;
0x0AE6	0x0867      	MOVF       check_highscore_i_L0, 0
0x0AE7	0x00EB      	MOVWF      check_highscore_addr_L0
0x0AE8	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0AE9	0x106B      	BCF        check_highscore_addr_L0, 0
0x0AEA	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0AEB	0x106B      	BCF        check_highscore_addr_L0, 0
0x0AEC	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0AED	0x106B      	BCF        check_highscore_addr_L0, 0
0x0AEE	0x0DEB      	RLF        check_highscore_addr_L0, 1
0x0AEF	0x106B      	BCF        check_highscore_addr_L0, 0
;tetris.c,470 :: 		for (j=0; j<16; j++) {
0x0AF0	0x01E8      	CLRF       check_highscore_j_L0
L_check_highscore134:
0x0AF1	0x3010      	MOVLW      16
0x0AF2	0x0268      	SUBWF      check_highscore_j_L0, 0
0x0AF3	0x1803      	BTFSC      STATUS, 0
0x0AF4	0x2B1A      	GOTO       L_check_highscore135
;tetris.c,471 :: 		if (j<10)
0x0AF5	0x300A      	MOVLW      10
0x0AF6	0x0268      	SUBWF      check_highscore_j_L0, 0
0x0AF7	0x1803      	BTFSC      STATUS, 0
0x0AF8	0x2B06      	GOTO       L_check_highscore137
;tetris.c,472 :: 		hiscore_record[j] = player_name[j] + 32;
0x0AF9	0x0868      	MOVF       check_highscore_j_L0, 0
0x0AFA	0x3ECD      	ADDLW      check_highscore_hiscore_record_L0
0x0AFB	0x00F1      	MOVWF      R1
0x0AFC	0x0868      	MOVF       check_highscore_j_L0, 0
0x0AFD	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0AFE	0x0084      	MOVWF      FSR
0x0AFF	0x3020      	MOVLW      32
0x0B00	0x0700      	ADDWF      INDF, 0
0x0B01	0x00F0      	MOVWF      R0
0x0B02	0x0871      	MOVF       R1, 0
0x0B03	0x0084      	MOVWF      FSR
0x0B04	0x0870      	MOVF       R0, 0
0x0B05	0x0080      	MOVWF      INDF
L_check_highscore137:
;tetris.c,473 :: 		EEPROM_Write(addr++, hiscore_record[j]);
0x0B06	0x086B      	MOVF       check_highscore_addr_L0, 0
0x0B07	0x1283      	BCF        STATUS, 5
0x0B08	0x1703      	BSF        STATUS, 6
0x0B09	0x0095      	MOVWF      FARG_EEPROM_Write_Address
0x0B0A	0x1683      	BSF        STATUS, 5
0x0B0B	0x1303      	BCF        STATUS, 6
0x0B0C	0x0868      	MOVF       check_highscore_j_L0, 0
0x0B0D	0x3ECD      	ADDLW      check_highscore_hiscore_record_L0
0x0B0E	0x0084      	MOVWF      FSR
0x0B0F	0x0800      	MOVF       INDF, 0
0x0B10	0x1283      	BCF        STATUS, 5
0x0B11	0x1703      	BSF        STATUS, 6
0x0B12	0x0096      	MOVWF      FARG_EEPROM_Write_data_
0x0B13	0x118A      	BCF        PCLATH, 3
0x0B14	0x24EA      	CALL       _EEPROM_Write
0x0B15	0x158A      	BSF        PCLATH, 3
0x0B16	0x1303      	BCF        STATUS, 6
0x0B17	0x0AEB      	INCF       check_highscore_addr_L0, 1
;tetris.c,470 :: 		for (j=0; j<16; j++) {
0x0B18	0x0AE8      	INCF       check_highscore_j_L0, 1
;tetris.c,474 :: 		}
0x0B19	0x2AF1      	GOTO       L_check_highscore134
L_check_highscore135:
;tetris.c,475 :: 		Delay_ms(20);
0x0B1A	0x3082      	MOVLW      130
0x0B1B	0x00FC      	MOVWF      R12
0x0B1C	0x30DD      	MOVLW      221
0x0B1D	0x00FD      	MOVWF      R13
L_check_highscore138:
0x0B1E	0x0BFD      	DECFSZ     R13, 1
0x0B1F	0x2B1E      	GOTO       L_check_highscore138
0x0B20	0x0BFC      	DECFSZ     R12, 1
0x0B21	0x2B1E      	GOTO       L_check_highscore138
0x0B22	0x0000      	NOP
0x0B23	0x0000      	NOP
;tetris.c,476 :: 		addr = 0x80;
0x0B24	0x3080      	MOVLW      128
0x0B25	0x00EB      	MOVWF      check_highscore_addr_L0
;tetris.c,477 :: 		for(k=0;k<10;k++) {
0x0B26	0x01E9      	CLRF       check_highscore_k_L0
L_check_highscore139:
0x0B27	0x300A      	MOVLW      10
0x0B28	0x0269      	SUBWF      check_highscore_k_L0, 0
0x0B29	0x1803      	BTFSC      STATUS, 0
0x0B2A	0x2B3F      	GOTO       L_check_highscore140
;tetris.c,478 :: 		EEPROM_Write(addr++, player_name[k]);
0x0B2B	0x086B      	MOVF       check_highscore_addr_L0, 0
0x0B2C	0x1283      	BCF        STATUS, 5
0x0B2D	0x1703      	BSF        STATUS, 6
0x0B2E	0x0095      	MOVWF      FARG_EEPROM_Write_Address
0x0B2F	0x1683      	BSF        STATUS, 5
0x0B30	0x1303      	BCF        STATUS, 6
0x0B31	0x0869      	MOVF       check_highscore_k_L0, 0
0x0B32	0x3EDD      	ADDLW      check_highscore_player_name_L0
0x0B33	0x0084      	MOVWF      FSR
0x0B34	0x0800      	MOVF       INDF, 0
0x0B35	0x1283      	BCF        STATUS, 5
0x0B36	0x1703      	BSF        STATUS, 6
0x0B37	0x0096      	MOVWF      FARG_EEPROM_Write_data_
0x0B38	0x118A      	BCF        PCLATH, 3
0x0B39	0x24EA      	CALL       _EEPROM_Write
0x0B3A	0x158A      	BSF        PCLATH, 3
0x0B3B	0x1303      	BCF        STATUS, 6
0x0B3C	0x0AEB      	INCF       check_highscore_addr_L0, 1
;tetris.c,477 :: 		for(k=0;k<10;k++) {
0x0B3D	0x0AE9      	INCF       check_highscore_k_L0, 1
;tetris.c,479 :: 		}
0x0B3E	0x2B27      	GOTO       L_check_highscore139
L_check_highscore140:
;tetris.c,480 :: 		Delay_ms(20);
0x0B3F	0x3082      	MOVLW      130
0x0B40	0x00FC      	MOVWF      R12
0x0B41	0x30DD      	MOVLW      221
0x0B42	0x00FD      	MOVWF      R13
L_check_highscore142:
0x0B43	0x0BFD      	DECFSZ     R13, 1
0x0B44	0x2B43      	GOTO       L_check_highscore142
0x0B45	0x0BFC      	DECFSZ     R12, 1
0x0B46	0x2B43      	GOTO       L_check_highscore142
0x0B47	0x0000      	NOP
0x0B48	0x0000      	NOP
;tetris.c,482 :: 		return 1;
0x0B49	0x3001      	MOVLW      1
0x0B4A	0x00F0      	MOVWF      R0
0x0B4B	0x0008      	RETURN
;tetris.c,483 :: 		}
L_check_highscore81:
0x0B4C	0x1683      	BSF        STATUS, 5
;tetris.c,365 :: 		for (i=0; i<8; i++) {
0x0B4D	0x0AE7      	INCF       check_highscore_i_L0, 1
;tetris.c,484 :: 		}
0x0B4E	0x2814      	GOTO       L_check_highscore73
L_check_highscore74:
;tetris.c,485 :: 		return 0;
0x0B4F	0x01F0      	CLRF       R0
;tetris.c,486 :: 		}
0x0B50	0x0008      	RETURN
; end of _check_highscore
_show_highscore:
;tetris.c,294 :: 		void show_highscore(void)
;tetris.c,306 :: 		ks0108_fill(0);
0x0B51	0x1283      	BCF        STATUS, 5
0x0B52	0x1703      	BSF        STATUS, 6
0x0B53	0x0195      	CLRF       FARG_ks0108_fill_pattern
0x0B54	0x118A      	BCF        PCLATH, 3
0x0B55	0x2294      	CALL       _ks0108_fill
0x0B56	0x158A      	BSF        PCLATH, 3
;tetris.c,308 :: 		y=0;
0x0B57	0x1683      	BSF        STATUS, 5
0x0B58	0x1303      	BCF        STATUS, 6
0x0B59	0x01D2      	CLRF       show_highscore_y_L0
;tetris.c,309 :: 		addr =0;
0x0B5A	0x01CD      	CLRF       show_highscore_addr_L0
0x0B5B	0x01CE      	CLRF       show_highscore_addr_L0+1
;tetris.c,311 :: 		for(i=0; i<8; i++) {
0x0B5C	0x01CF      	CLRF       show_highscore_i_L0
L_show_highscore58:
0x0B5D	0x3008      	MOVLW      8
0x0B5E	0x024F      	SUBWF      show_highscore_i_L0, 0
0x0B5F	0x1803      	BTFSC      STATUS, 0
0x0B60	0x2C3F      	GOTO       L_show_highscore59
;tetris.c,312 :: 		x=0;
0x0B61	0x01D1      	CLRF       show_highscore_x_L0
;tetris.c,314 :: 		ks0108_char(x,y,i+17,0);
0x0B62	0x1283      	BCF        STATUS, 5
0x0B63	0x1703      	BSF        STATUS, 6
0x0B64	0x0195      	CLRF       FARG_ks0108_char_x
0x0B65	0x1683      	BSF        STATUS, 5
0x0B66	0x1303      	BCF        STATUS, 6
0x0B67	0x0852      	MOVF       show_highscore_y_L0, 0
0x0B68	0x1283      	BCF        STATUS, 5
0x0B69	0x1703      	BSF        STATUS, 6
0x0B6A	0x0096      	MOVWF      FARG_ks0108_char_y
0x0B6B	0x3011      	MOVLW      17
0x0B6C	0x1683      	BSF        STATUS, 5
0x0B6D	0x1303      	BCF        STATUS, 6
0x0B6E	0x074F      	ADDWF      show_highscore_i_L0, 0
0x0B6F	0x1283      	BCF        STATUS, 5
0x0B70	0x1703      	BSF        STATUS, 6
0x0B71	0x0097      	MOVWF      FARG_ks0108_char_c
0x0B72	0x0198      	CLRF       FARG_ks0108_char_invert
0x0B73	0x118A      	BCF        PCLATH, 3
0x0B74	0x24A3      	CALL       _ks0108_char
0x0B75	0x158A      	BSF        PCLATH, 3
;tetris.c,315 :: 		x+=6;
0x0B76	0x3006      	MOVLW      6
0x0B77	0x1683      	BSF        STATUS, 5
0x0B78	0x1303      	BCF        STATUS, 6
0x0B79	0x0751      	ADDWF      show_highscore_x_L0, 0
0x0B7A	0x00F0      	MOVWF      R0
0x0B7B	0x0870      	MOVF       R0, 0
0x0B7C	0x00D1      	MOVWF      show_highscore_x_L0
;tetris.c,316 :: 		ks0108_char(x,y,14,0);
0x0B7D	0x0870      	MOVF       R0, 0
0x0B7E	0x1283      	BCF        STATUS, 5
0x0B7F	0x1703      	BSF        STATUS, 6
0x0B80	0x0095      	MOVWF      FARG_ks0108_char_x
0x0B81	0x1683      	BSF        STATUS, 5
0x0B82	0x1303      	BCF        STATUS, 6
0x0B83	0x0852      	MOVF       show_highscore_y_L0, 0
0x0B84	0x1283      	BCF        STATUS, 5
0x0B85	0x1703      	BSF        STATUS, 6
0x0B86	0x0096      	MOVWF      FARG_ks0108_char_y
0x0B87	0x300E      	MOVLW      14
0x0B88	0x0097      	MOVWF      FARG_ks0108_char_c
0x0B89	0x0198      	CLRF       FARG_ks0108_char_invert
0x0B8A	0x118A      	BCF        PCLATH, 3
0x0B8B	0x24A3      	CALL       _ks0108_char
0x0B8C	0x158A      	BSF        PCLATH, 3
;tetris.c,317 :: 		x+=12;
0x0B8D	0x300C      	MOVLW      12
0x0B8E	0x1683      	BSF        STATUS, 5
0x0B8F	0x1303      	BCF        STATUS, 6
0x0B90	0x07D1      	ADDWF      show_highscore_x_L0, 1
;tetris.c,320 :: 		for (j=0;j<14;j++) {
0x0B91	0x01D0      	CLRF       show_highscore_j_L0
L_show_highscore61:
0x0B92	0x300E      	MOVLW      14
0x0B93	0x0250      	SUBWF      show_highscore_j_L0, 0
0x0B94	0x1803      	BTFSC      STATUS, 0
0x0B95	0x2BC4      	GOTO       L_show_highscore62
;tetris.c,321 :: 		namechar = EEPROM_Read(addr++);
0x0B96	0x084D      	MOVF       show_highscore_addr_L0, 0
0x0B97	0x1283      	BCF        STATUS, 5
0x0B98	0x1703      	BSF        STATUS, 6
0x0B99	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0B9A	0x118A      	BCF        PCLATH, 3
0x0B9B	0x2289      	CALL       _EEPROM_Read
0x0B9C	0x158A      	BSF        PCLATH, 3
0x0B9D	0x0870      	MOVF       R0, 0
0x0B9E	0x1683      	BSF        STATUS, 5
0x0B9F	0x1303      	BCF        STATUS, 6
0x0BA0	0x00D5      	MOVWF      show_highscore_namechar_L0
0x0BA1	0x0ACD      	INCF       show_highscore_addr_L0, 1
0x0BA2	0x1903      	BTFSC      STATUS, 2
0x0BA3	0x0ACE      	INCF       show_highscore_addr_L0+1, 1
;tetris.c,322 :: 		if (namechar > 0x7f)
0x0BA4	0x0870      	MOVF       R0, 0
0x0BA5	0x3C7F      	SUBLW      127
0x0BA6	0x1803      	BTFSC      STATUS, 0
0x0BA7	0x2BA9      	GOTO       L_show_highscore64
;tetris.c,323 :: 		continue;
0x0BA8	0x2BC2      	GOTO       L_show_highscore63
L_show_highscore64:
;tetris.c,324 :: 		ks0108_char(x,y,namechar-32,0);
0x0BA9	0x0851      	MOVF       show_highscore_x_L0, 0
0x0BAA	0x1283      	BCF        STATUS, 5
0x0BAB	0x1703      	BSF        STATUS, 6
0x0BAC	0x0095      	MOVWF      FARG_ks0108_char_x
0x0BAD	0x1683      	BSF        STATUS, 5
0x0BAE	0x1303      	BCF        STATUS, 6
0x0BAF	0x0852      	MOVF       show_highscore_y_L0, 0
0x0BB0	0x1283      	BCF        STATUS, 5
0x0BB1	0x1703      	BSF        STATUS, 6
0x0BB2	0x0096      	MOVWF      FARG_ks0108_char_y
0x0BB3	0x3020      	MOVLW      32
0x0BB4	0x1683      	BSF        STATUS, 5
0x0BB5	0x1303      	BCF        STATUS, 6
0x0BB6	0x0255      	SUBWF      show_highscore_namechar_L0, 0
0x0BB7	0x1283      	BCF        STATUS, 5
0x0BB8	0x1703      	BSF        STATUS, 6
0x0BB9	0x0097      	MOVWF      FARG_ks0108_char_c
0x0BBA	0x0198      	CLRF       FARG_ks0108_char_invert
0x0BBB	0x118A      	BCF        PCLATH, 3
0x0BBC	0x24A3      	CALL       _ks0108_char
0x0BBD	0x158A      	BSF        PCLATH, 3
;tetris.c,325 :: 		x+=6;
0x0BBE	0x3006      	MOVLW      6
0x0BBF	0x1683      	BSF        STATUS, 5
0x0BC0	0x1303      	BCF        STATUS, 6
0x0BC1	0x07D1      	ADDWF      show_highscore_x_L0, 1
;tetris.c,326 :: 		}
L_show_highscore63:
;tetris.c,320 :: 		for (j=0;j<14;j++) {
0x0BC2	0x0AD0      	INCF       show_highscore_j_L0, 1
;tetris.c,326 :: 		}
0x0BC3	0x2B92      	GOTO       L_show_highscore61
L_show_highscore62:
;tetris.c,327 :: 		Delay_ms(20);
0x0BC4	0x3082      	MOVLW      130
0x0BC5	0x00FC      	MOVWF      R12
0x0BC6	0x30DD      	MOVLW      221
0x0BC7	0x00FD      	MOVWF      R13
L_show_highscore65:
0x0BC8	0x0BFD      	DECFSZ     R13, 1
0x0BC9	0x2BC8      	GOTO       L_show_highscore65
0x0BCA	0x0BFC      	DECFSZ     R12, 1
0x0BCB	0x2BC8      	GOTO       L_show_highscore65
0x0BCC	0x0000      	NOP
0x0BCD	0x0000      	NOP
;tetris.c,329 :: 		hiscore = EEPROM_Read(addr++);
0x0BCE	0x084D      	MOVF       show_highscore_addr_L0, 0
0x0BCF	0x1283      	BCF        STATUS, 5
0x0BD0	0x1703      	BSF        STATUS, 6
0x0BD1	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0BD2	0x118A      	BCF        PCLATH, 3
0x0BD3	0x2289      	CALL       _EEPROM_Read
0x0BD4	0x158A      	BSF        PCLATH, 3
0x0BD5	0x0870      	MOVF       R0, 0
0x0BD6	0x1683      	BSF        STATUS, 5
0x0BD7	0x1303      	BCF        STATUS, 6
0x0BD8	0x00D3      	MOVWF      show_highscore_hiscore_L0
0x0BD9	0x01D4      	CLRF       show_highscore_hiscore_L0+1
0x0BDA	0x0ACD      	INCF       show_highscore_addr_L0, 1
0x0BDB	0x1903      	BTFSC      STATUS, 2
0x0BDC	0x0ACE      	INCF       show_highscore_addr_L0+1, 1
;tetris.c,330 :: 		hiscore |= EEPROM_Read(addr++) << 8;
0x0BDD	0x084D      	MOVF       show_highscore_addr_L0, 0
0x0BDE	0x1283      	BCF        STATUS, 5
0x0BDF	0x1703      	BSF        STATUS, 6
0x0BE0	0x0095      	MOVWF      FARG_EEPROM_Read_Address
0x0BE1	0x118A      	BCF        PCLATH, 3
0x0BE2	0x2289      	CALL       _EEPROM_Read
0x0BE3	0x158A      	BSF        PCLATH, 3
0x0BE4	0x0870      	MOVF       R0, 0
0x0BE5	0x00F2      	MOVWF      R1+1
0x0BE6	0x01F1      	CLRF       R1
0x0BE7	0x0871      	MOVF       R1, 0
0x0BE8	0x1683      	BSF        STATUS, 5
0x0BE9	0x1303      	BCF        STATUS, 6
0x0BEA	0x04D3      	IORWF      show_highscore_hiscore_L0, 1
0x0BEB	0x0872      	MOVF       R1+1, 0
0x0BEC	0x04D4      	IORWF      show_highscore_hiscore_L0+1, 1
0x0BED	0x0ACD      	INCF       show_highscore_addr_L0, 1
0x0BEE	0x1903      	BTFSC      STATUS, 2
0x0BEF	0x0ACE      	INCF       show_highscore_addr_L0+1, 1
;tetris.c,332 :: 		strcpy(scorestr,"     ",5);
0x0BF0	0x30D6      	MOVLW      show_highscore_scorestr_L0
0x0BF1	0x1283      	BCF        STATUS, 5
0x0BF2	0x1703      	BSF        STATUS, 6
0x0BF3	0x0095      	MOVWF      FARG_strcpy_target
0x0BF4	0x3033      	MOVLW      ?lstr1_tetris
0x0BF5	0x0096      	MOVWF      FARG_strcpy_source
0x0BF6	0x3005      	MOVLW      5
0x0BF7	0x0097      	MOVWF      FARG_strcpy_length
0x0BF8	0x118A      	BCF        PCLATH, 3
0x0BF9	0x2396      	CALL       _strcpy
0x0BFA	0x158A      	BSF        PCLATH, 3
;tetris.c,333 :: 		itoa(scorestr, hiscore, 5, 10);
0x0BFB	0x30D6      	MOVLW      show_highscore_scorestr_L0
0x0BFC	0x1283      	BCF        STATUS, 5
0x0BFD	0x1703      	BSF        STATUS, 6
0x0BFE	0x0095      	MOVWF      FARG_itoa_target
0x0BFF	0x1683      	BSF        STATUS, 5
0x0C00	0x1303      	BCF        STATUS, 6
0x0C01	0x0853      	MOVF       show_highscore_hiscore_L0, 0
0x0C02	0x1283      	BCF        STATUS, 5
0x0C03	0x1703      	BSF        STATUS, 6
0x0C04	0x0096      	MOVWF      FARG_itoa_value
0x0C05	0x1683      	BSF        STATUS, 5
0x0C06	0x1303      	BCF        STATUS, 6
0x0C07	0x0854      	MOVF       show_highscore_hiscore_L0+1, 0
0x0C08	0x1283      	BCF        STATUS, 5
0x0C09	0x1703      	BSF        STATUS, 6
0x0C0A	0x0097      	MOVWF      FARG_itoa_value+1
0x0C0B	0x3005      	MOVLW      5
0x0C0C	0x0098      	MOVWF      FARG_itoa_i
0x0C0D	0x300A      	MOVLW      10
0x0C0E	0x0099      	MOVWF      FARG_itoa_base
0x0C0F	0x3000      	MOVLW      0
0x0C10	0x009A      	MOVWF      FARG_itoa_base+1
0x0C11	0x118A      	BCF        PCLATH, 3
0x0C12	0x22B4      	CALL       _itoa
0x0C13	0x158A      	BSF        PCLATH, 3
;tetris.c,335 :: 		x=99;
0x0C14	0x3063      	MOVLW      99
0x0C15	0x1683      	BSF        STATUS, 5
0x0C16	0x1303      	BCF        STATUS, 6
0x0C17	0x00D1      	MOVWF      show_highscore_x_L0
;tetris.c,336 :: 		for (j=0;j<5;j++) {
0x0C18	0x01D0      	CLRF       show_highscore_j_L0
L_show_highscore66:
0x0C19	0x3005      	MOVLW      5
0x0C1A	0x0250      	SUBWF      show_highscore_j_L0, 0
0x0C1B	0x1803      	BTFSC      STATUS, 0
0x0C1C	0x2C3B      	GOTO       L_show_highscore67
;tetris.c,337 :: 		ks0108_char(x,y,scorestr[j]-32,0);
0x0C1D	0x0851      	MOVF       show_highscore_x_L0, 0
0x0C1E	0x1283      	BCF        STATUS, 5
0x0C1F	0x1703      	BSF        STATUS, 6
0x0C20	0x0095      	MOVWF      FARG_ks0108_char_x
0x0C21	0x1683      	BSF        STATUS, 5
0x0C22	0x1303      	BCF        STATUS, 6
0x0C23	0x0852      	MOVF       show_highscore_y_L0, 0
0x0C24	0x1283      	BCF        STATUS, 5
0x0C25	0x1703      	BSF        STATUS, 6
0x0C26	0x0096      	MOVWF      FARG_ks0108_char_y
0x0C27	0x1683      	BSF        STATUS, 5
0x0C28	0x1303      	BCF        STATUS, 6
0x0C29	0x0850      	MOVF       show_highscore_j_L0, 0
0x0C2A	0x3ED6      	ADDLW      show_highscore_scorestr_L0
0x0C2B	0x0084      	MOVWF      FSR
0x0C2C	0x3020      	MOVLW      32
0x0C2D	0x0200      	SUBWF      INDF, 0
0x0C2E	0x1283      	BCF        STATUS, 5
0x0C2F	0x1703      	BSF        STATUS, 6
0x0C30	0x0097      	MOVWF      FARG_ks0108_char_c
0x0C31	0x0198      	CLRF       FARG_ks0108_char_invert
0x0C32	0x118A      	BCF        PCLATH, 3
0x0C33	0x24A3      	CALL       _ks0108_char
0x0C34	0x158A      	BSF        PCLATH, 3
;tetris.c,338 :: 		x+=6;
0x0C35	0x3006      	MOVLW      6
0x0C36	0x1683      	BSF        STATUS, 5
0x0C37	0x1303      	BCF        STATUS, 6
0x0C38	0x07D1      	ADDWF      show_highscore_x_L0, 1
;tetris.c,336 :: 		for (j=0;j<5;j++) {
0x0C39	0x0AD0      	INCF       show_highscore_j_L0, 1
;tetris.c,339 :: 		}
0x0C3A	0x2C19      	GOTO       L_show_highscore66
L_show_highscore67:
;tetris.c,341 :: 		y+=8;
0x0C3B	0x3008      	MOVLW      8
0x0C3C	0x07D2      	ADDWF      show_highscore_y_L0, 1
;tetris.c,311 :: 		for(i=0; i<8; i++) {
0x0C3D	0x0ACF      	INCF       show_highscore_i_L0, 1
;tetris.c,343 :: 		}
0x0C3E	0x2B5D      	GOTO       L_show_highscore58
L_show_highscore59:
;tetris.c,345 :: 		while(PORTC & 0xf0);
L_show_highscore69:
0x0C3F	0x30F0      	MOVLW      240
0x0C40	0x1283      	BCF        STATUS, 5
0x0C41	0x0507      	ANDWF      PORTC, 0
0x0C42	0x00F0      	MOVWF      R0
0x0C43	0x1903      	BTFSC      STATUS, 2
0x0C44	0x2C46      	GOTO       L_show_highscore70
0x0C45	0x2C3F      	GOTO       L_show_highscore69
L_show_highscore70:
;tetris.c,346 :: 		while(!(PORTC & 0xf0));
L_show_highscore71:
0x0C46	0x30F0      	MOVLW      240
0x0C47	0x0507      	ANDWF      PORTC, 0
0x0C48	0x00F0      	MOVWF      R0
0x0C49	0x1D03      	BTFSS      STATUS, 2
0x0C4A	0x2C4C      	GOTO       L_show_highscore72
0x0C4B	0x2C46      	GOTO       L_show_highscore71
L_show_highscore72:
;tetris.c,348 :: 		}
0x0C4C	0x0008      	RETURN
; end of _show_highscore
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0C4D	0x118A      	BCF        PCLATH, 3
0x0C4E	0x21CC      	CALL       _____DoICP
0x0C4F	0x158A      	BSF        PCLATH, 3
0x0C50	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0C51	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0C52	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0C53	0x0AA6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0C54	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0C55	0x0AA7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0C56	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0C57	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0C58	0x2C4D      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x0C59	0x0008      	RETURN
; end of ___CC2DW
_ks0108_init:
;ks0108.c,33 :: 		void ks0108_init(void)
;ks0108.c,36 :: 		ks0108_x = 0;
0x0C5A	0x1283      	BCF        STATUS, 5
0x0C5B	0x1303      	BCF        STATUS, 6
0x0C5C	0x01D5      	CLRF       _ks0108_x
;ks0108.c,37 :: 		ks0108_y = 0;
0x0C5D	0x01D6      	CLRF       _ks0108_y
;ks0108.c,38 :: 		ks0108_page = 0;
0x0C5E	0x01D7      	CLRF       _ks0108_page
;ks0108.c,41 :: 		REG_DATA = 0xff;
0x0C5F	0x30FF      	MOVLW      255
0x0C60	0x1683      	BSF        STATUS, 5
0x0C61	0x0088      	MOVWF      TRISD
;ks0108.c,44 :: 		REG_CTL = 0x00;
0x0C62	0x0186      	CLRF       TRISB
;ks0108.c,47 :: 		PORT_CTL = CTL_RST;
0x0C63	0x3020      	MOVLW      32
0x0C64	0x1283      	BCF        STATUS, 5
0x0C65	0x0086      	MOVWF      PORTB
;ks0108.c,50 :: 		ks0108_command(CMD_ON, KS0108_CONTROLLER0);
0x0C66	0x303F      	MOVLW      63
0x0C67	0x1703      	BSF        STATUS, 6
0x0C68	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0C69	0x01AA      	CLRF       FARG_ks0108_command_controller
0x0C6A	0x118A      	BCF        PCLATH, 3
0x0C6B	0x20CC      	CALL       _ks0108_command
0x0C6C	0x158A      	BSF        PCLATH, 3
;ks0108.c,51 :: 		ks0108_command(CMD_ON, KS0108_CONTROLLER1);
0x0C6D	0x303F      	MOVLW      63
0x0C6E	0x1703      	BSF        STATUS, 6
0x0C6F	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0C70	0x3001      	MOVLW      1
0x0C71	0x00AA      	MOVWF      FARG_ks0108_command_controller
0x0C72	0x118A      	BCF        PCLATH, 3
0x0C73	0x20CC      	CALL       _ks0108_command
0x0C74	0x158A      	BSF        PCLATH, 3
;ks0108.c,54 :: 		ks0108_command(CMD_DISP_START, KS0108_CONTROLLER0);
0x0C75	0x30C0      	MOVLW      192
0x0C76	0x1703      	BSF        STATUS, 6
0x0C77	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0C78	0x01AA      	CLRF       FARG_ks0108_command_controller
0x0C79	0x118A      	BCF        PCLATH, 3
0x0C7A	0x20CC      	CALL       _ks0108_command
0x0C7B	0x158A      	BSF        PCLATH, 3
;ks0108.c,55 :: 		ks0108_command(CMD_DISP_START, KS0108_CONTROLLER1);
0x0C7C	0x30C0      	MOVLW      192
0x0C7D	0x1703      	BSF        STATUS, 6
0x0C7E	0x00A9      	MOVWF      FARG_ks0108_command_cmd
0x0C7F	0x3001      	MOVLW      1
0x0C80	0x00AA      	MOVWF      FARG_ks0108_command_controller
0x0C81	0x118A      	BCF        PCLATH, 3
0x0C82	0x20CC      	CALL       _ks0108_command
0x0C83	0x158A      	BSF        PCLATH, 3
;ks0108.c,57 :: 		}
0x0C84	0x0008      	RETURN
; end of _ks0108_init
_ks0108_title:
;ks0108.c,267 :: 		void ks0108_title(unsigned short width, unsigned short hpages)
;ks0108.c,271 :: 		k=0;
0x0C85	0x1683      	BSF        STATUS, 5
0x0C86	0x1303      	BCF        STATUS, 6
0x0C87	0x01D3      	CLRF       ks0108_title_k_L0
0x0C88	0x01D4      	CLRF       ks0108_title_k_L0+1
;ks0108.c,272 :: 		for (i=0; i<hpages; i++) {
0x0C89	0x01CF      	CLRF       ks0108_title_i_L0
0x0C8A	0x01D0      	CLRF       ks0108_title_i_L0+1
L_ks0108_title39:
0x0C8B	0x3080      	MOVLW      128
0x0C8C	0x0650      	XORWF      ks0108_title_i_L0+1, 0
0x0C8D	0x00F0      	MOVWF      R0
0x0C8E	0x3080      	MOVLW      128
0x0C8F	0x0270      	SUBWF      R0, 0
0x0C90	0x1D03      	BTFSS      STATUS, 2
0x0C91	0x2C94      	GOTO       L__ks0108_title74
0x0C92	0x084E      	MOVF       FARG_ks0108_title_hpages, 0
0x0C93	0x024F      	SUBWF      ks0108_title_i_L0, 0
L__ks0108_title74:
0x0C94	0x1803      	BTFSC      STATUS, 0
0x0C95	0x2CFA      	GOTO       L_ks0108_title40
;ks0108.c,273 :: 		ks0108_locate(0,i<<3);
0x0C96	0x1283      	BCF        STATUS, 5
0x0C97	0x1703      	BSF        STATUS, 6
0x0C98	0x01A6      	CLRF       FARG_ks0108_locate_x
0x0C99	0x3003      	MOVLW      3
0x0C9A	0x00F0      	MOVWF      R0
0x0C9B	0x1683      	BSF        STATUS, 5
0x0C9C	0x1303      	BCF        STATUS, 6
0x0C9D	0x084F      	MOVF       ks0108_title_i_L0, 0
0x0C9E	0x1283      	BCF        STATUS, 5
0x0C9F	0x1703      	BSF        STATUS, 6
0x0CA0	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x0CA1	0x0870      	MOVF       R0, 0
L__ks0108_title75:
0x0CA2	0x1903      	BTFSC      STATUS, 2
0x0CA3	0x2CA8      	GOTO       L__ks0108_title76
0x0CA4	0x0DA7      	RLF        FARG_ks0108_locate_y, 1
0x0CA5	0x1027      	BCF        FARG_ks0108_locate_y, 0
0x0CA6	0x3EFF      	ADDLW      255
0x0CA7	0x2CA2      	GOTO       L__ks0108_title75
L__ks0108_title76:
0x0CA8	0x118A      	BCF        PCLATH, 3
0x0CA9	0x20E2      	CALL       _ks0108_locate
0x0CAA	0x158A      	BSF        PCLATH, 3
;ks0108.c,274 :: 		for (j=0;j<width;j++) {
0x0CAB	0x1683      	BSF        STATUS, 5
0x0CAC	0x01D1      	CLRF       ks0108_title_j_L0
0x0CAD	0x01D2      	CLRF       ks0108_title_j_L0+1
L_ks0108_title42:
0x0CAE	0x3080      	MOVLW      128
0x0CAF	0x0652      	XORWF      ks0108_title_j_L0+1, 0
0x0CB0	0x00F0      	MOVWF      R0
0x0CB1	0x3080      	MOVLW      128
0x0CB2	0x0270      	SUBWF      R0, 0
0x0CB3	0x1D03      	BTFSS      STATUS, 2
0x0CB4	0x2CB7      	GOTO       L__ks0108_title77
0x0CB5	0x084D      	MOVF       FARG_ks0108_title_width, 0
0x0CB6	0x0251      	SUBWF      ks0108_title_j_L0, 0
L__ks0108_title77:
0x0CB7	0x1803      	BTFSC      STATUS, 0
0x0CB8	0x2CF6      	GOTO       L_ks0108_title43
;ks0108.c,275 :: 		if (j==64)
0x0CB9	0x3000      	MOVLW      0
0x0CBA	0x0652      	XORWF      ks0108_title_j_L0+1, 0
0x0CBB	0x1D03      	BTFSS      STATUS, 2
0x0CBC	0x2CBF      	GOTO       L__ks0108_title78
0x0CBD	0x3040      	MOVLW      64
0x0CBE	0x0651      	XORWF      ks0108_title_j_L0, 0
L__ks0108_title78:
0x0CBF	0x1D03      	BTFSS      STATUS, 2
0x0CC0	0x2CD7      	GOTO       L_ks0108_title45
;ks0108.c,276 :: 		ks0108_locate(j,i<<3);
0x0CC1	0x0851      	MOVF       ks0108_title_j_L0, 0
0x0CC2	0x1283      	BCF        STATUS, 5
0x0CC3	0x1703      	BSF        STATUS, 6
0x0CC4	0x00A6      	MOVWF      FARG_ks0108_locate_x
0x0CC5	0x3003      	MOVLW      3
0x0CC6	0x00F0      	MOVWF      R0
0x0CC7	0x1683      	BSF        STATUS, 5
0x0CC8	0x1303      	BCF        STATUS, 6
0x0CC9	0x084F      	MOVF       ks0108_title_i_L0, 0
0x0CCA	0x1283      	BCF        STATUS, 5
0x0CCB	0x1703      	BSF        STATUS, 6
0x0CCC	0x00A7      	MOVWF      FARG_ks0108_locate_y
0x0CCD	0x0870      	MOVF       R0, 0
L__ks0108_title79:
0x0CCE	0x1903      	BTFSC      STATUS, 2
0x0CCF	0x2CD4      	GOTO       L__ks0108_title80
0x0CD0	0x0DA7      	RLF        FARG_ks0108_locate_y, 1
0x0CD1	0x1027      	BCF        FARG_ks0108_locate_y, 0
0x0CD2	0x3EFF      	ADDLW      255
0x0CD3	0x2CCE      	GOTO       L__ks0108_title79
L__ks0108_title80:
0x0CD4	0x118A      	BCF        PCLATH, 3
0x0CD5	0x20E2      	CALL       _ks0108_locate
0x0CD6	0x158A      	BSF        PCLATH, 3
L_ks0108_title45:
;ks0108.c,277 :: 		ks0108_data_write(title_bitmap[k++]);
0x0CD7	0x1683      	BSF        STATUS, 5
0x0CD8	0x0853      	MOVF       ks0108_title_k_L0, 0
0x0CD9	0x3E04      	ADDLW      ks0108_title_bitmap
0x0CDA	0x00F0      	MOVWF      R0
0x0CDB	0x3014      	MOVLW      hi_addr(ks0108_title_bitmap)
0x0CDC	0x1803      	BTFSC      STATUS, 0
0x0CDD	0x3E01      	ADDLW      1
0x0CDE	0x0754      	ADDWF      ks0108_title_k_L0+1, 0
0x0CDF	0x00F1      	MOVWF      R0+1
0x0CE0	0x0870      	MOVF       R0, 0
0x0CE1	0x1283      	BCF        STATUS, 5
0x0CE2	0x00A6      	MOVWF      ___DoICPAddr
0x0CE3	0x0871      	MOVF       R0+1, 0
0x0CE4	0x00A7      	MOVWF      ___DoICPAddr+1
0x0CE5	0x118A      	BCF        PCLATH, 3
0x0CE6	0x21CC      	CALL       _____DoICP
0x0CE7	0x158A      	BSF        PCLATH, 3
0x0CE8	0x120A      	BCF        PCLATH, 4
0x0CE9	0x1703      	BSF        STATUS, 6
0x0CEA	0x00A5      	MOVWF      FARG_ks0108_data_write_d
0x0CEB	0x118A      	BCF        PCLATH, 3
0x0CEC	0x2142      	CALL       _ks0108_data_write
0x0CED	0x158A      	BSF        PCLATH, 3
0x0CEE	0x1683      	BSF        STATUS, 5
0x0CEF	0x0AD3      	INCF       ks0108_title_k_L0, 1
0x0CF0	0x1903      	BTFSC      STATUS, 2
0x0CF1	0x0AD4      	INCF       ks0108_title_k_L0+1, 1
;ks0108.c,274 :: 		for (j=0;j<width;j++) {
0x0CF2	0x0AD1      	INCF       ks0108_title_j_L0, 1
0x0CF3	0x1903      	BTFSC      STATUS, 2
0x0CF4	0x0AD2      	INCF       ks0108_title_j_L0+1, 1
;ks0108.c,278 :: 		}
0x0CF5	0x2CAE      	GOTO       L_ks0108_title42
L_ks0108_title43:
;ks0108.c,272 :: 		for (i=0; i<hpages; i++) {
0x0CF6	0x0ACF      	INCF       ks0108_title_i_L0, 1
0x0CF7	0x1903      	BTFSC      STATUS, 2
0x0CF8	0x0AD0      	INCF       ks0108_title_i_L0+1, 1
;ks0108.c,279 :: 		}
0x0CF9	0x2C8B      	GOTO       L_ks0108_title39
L_ks0108_title40:
;ks0108.c,280 :: 		}
0x0CFA	0x0008      	RETURN
; end of _ks0108_title
_mukke_start:
;mukke.c,118 :: 		void mukke_start()
;mukke.c,120 :: 		INTCON = 0;
0x0CFB	0x018B      	CLRF       INTCON
;mukke.c,121 :: 		INTCON.GIE = 1;
0x0CFC	0x178B      	BSF        INTCON, 7
;mukke.c,122 :: 		INTCON.TMR0IE = 1;
0x0CFD	0x168B      	BSF        INTCON, 5
;mukke.c,124 :: 		song_position = 0;
0x0CFE	0x1283      	BCF        STATUS, 5
0x0CFF	0x1303      	BCF        STATUS, 6
0x0D00	0x01D4      	CLRF       _song_position
;mukke.c,125 :: 		current_note_delay = 0;
0x0D01	0x01D3      	CLRF       _current_note_delay
;mukke.c,126 :: 		beatcount = 0;
0x0D02	0x01DE      	CLRF       _beatcount
;mukke.c,128 :: 		OPTION_REG  = 0b11000011;
0x0D03	0x30C3      	MOVLW      195
0x0D04	0x1683      	BSF        STATUS, 5
0x0D05	0x0081      	MOVWF      OPTION_REG
;mukke.c,129 :: 		T2CON   = 0b00001111;
0x0D06	0x300F      	MOVLW      15
0x0D07	0x1283      	BCF        STATUS, 5
0x0D08	0x0092      	MOVWF      T2CON
;mukke.c,132 :: 		}
0x0D09	0x0008      	RETURN
; end of _mukke_start
_game_over:
;tetris.c,536 :: 		void game_over()
;tetris.c,541 :: 		int x = 11;
0x0D0A	0x300B      	MOVLW      11
0x0D0B	0x1683      	BSF        STATUS, 5
0x0D0C	0x1303      	BCF        STATUS, 6
0x0D0D	0x00CE      	MOVWF      game_over_x_L0
0x0D0E	0x3000      	MOVLW      0
0x0D0F	0x00CF      	MOVWF      game_over_x_L0+1
;tetris.c,542 :: 		for (i=0; i<4; i++) {
0x0D10	0x01CD      	CLRF       game_over_i_L0
L_game_over149:
0x0D11	0x3004      	MOVLW      4
0x0D12	0x024D      	SUBWF      game_over_i_L0, 0
0x0D13	0x1803      	BTFSC      STATUS, 0
0x0D14	0x2D61      	GOTO       L_game_over150
;tetris.c,543 :: 		ks0108_char(x, 24, tmp[0][i]-32,0);
0x0D15	0x084E      	MOVF       game_over_x_L0, 0
0x0D16	0x1283      	BCF        STATUS, 5
0x0D17	0x1703      	BSF        STATUS, 6
0x0D18	0x0095      	MOVWF      FARG_ks0108_char_x
0x0D19	0x3018      	MOVLW      24
0x0D1A	0x0096      	MOVWF      FARG_ks0108_char_y
0x0D1B	0x1683      	BSF        STATUS, 5
0x0D1C	0x1303      	BCF        STATUS, 6
0x0D1D	0x084D      	MOVF       game_over_i_L0, 0
0x0D1E	0x3EF2      	ADDLW      game_over_tmp_L0
0x0D1F	0x00F0      	MOVWF      R0
0x0D20	0x3018      	MOVLW      hi_addr(game_over_tmp_L0)
0x0D21	0x1803      	BTFSC      STATUS, 0
0x0D22	0x3E01      	ADDLW      1
0x0D23	0x00F1      	MOVWF      R0+1
0x0D24	0x0870      	MOVF       R0, 0
0x0D25	0x1283      	BCF        STATUS, 5
0x0D26	0x00A6      	MOVWF      ___DoICPAddr
0x0D27	0x0871      	MOVF       R0+1, 0
0x0D28	0x00A7      	MOVWF      ___DoICPAddr+1
0x0D29	0x118A      	BCF        PCLATH, 3
0x0D2A	0x21CC      	CALL       _____DoICP
0x0D2B	0x158A      	BSF        PCLATH, 3
0x0D2C	0x120A      	BCF        PCLATH, 4
0x0D2D	0x00F0      	MOVWF      R0
0x0D2E	0x3020      	MOVLW      32
0x0D2F	0x0270      	SUBWF      R0, 0
0x0D30	0x1703      	BSF        STATUS, 6
0x0D31	0x0097      	MOVWF      FARG_ks0108_char_c
0x0D32	0x0198      	CLRF       FARG_ks0108_char_invert
0x0D33	0x118A      	BCF        PCLATH, 3
0x0D34	0x24A3      	CALL       _ks0108_char
0x0D35	0x158A      	BSF        PCLATH, 3
;tetris.c,544 :: 		ks0108_char(x, 32, tmp[1][i]-32,0);
0x0D36	0x1683      	BSF        STATUS, 5
0x0D37	0x1303      	BCF        STATUS, 6
0x0D38	0x084E      	MOVF       game_over_x_L0, 0
0x0D39	0x1283      	BCF        STATUS, 5
0x0D3A	0x1703      	BSF        STATUS, 6
0x0D3B	0x0095      	MOVWF      FARG_ks0108_char_x
0x0D3C	0x3020      	MOVLW      32
0x0D3D	0x0096      	MOVWF      FARG_ks0108_char_y
0x0D3E	0x1683      	BSF        STATUS, 5
0x0D3F	0x1303      	BCF        STATUS, 6
0x0D40	0x084D      	MOVF       game_over_i_L0, 0
0x0D41	0x3EF6      	ADDLW      game_over_tmp_L0+4
0x0D42	0x00F0      	MOVWF      R0
0x0D43	0x3018      	MOVLW      hi_addr(game_over_tmp_L0+4)
0x0D44	0x1803      	BTFSC      STATUS, 0
0x0D45	0x3E01      	ADDLW      1
0x0D46	0x00F1      	MOVWF      R0+1
0x0D47	0x0870      	MOVF       R0, 0
0x0D48	0x1283      	BCF        STATUS, 5
0x0D49	0x00A6      	MOVWF      ___DoICPAddr
0x0D4A	0x0871      	MOVF       R0+1, 0
0x0D4B	0x00A7      	MOVWF      ___DoICPAddr+1
0x0D4C	0x118A      	BCF        PCLATH, 3
0x0D4D	0x21CC      	CALL       _____DoICP
0x0D4E	0x158A      	BSF        PCLATH, 3
0x0D4F	0x120A      	BCF        PCLATH, 4
0x0D50	0x00F0      	MOVWF      R0
0x0D51	0x3020      	MOVLW      32
0x0D52	0x0270      	SUBWF      R0, 0
0x0D53	0x1703      	BSF        STATUS, 6
0x0D54	0x0097      	MOVWF      FARG_ks0108_char_c
0x0D55	0x0198      	CLRF       FARG_ks0108_char_invert
0x0D56	0x118A      	BCF        PCLATH, 3
0x0D57	0x24A3      	CALL       _ks0108_char
0x0D58	0x158A      	BSF        PCLATH, 3
;tetris.c,545 :: 		x += 6;
0x0D59	0x3006      	MOVLW      6
0x0D5A	0x1683      	BSF        STATUS, 5
0x0D5B	0x1303      	BCF        STATUS, 6
0x0D5C	0x07CE      	ADDWF      game_over_x_L0, 1
0x0D5D	0x1803      	BTFSC      STATUS, 0
0x0D5E	0x0ACF      	INCF       game_over_x_L0+1, 1
;tetris.c,542 :: 		for (i=0; i<4; i++) {
0x0D5F	0x0ACD      	INCF       game_over_i_L0, 1
;tetris.c,546 :: 		}
0x0D60	0x2D11      	GOTO       L_game_over149
L_game_over150:
;tetris.c,548 :: 		while (PORTC & 0xf0);
L_game_over152:
0x0D61	0x30F0      	MOVLW      240
0x0D62	0x1283      	BCF        STATUS, 5
0x0D63	0x0507      	ANDWF      PORTC, 0
0x0D64	0x00F0      	MOVWF      R0
0x0D65	0x1903      	BTFSC      STATUS, 2
0x0D66	0x2D68      	GOTO       L_game_over153
0x0D67	0x2D61      	GOTO       L_game_over152
L_game_over153:
;tetris.c,549 :: 		while (!(PORTC & 0xf0));
L_game_over154:
0x0D68	0x30F0      	MOVLW      240
0x0D69	0x0507      	ANDWF      PORTC, 0
0x0D6A	0x00F0      	MOVWF      R0
0x0D6B	0x1D03      	BTFSS      STATUS, 2
0x0D6C	0x2D6E      	GOTO       L_game_over155
0x0D6D	0x2D68      	GOTO       L_game_over154
L_game_over155:
;tetris.c,551 :: 		}
0x0D6E	0x0008      	RETURN
; end of _game_over
_update_scoreboard:
;tetris.c,511 :: 		void update_scoreboard(void) {
;tetris.c,518 :: 		strcpy(tmp0, "Row:      ", 10);
0x0D6F	0x30CD      	MOVLW      update_scoreboard_tmp0_L0
0x0D70	0x1283      	BCF        STATUS, 5
0x0D71	0x1703      	BSF        STATUS, 6
0x0D72	0x0095      	MOVWF      FARG_strcpy_target
0x0D73	0x3039      	MOVLW      ?lstr6_tetris
0x0D74	0x0096      	MOVWF      FARG_strcpy_source
0x0D75	0x300A      	MOVLW      10
0x0D76	0x0097      	MOVWF      FARG_strcpy_length
0x0D77	0x118A      	BCF        PCLATH, 3
0x0D78	0x2396      	CALL       _strcpy
0x0D79	0x158A      	BSF        PCLATH, 3
;tetris.c,519 :: 		strcpy(tmp1, "Lev:      ", 10);
0x0D7A	0x30D7      	MOVLW      update_scoreboard_tmp1_L0
0x0D7B	0x1283      	BCF        STATUS, 5
0x0D7C	0x1703      	BSF        STATUS, 6
0x0D7D	0x0095      	MOVWF      FARG_strcpy_target
0x0D7E	0x3028      	MOVLW      ?lstr7_tetris
0x0D7F	0x0096      	MOVWF      FARG_strcpy_source
0x0D80	0x300A      	MOVLW      10
0x0D81	0x0097      	MOVWF      FARG_strcpy_length
0x0D82	0x118A      	BCF        PCLATH, 3
0x0D83	0x2396      	CALL       _strcpy
0x0D84	0x158A      	BSF        PCLATH, 3
;tetris.c,520 :: 		strcpy(tmp2, "Scr:      ", 10);
0x0D85	0x30E1      	MOVLW      update_scoreboard_tmp2_L0
0x0D86	0x1283      	BCF        STATUS, 5
0x0D87	0x1703      	BSF        STATUS, 6
0x0D88	0x0095      	MOVWF      FARG_strcpy_target
0x0D89	0x3044      	MOVLW      ?lstr8_tetris
0x0D8A	0x0096      	MOVWF      FARG_strcpy_source
0x0D8B	0x300A      	MOVLW      10
0x0D8C	0x0097      	MOVWF      FARG_strcpy_length
0x0D8D	0x118A      	BCF        PCLATH, 3
0x0D8E	0x2396      	CALL       _strcpy
0x0D8F	0x158A      	BSF        PCLATH, 3
;tetris.c,522 :: 		itoa(&(tmp0[5]), removed_rows, 5, 10);
0x0D90	0x30D2      	MOVLW      update_scoreboard_tmp0_L0+5
0x0D91	0x1283      	BCF        STATUS, 5
0x0D92	0x1703      	BSF        STATUS, 6
0x0D93	0x0095      	MOVWF      FARG_itoa_target
0x0D94	0x1303      	BCF        STATUS, 6
0x0D95	0x0865      	MOVF       _removed_rows, 0
0x0D96	0x1703      	BSF        STATUS, 6
0x0D97	0x0096      	MOVWF      FARG_itoa_value
0x0D98	0x1303      	BCF        STATUS, 6
0x0D99	0x0866      	MOVF       _removed_rows+1, 0
0x0D9A	0x1703      	BSF        STATUS, 6
0x0D9B	0x0097      	MOVWF      FARG_itoa_value+1
0x0D9C	0x3005      	MOVLW      5
0x0D9D	0x0098      	MOVWF      FARG_itoa_i
0x0D9E	0x300A      	MOVLW      10
0x0D9F	0x0099      	MOVWF      FARG_itoa_base
0x0DA0	0x3000      	MOVLW      0
0x0DA1	0x009A      	MOVWF      FARG_itoa_base+1
0x0DA2	0x118A      	BCF        PCLATH, 3
0x0DA3	0x22B4      	CALL       _itoa
0x0DA4	0x158A      	BSF        PCLATH, 3
;tetris.c,523 :: 		itoa(&(tmp1[5]), level, 5, 10);
0x0DA5	0x30DC      	MOVLW      update_scoreboard_tmp1_L0+5
0x0DA6	0x0095      	MOVWF      FARG_itoa_target
0x0DA7	0x1303      	BCF        STATUS, 6
0x0DA8	0x085F      	MOVF       _level, 0
0x0DA9	0x1703      	BSF        STATUS, 6
0x0DAA	0x0096      	MOVWF      FARG_itoa_value
0x0DAB	0x0197      	CLRF       FARG_itoa_value+1
0x0DAC	0x3005      	MOVLW      5
0x0DAD	0x0098      	MOVWF      FARG_itoa_i
0x0DAE	0x300A      	MOVLW      10
0x0DAF	0x0099      	MOVWF      FARG_itoa_base
0x0DB0	0x3000      	MOVLW      0
0x0DB1	0x009A      	MOVWF      FARG_itoa_base+1
0x0DB2	0x118A      	BCF        PCLATH, 3
0x0DB3	0x22B4      	CALL       _itoa
0x0DB4	0x158A      	BSF        PCLATH, 3
;tetris.c,524 :: 		itoa(&(tmp2[5]), score, 5, 10);
0x0DB5	0x30E6      	MOVLW      update_scoreboard_tmp2_L0+5
0x0DB6	0x0095      	MOVWF      FARG_itoa_target
0x0DB7	0x1303      	BCF        STATUS, 6
0x0DB8	0x0858      	MOVF       _score, 0
0x0DB9	0x1703      	BSF        STATUS, 6
0x0DBA	0x0096      	MOVWF      FARG_itoa_value
0x0DBB	0x1303      	BCF        STATUS, 6
0x0DBC	0x0859      	MOVF       _score+1, 0
0x0DBD	0x1703      	BSF        STATUS, 6
0x0DBE	0x0097      	MOVWF      FARG_itoa_value+1
0x0DBF	0x3005      	MOVLW      5
0x0DC0	0x0098      	MOVWF      FARG_itoa_i
0x0DC1	0x300A      	MOVLW      10
0x0DC2	0x0099      	MOVWF      FARG_itoa_base
0x0DC3	0x3000      	MOVLW      0
0x0DC4	0x009A      	MOVWF      FARG_itoa_base+1
0x0DC5	0x118A      	BCF        PCLATH, 3
0x0DC6	0x22B4      	CALL       _itoa
0x0DC7	0x158A      	BSF        PCLATH, 3
;tetris.c,526 :: 		y = 56;
0x0DC8	0x3038      	MOVLW      56
0x0DC9	0x1683      	BSF        STATUS, 5
0x0DCA	0x1303      	BCF        STATUS, 6
0x0DCB	0x00EB      	MOVWF      update_scoreboard_y_L0
;tetris.c,527 :: 		for (i=0; i<10; i++) {
0x0DCC	0x01EC      	CLRF       update_scoreboard_i_L0
L_update_scoreboard146:
0x0DCD	0x300A      	MOVLW      10
0x0DCE	0x026C      	SUBWF      update_scoreboard_i_L0, 0
0x0DCF	0x1803      	BTFSC      STATUS, 0
0x0DD0	0x2E1B      	GOTO       L_update_scoreboard147
;tetris.c,528 :: 		ks0108_char_portrait(104, y, tmp0[i]-32,0);
0x0DD1	0x3068      	MOVLW      104
0x0DD2	0x1283      	BCF        STATUS, 5
0x0DD3	0x1703      	BSF        STATUS, 6
0x0DD4	0x0095      	MOVWF      FARG_ks0108_char_portrait_x
0x0DD5	0x1683      	BSF        STATUS, 5
0x0DD6	0x1303      	BCF        STATUS, 6
0x0DD7	0x086B      	MOVF       update_scoreboard_y_L0, 0
0x0DD8	0x1283      	BCF        STATUS, 5
0x0DD9	0x1703      	BSF        STATUS, 6
0x0DDA	0x0096      	MOVWF      FARG_ks0108_char_portrait_y
0x0DDB	0x1683      	BSF        STATUS, 5
0x0DDC	0x1303      	BCF        STATUS, 6
0x0DDD	0x086C      	MOVF       update_scoreboard_i_L0, 0
0x0DDE	0x3ECD      	ADDLW      update_scoreboard_tmp0_L0
0x0DDF	0x0084      	MOVWF      FSR
0x0DE0	0x3020      	MOVLW      32
0x0DE1	0x0200      	SUBWF      INDF, 0
0x0DE2	0x1283      	BCF        STATUS, 5
0x0DE3	0x1703      	BSF        STATUS, 6
0x0DE4	0x0097      	MOVWF      FARG_ks0108_char_portrait_c
0x0DE5	0x0198      	CLRF       FARG_ks0108_char_portrait_invert
0x0DE6	0x118A      	BCF        PCLATH, 3
0x0DE7	0x23B8      	CALL       _ks0108_char_portrait
0x0DE8	0x158A      	BSF        PCLATH, 3
;tetris.c,529 :: 		ks0108_char_portrait(112, y, tmp1[i]-32,0);
0x0DE9	0x3070      	MOVLW      112
0x0DEA	0x0095      	MOVWF      FARG_ks0108_char_portrait_x
0x0DEB	0x1683      	BSF        STATUS, 5
0x0DEC	0x1303      	BCF        STATUS, 6
0x0DED	0x086B      	MOVF       update_scoreboard_y_L0, 0
0x0DEE	0x1283      	BCF        STATUS, 5
0x0DEF	0x1703      	BSF        STATUS, 6
0x0DF0	0x0096      	MOVWF      FARG_ks0108_char_portrait_y
0x0DF1	0x1683      	BSF        STATUS, 5
0x0DF2	0x1303      	BCF        STATUS, 6
0x0DF3	0x086C      	MOVF       update_scoreboard_i_L0, 0
0x0DF4	0x3ED7      	ADDLW      update_scoreboard_tmp1_L0
0x0DF5	0x0084      	MOVWF      FSR
0x0DF6	0x3020      	MOVLW      32
0x0DF7	0x0200      	SUBWF      INDF, 0
0x0DF8	0x1283      	BCF        STATUS, 5
0x0DF9	0x1703      	BSF        STATUS, 6
0x0DFA	0x0097      	MOVWF      FARG_ks0108_char_portrait_c
0x0DFB	0x0198      	CLRF       FARG_ks0108_char_portrait_invert
0x0DFC	0x118A      	BCF        PCLATH, 3
0x0DFD	0x23B8      	CALL       _ks0108_char_portrait
0x0DFE	0x158A      	BSF        PCLATH, 3
;tetris.c,530 :: 		ks0108_char_portrait(120, y, tmp2[i]-32,0);
0x0DFF	0x3078      	MOVLW      120
0x0E00	0x0095      	MOVWF      FARG_ks0108_char_portrait_x
0x0E01	0x1683      	BSF        STATUS, 5
0x0E02	0x1303      	BCF        STATUS, 6
0x0E03	0x086B      	MOVF       update_scoreboard_y_L0, 0
0x0E04	0x1283      	BCF        STATUS, 5
0x0E05	0x1703      	BSF        STATUS, 6
0x0E06	0x0096      	MOVWF      FARG_ks0108_char_portrait_y
0x0E07	0x1683      	BSF        STATUS, 5
0x0E08	0x1303      	BCF        STATUS, 6
0x0E09	0x086C      	MOVF       update_scoreboard_i_L0, 0
0x0E0A	0x3EE1      	ADDLW      update_scoreboard_tmp2_L0
0x0E0B	0x0084      	MOVWF      FSR
0x0E0C	0x3020      	MOVLW      32
0x0E0D	0x0200      	SUBWF      INDF, 0
0x0E0E	0x1283      	BCF        STATUS, 5
0x0E0F	0x1703      	BSF        STATUS, 6
0x0E10	0x0097      	MOVWF      FARG_ks0108_char_portrait_c
0x0E11	0x0198      	CLRF       FARG_ks0108_char_portrait_invert
0x0E12	0x118A      	BCF        PCLATH, 3
0x0E13	0x23B8      	CALL       _ks0108_char_portrait
0x0E14	0x158A      	BSF        PCLATH, 3
;tetris.c,531 :: 		y -= 6;
0x0E15	0x3006      	MOVLW      6
0x0E16	0x1683      	BSF        STATUS, 5
0x0E17	0x1303      	BCF        STATUS, 6
0x0E18	0x02EB      	SUBWF      update_scoreboard_y_L0, 1
;tetris.c,527 :: 		for (i=0; i<10; i++) {
0x0E19	0x0AEC      	INCF       update_scoreboard_i_L0, 1
;tetris.c,532 :: 		}
0x0E1A	0x2DCD      	GOTO       L_update_scoreboard146
L_update_scoreboard147:
;tetris.c,534 :: 		}
0x0E1B	0x0008      	RETURN
; end of _update_scoreboard
_main:
0x1000	0x158A      	BSF        PCLATH, 3
0x1001	0x20FA      	CALL       6394
0x1002	0x118A      	BCF        PCLATH, 3
;tetris.c,554 :: 		void main() {
;tetris.c,564 :: 		const char *menu1 = "RC7: New Game  ";
0x1003	0x30DA      	MOVLW      ?lstr_9_tetris
0x1004	0x1683      	BSF        STATUS, 5
0x1005	0x1303      	BCF        STATUS, 6
0x1006	0x00C8      	MOVWF      main_menu1_L0
0x1007	0x3018      	MOVLW      hi_addr(?lstr_9_tetris)
0x1008	0x00C9      	MOVWF      main_menu1_L0+1
;tetris.c,565 :: 		const char *menu2 = "RC6: Highscores";
0x1009	0x30F0      	MOVLW      ?lstr_10_tetris
0x100A	0x00CA      	MOVWF      main_menu2_L0
0x100B	0x3007      	MOVLW      hi_addr(?lstr_10_tetris)
0x100C	0x00CB      	MOVWF      main_menu2_L0+1
;tetris.c,566 :: 		unsigned char menuleft = 0;
0x100D	0x01CC      	CLRF       main_menuleft_L0
;tetris.c,568 :: 		mostevilrestart:
___main_mostevilrestart:
;tetris.c,572 :: 		block_type_next = random_seed;
0x100E	0x1283      	BCF        STATUS, 5
0x100F	0x086B      	MOVF       main_random_seed_L0, 0
0x1010	0x00EF      	MOVWF      main_block_type_next_L0
;tetris.c,573 :: 		key_flags=0;
0x1011	0x01DD      	CLRF       _key_flags
;tetris.c,575 :: 		score = 0;
0x1012	0x01D8      	CLRF       _score
0x1013	0x01D9      	CLRF       _score+1
;tetris.c,576 :: 		level = 1;
0x1014	0x3001      	MOVLW      1
0x1015	0x00DF      	MOVWF      _level
;tetris.c,577 :: 		removed_rows = 0;
0x1016	0x01E5      	CLRF       _removed_rows
0x1017	0x01E6      	CLRF       _removed_rows+1
;tetris.c,578 :: 		round_delay = 1000;
0x1018	0x30E8      	MOVLW      232
0x1019	0x00D1      	MOVWF      _round_delay
0x101A	0x3003      	MOVLW      3
0x101B	0x00D2      	MOVWF      _round_delay+1
;tetris.c,582 :: 		TRISC = 0xF0;                         // Port C - user-input
0x101C	0x30F0      	MOVLW      240
0x101D	0x1683      	BSF        STATUS, 5
0x101E	0x0087      	MOVWF      TRISC
;tetris.c,586 :: 		ks0108_init();
0x101F	0x158A      	BSF        PCLATH, 3
0x1020	0x120A      	BCF        PCLATH, 4
0x1021	0x245A      	CALL       _ks0108_init
0x1022	0x118A      	BCF        PCLATH, 3
0x1023	0x160A      	BSF        PCLATH, 4
;tetris.c,589 :: 		while (menuleft == 0) {
L_main156:
0x1024	0x1683      	BSF        STATUS, 5
0x1025	0x084C      	MOVF       main_menuleft_L0, 0
0x1026	0x3A00      	XORLW      0
0x1027	0x1D03      	BTFSS      STATUS, 2
0x1028	0x28CA      	GOTO       L_main157
;tetris.c,590 :: 		ks0108_fill(0);
0x1029	0x1283      	BCF        STATUS, 5
0x102A	0x1703      	BSF        STATUS, 6
0x102B	0x0195      	CLRF       FARG_ks0108_fill_pattern
0x102C	0x120A      	BCF        PCLATH, 4
0x102D	0x2294      	CALL       _ks0108_fill
0x102E	0x160A      	BSF        PCLATH, 4
;tetris.c,594 :: 		ks0108_title(128, 6);
0x102F	0x3080      	MOVLW      128
0x1030	0x1683      	BSF        STATUS, 5
0x1031	0x1303      	BCF        STATUS, 6
0x1032	0x00CD      	MOVWF      FARG_ks0108_title_width
0x1033	0x3006      	MOVLW      6
0x1034	0x00CE      	MOVWF      FARG_ks0108_title_hpages
0x1035	0x158A      	BSF        PCLATH, 3
0x1036	0x120A      	BCF        PCLATH, 4
0x1037	0x2485      	CALL       _ks0108_title
0x1038	0x118A      	BCF        PCLATH, 3
0x1039	0x160A      	BSF        PCLATH, 4
;tetris.c,596 :: 		for(i=0; i<15; i++) {
0x103A	0x1283      	BCF        STATUS, 5
0x103B	0x01E7      	CLRF       main_i_L0
0x103C	0x01E8      	CLRF       main_i_L0+1
L_main158:
0x103D	0x3000      	MOVLW      0
0x103E	0x0268      	SUBWF      main_i_L0+1, 0
0x103F	0x1D03      	BTFSS      STATUS, 2
0x1040	0x2843      	GOTO       L__main249
0x1041	0x300F      	MOVLW      15
0x1042	0x0267      	SUBWF      main_i_L0, 0
L__main249:
0x1043	0x1803      	BTFSC      STATUS, 0
0x1044	0x289B      	GOTO       L_main159
;tetris.c,597 :: 		ks0108_char(i*6,48, menu1[i]-32,0);
0x1045	0x0867      	MOVF       main_i_L0, 0
0x1046	0x00F0      	MOVWF      R0
0x1047	0x3006      	MOVLW      6
0x1048	0x00F4      	MOVWF      R4
0x1049	0x120A      	BCF        PCLATH, 4
0x104A	0x2270      	CALL       _Mul_8x8_U
0x104B	0x160A      	BSF        PCLATH, 4
0x104C	0x0870      	MOVF       R0, 0
0x104D	0x1703      	BSF        STATUS, 6
0x104E	0x0095      	MOVWF      FARG_ks0108_char_x
0x104F	0x3030      	MOVLW      48
0x1050	0x0096      	MOVWF      FARG_ks0108_char_y
0x1051	0x1303      	BCF        STATUS, 6
0x1052	0x0867      	MOVF       main_i_L0, 0
0x1053	0x1683      	BSF        STATUS, 5
0x1054	0x0748      	ADDWF      main_menu1_L0, 0
0x1055	0x00F0      	MOVWF      R0
0x1056	0x0849      	MOVF       main_menu1_L0+1, 0
0x1057	0x1803      	BTFSC      STATUS, 0
0x1058	0x3E01      	ADDLW      1
0x1059	0x1283      	BCF        STATUS, 5
0x105A	0x0768      	ADDWF      main_i_L0+1, 0
0x105B	0x00F1      	MOVWF      R0+1
0x105C	0x0870      	MOVF       R0, 0
0x105D	0x00A6      	MOVWF      ___DoICPAddr
0x105E	0x0871      	MOVF       R0+1, 0
0x105F	0x00A7      	MOVWF      ___DoICPAddr+1
0x1060	0x120A      	BCF        PCLATH, 4
0x1061	0x21CC      	CALL       _____DoICP
0x1062	0x118A      	BCF        PCLATH, 3
0x1063	0x160A      	BSF        PCLATH, 4
0x1064	0x00F0      	MOVWF      R0
0x1065	0x3020      	MOVLW      32
0x1066	0x0270      	SUBWF      R0, 0
0x1067	0x1703      	BSF        STATUS, 6
0x1068	0x0097      	MOVWF      FARG_ks0108_char_c
0x1069	0x0198      	CLRF       FARG_ks0108_char_invert
0x106A	0x120A      	BCF        PCLATH, 4
0x106B	0x24A3      	CALL       _ks0108_char
0x106C	0x160A      	BSF        PCLATH, 4
;tetris.c,598 :: 		ks0108_char(i*6,56, menu2[i]-32,0);
0x106D	0x1303      	BCF        STATUS, 6
0x106E	0x0867      	MOVF       main_i_L0, 0
0x106F	0x00F0      	MOVWF      R0
0x1070	0x3006      	MOVLW      6
0x1071	0x00F4      	MOVWF      R4
0x1072	0x120A      	BCF        PCLATH, 4
0x1073	0x2270      	CALL       _Mul_8x8_U
0x1074	0x160A      	BSF        PCLATH, 4
0x1075	0x0870      	MOVF       R0, 0
0x1076	0x1703      	BSF        STATUS, 6
0x1077	0x0095      	MOVWF      FARG_ks0108_char_x
0x1078	0x3038      	MOVLW      56
0x1079	0x0096      	MOVWF      FARG_ks0108_char_y
0x107A	0x1303      	BCF        STATUS, 6
0x107B	0x0867      	MOVF       main_i_L0, 0
0x107C	0x1683      	BSF        STATUS, 5
0x107D	0x074A      	ADDWF      main_menu2_L0, 0
0x107E	0x00F0      	MOVWF      R0
0x107F	0x084B      	MOVF       main_menu2_L0+1, 0
0x1080	0x1803      	BTFSC      STATUS, 0
0x1081	0x3E01      	ADDLW      1
0x1082	0x1283      	BCF        STATUS, 5
0x1083	0x0768      	ADDWF      main_i_L0+1, 0
0x1084	0x00F1      	MOVWF      R0+1
0x1085	0x0870      	MOVF       R0, 0
0x1086	0x00A6      	MOVWF      ___DoICPAddr
0x1087	0x0871      	MOVF       R0+1, 0
0x1088	0x00A7      	MOVWF      ___DoICPAddr+1
0x1089	0x120A      	BCF        PCLATH, 4
0x108A	0x21CC      	CALL       _____DoICP
0x108B	0x118A      	BCF        PCLATH, 3
0x108C	0x160A      	BSF        PCLATH, 4
0x108D	0x00F0      	MOVWF      R0
0x108E	0x3020      	MOVLW      32
0x108F	0x0270      	SUBWF      R0, 0
0x1090	0x1703      	BSF        STATUS, 6
0x1091	0x0097      	MOVWF      FARG_ks0108_char_c
0x1092	0x0198      	CLRF       FARG_ks0108_char_invert
0x1093	0x120A      	BCF        PCLATH, 4
0x1094	0x24A3      	CALL       _ks0108_char
0x1095	0x160A      	BSF        PCLATH, 4
;tetris.c,596 :: 		for(i=0; i<15; i++) {
0x1096	0x1303      	BCF        STATUS, 6
0x1097	0x0AE7      	INCF       main_i_L0, 1
0x1098	0x1903      	BTFSC      STATUS, 2
0x1099	0x0AE8      	INCF       main_i_L0+1, 1
;tetris.c,599 :: 		}
0x109A	0x283D      	GOTO       L_main158
L_main159:
;tetris.c,601 :: 		while (PORTC & 0xf0);
L_main161:
0x109B	0x30F0      	MOVLW      240
0x109C	0x0507      	ANDWF      PORTC, 0
0x109D	0x00F0      	MOVWF      R0
0x109E	0x1903      	BTFSC      STATUS, 2
0x109F	0x28A1      	GOTO       L_main162
0x10A0	0x289B      	GOTO       L_main161
L_main162:
;tetris.c,603 :: 		while (1) {
L_main163:
;tetris.c,605 :: 		if (PORTC & 0xf0) {
0x10A1	0x30F0      	MOVLW      240
0x10A2	0x0507      	ANDWF      PORTC, 0
0x10A3	0x00F0      	MOVWF      R0
0x10A4	0x1903      	BTFSC      STATUS, 2
0x10A5	0x28B9      	GOTO       L_main165
;tetris.c,606 :: 		block_type_next = (block_type_next + 1) % 7;
0x10A6	0x086F      	MOVF       main_block_type_next_L0, 0
0x10A7	0x3E01      	ADDLW      1
0x10A8	0x00F0      	MOVWF      R0
0x10A9	0x01F1      	CLRF       R0+1
0x10AA	0x1803      	BTFSC      STATUS, 0
0x10AB	0x0AF1      	INCF       R0+1, 1
0x10AC	0x3007      	MOVLW      7
0x10AD	0x00F4      	MOVWF      R4
0x10AE	0x3000      	MOVLW      0
0x10AF	0x00F5      	MOVWF      R4+1
0x10B0	0x120A      	BCF        PCLATH, 4
0x10B1	0x2207      	CALL       _Div_16x16_S
0x10B2	0x160A      	BSF        PCLATH, 4
0x10B3	0x0878      	MOVF       R8, 0
0x10B4	0x00F0      	MOVWF      R0
0x10B5	0x0879      	MOVF       R8+1, 0
0x10B6	0x00F1      	MOVWF      R0+1
0x10B7	0x0870      	MOVF       R0, 0
0x10B8	0x00EF      	MOVWF      main_block_type_next_L0
;tetris.c,607 :: 		}
L_main165:
;tetris.c,609 :: 		if (PORTC & KEY1) {
0x10B9	0x1F87      	BTFSS      PORTC, 7
0x10BA	0x28BF      	GOTO       L_main166
;tetris.c,610 :: 		menuleft=1;
0x10BB	0x3001      	MOVLW      1
0x10BC	0x1683      	BSF        STATUS, 5
0x10BD	0x00CC      	MOVWF      main_menuleft_L0
;tetris.c,611 :: 		break;
0x10BE	0x28C9      	GOTO       L_main164
;tetris.c,612 :: 		}
L_main166:
;tetris.c,614 :: 		if (PORTC & KEY2) {
0x10BF	0x1283      	BCF        STATUS, 5
0x10C0	0x1F07      	BTFSS      PORTC, 6
0x10C1	0x28C8      	GOTO       L_main167
;tetris.c,615 :: 		show_highscore();
0x10C2	0x158A      	BSF        PCLATH, 3
0x10C3	0x120A      	BCF        PCLATH, 4
0x10C4	0x2351      	CALL       _show_highscore
0x10C5	0x118A      	BCF        PCLATH, 3
0x10C6	0x160A      	BSF        PCLATH, 4
;tetris.c,616 :: 		break;
0x10C7	0x28C9      	GOTO       L_main164
;tetris.c,617 :: 		}
L_main167:
;tetris.c,619 :: 		}
0x10C8	0x28A1      	GOTO       L_main163
L_main164:
;tetris.c,621 :: 		}
0x10C9	0x2824      	GOTO       L_main156
L_main157:
;tetris.c,623 :: 		menuleft = 0;
0x10CA	0x1683      	BSF        STATUS, 5
0x10CB	0x01CC      	CLRF       main_menuleft_L0
;tetris.c,625 :: 		while (PORTC & 0xf0) {
L_main168:
0x10CC	0x30F0      	MOVLW      240
0x10CD	0x1283      	BCF        STATUS, 5
0x10CE	0x0507      	ANDWF      PORTC, 0
0x10CF	0x00F0      	MOVWF      R0
0x10D0	0x1903      	BTFSC      STATUS, 2
0x10D1	0x28E6      	GOTO       L_main169
;tetris.c,626 :: 		random_seed = (random_seed + 1) % 7;
0x10D2	0x086B      	MOVF       main_random_seed_L0, 0
0x10D3	0x3E01      	ADDLW      1
0x10D4	0x00F0      	MOVWF      R0
0x10D5	0x01F1      	CLRF       R0+1
0x10D6	0x1803      	BTFSC      STATUS, 0
0x10D7	0x0AF1      	INCF       R0+1, 1
0x10D8	0x3007      	MOVLW      7
0x10D9	0x00F4      	MOVWF      R4
0x10DA	0x3000      	MOVLW      0
0x10DB	0x00F5      	MOVWF      R4+1
0x10DC	0x120A      	BCF        PCLATH, 4
0x10DD	0x2207      	CALL       _Div_16x16_S
0x10DE	0x160A      	BSF        PCLATH, 4
0x10DF	0x0878      	MOVF       R8, 0
0x10E0	0x00F0      	MOVWF      R0
0x10E1	0x0879      	MOVF       R8+1, 0
0x10E2	0x00F1      	MOVWF      R0+1
0x10E3	0x0870      	MOVF       R0, 0
0x10E4	0x00EB      	MOVWF      main_random_seed_L0
;tetris.c,627 :: 		}
0x10E5	0x28CC      	GOTO       L_main168
L_main169:
;tetris.c,631 :: 		init_gamescreen();
0x10E6	0x120A      	BCF        PCLATH, 4
0x10E7	0x2742      	CALL       _init_gamescreen
0x10E8	0x160A      	BSF        PCLATH, 4
;tetris.c,634 :: 		for (i=0; i<20; i++)
0x10E9	0x1283      	BCF        STATUS, 5
0x10EA	0x01E7      	CLRF       main_i_L0
0x10EB	0x01E8      	CLRF       main_i_L0+1
L_main170:
0x10EC	0x3000      	MOVLW      0
0x10ED	0x0268      	SUBWF      main_i_L0+1, 0
0x10EE	0x1D03      	BTFSS      STATUS, 2
0x10EF	0x28F2      	GOTO       L__main250
0x10F0	0x3014      	MOVLW      20
0x10F1	0x0267      	SUBWF      main_i_L0, 0
L__main250:
0x10F2	0x1803      	BTFSC      STATUS, 0
0x10F3	0x2902      	GOTO       L_main171
;tetris.c,635 :: 		playfield[i] = 0;
0x10F4	0x0867      	MOVF       main_i_L0, 0
0x10F5	0x00F0      	MOVWF      R0
0x10F6	0x0DF0      	RLF        R0, 1
0x10F7	0x1070      	BCF        R0, 0
0x10F8	0x0870      	MOVF       R0, 0
0x10F9	0x3EA0      	ADDLW      _playfield
0x10FA	0x0084      	MOVWF      FSR
0x10FB	0x0180      	CLRF       INDF
0x10FC	0x0A84      	INCF       FSR, 1
0x10FD	0x0180      	CLRF       INDF
;tetris.c,634 :: 		for (i=0; i<20; i++)
0x10FE	0x0AE7      	INCF       main_i_L0, 1
0x10FF	0x1903      	BTFSC      STATUS, 2
0x1100	0x0AE8      	INCF       main_i_L0+1, 1
;tetris.c,635 :: 		playfield[i] = 0;
0x1101	0x28EC      	GOTO       L_main170
L_main171:
;tetris.c,637 :: 		update_scoreboard();
0x1102	0x158A      	BSF        PCLATH, 3
0x1103	0x120A      	BCF        PCLATH, 4
0x1104	0x256F      	CALL       _update_scoreboard
0x1105	0x118A      	BCF        PCLATH, 3
0x1106	0x160A      	BSF        PCLATH, 4
;tetris.c,639 :: 		mukke_start();
0x1107	0x158A      	BSF        PCLATH, 3
0x1108	0x120A      	BCF        PCLATH, 4
0x1109	0x24FB      	CALL       _mukke_start
0x110A	0x118A      	BCF        PCLATH, 3
0x110B	0x160A      	BSF        PCLATH, 4
;tetris.c,641 :: 		while(1) {
L_main173:
0x110C	0x1283      	BCF        STATUS, 5
;tetris.c,643 :: 		rotation=0;
0x110D	0x01DB      	CLRF       _rotation
;tetris.c,644 :: 		block_pos_y=2;
0x110E	0x3002      	MOVLW      2
0x110F	0x00DC      	MOVWF      _block_pos_y
;tetris.c,645 :: 		block_pos_x=6;
0x1110	0x3006      	MOVLW      6
0x1111	0x00DA      	MOVWF      _block_pos_x
;tetris.c,646 :: 		round_finished = 0;
0x1112	0x01EC      	CLRF       main_round_finished_L0
;tetris.c,648 :: 		block_type_current = block_type_next;
0x1113	0x086F      	MOVF       main_block_type_next_L0, 0
0x1114	0x00EE      	MOVWF      main_block_type_current_L0
;tetris.c,649 :: 		block_type_next = random_seed;
0x1115	0x086B      	MOVF       main_random_seed_L0, 0
0x1116	0x00EF      	MOVWF      main_block_type_next_L0
;tetris.c,651 :: 		build_shape_matrix(curr_shape_matrix, block_type_current, 0);
0x1117	0x3060      	MOVLW      _curr_shape_matrix
0x1118	0x1703      	BSF        STATUS, 6
0x1119	0x0095      	MOVWF      FARG_build_shape_matrix_matrix
0x111A	0x1303      	BCF        STATUS, 6
0x111B	0x086E      	MOVF       main_block_type_current_L0, 0
0x111C	0x1703      	BSF        STATUS, 6
0x111D	0x0096      	MOVWF      FARG_build_shape_matrix_type
0x111E	0x0197      	CLRF       FARG_build_shape_matrix_rotation
0x111F	0x120A      	BCF        PCLATH, 4
0x1120	0x2355      	CALL       _build_shape_matrix
0x1121	0x160A      	BSF        PCLATH, 4
;tetris.c,652 :: 		draw_shape(0,13,23);
0x1122	0x1683      	BSF        STATUS, 5
0x1123	0x1303      	BCF        STATUS, 6
0x1124	0x01CD      	CLRF       FARG_draw_shape_c
0x1125	0x300D      	MOVLW      13
0x1126	0x00CE      	MOVWF      FARG_draw_shape_x
0x1127	0x3017      	MOVLW      23
0x1128	0x00CF      	MOVWF      FARG_draw_shape_y
0x1129	0x120A      	BCF        PCLATH, 4
0x112A	0x26FC      	CALL       _draw_shape
0x112B	0x160A      	BSF        PCLATH, 4
;tetris.c,653 :: 		build_shape_matrix(curr_shape_matrix, block_type_next, 0);
0x112C	0x3060      	MOVLW      _curr_shape_matrix
0x112D	0x1283      	BCF        STATUS, 5
0x112E	0x1703      	BSF        STATUS, 6
0x112F	0x0095      	MOVWF      FARG_build_shape_matrix_matrix
0x1130	0x1303      	BCF        STATUS, 6
0x1131	0x086F      	MOVF       main_block_type_next_L0, 0
0x1132	0x1703      	BSF        STATUS, 6
0x1133	0x0096      	MOVWF      FARG_build_shape_matrix_type
0x1134	0x0197      	CLRF       FARG_build_shape_matrix_rotation
0x1135	0x120A      	BCF        PCLATH, 4
0x1136	0x2355      	CALL       _build_shape_matrix
0x1137	0x160A      	BSF        PCLATH, 4
;tetris.c,654 :: 		draw_shape(1,13,23);
0x1138	0x3001      	MOVLW      1
0x1139	0x1683      	BSF        STATUS, 5
0x113A	0x1303      	BCF        STATUS, 6
0x113B	0x00CD      	MOVWF      FARG_draw_shape_c
0x113C	0x300D      	MOVLW      13
0x113D	0x00CE      	MOVWF      FARG_draw_shape_x
0x113E	0x3017      	MOVLW      23
0x113F	0x00CF      	MOVWF      FARG_draw_shape_y
0x1140	0x120A      	BCF        PCLATH, 4
0x1141	0x26FC      	CALL       _draw_shape
0x1142	0x160A      	BSF        PCLATH, 4
;tetris.c,661 :: 		if ( ! check_and_update_position(block_pos_x, block_pos_y, block_type_current, rotation) )  {
0x1143	0x1283      	BCF        STATUS, 5
0x1144	0x085A      	MOVF       _block_pos_x, 0
0x1145	0x1683      	BSF        STATUS, 5
0x1146	0x00CD      	MOVWF      FARG_check_and_update_position_x
0x1147	0x1283      	BCF        STATUS, 5
0x1148	0x085C      	MOVF       _block_pos_y, 0
0x1149	0x1683      	BSF        STATUS, 5
0x114A	0x00CE      	MOVWF      FARG_check_and_update_position_y
0x114B	0x1283      	BCF        STATUS, 5
0x114C	0x086E      	MOVF       main_block_type_current_L0, 0
0x114D	0x1683      	BSF        STATUS, 5
0x114E	0x00CF      	MOVWF      FARG_check_and_update_position_type
0x114F	0x1283      	BCF        STATUS, 5
0x1150	0x085B      	MOVF       _rotation, 0
0x1151	0x1683      	BSF        STATUS, 5
0x1152	0x00D0      	MOVWF      FARG_check_and_update_position_rot
0x1153	0x120A      	BCF        PCLATH, 4
0x1154	0x25C6      	CALL       _check_and_update_position
0x1155	0x160A      	BSF        PCLATH, 4
0x1156	0x1283      	BCF        STATUS, 5
0x1157	0x1303      	BCF        STATUS, 6
0x1158	0x0870      	MOVF       R0, 0
0x1159	0x1D03      	BTFSS      STATUS, 2
0x115A	0x2988      	GOTO       L_main175
;tetris.c,662 :: 		i=20;
0x115B	0x3014      	MOVLW      20
0x115C	0x00E7      	MOVWF      main_i_L0
0x115D	0x3000      	MOVLW      0
0x115E	0x00E8      	MOVWF      main_i_L0+1
;tetris.c,663 :: 		do {
L_main176:
;tetris.c,664 :: 		i--;
0x115F	0x3001      	MOVLW      1
0x1160	0x02E7      	SUBWF      main_i_L0, 1
0x1161	0x1C03      	BTFSS      STATUS, 0
0x1162	0x03E8      	DECF       main_i_L0+1, 1
;tetris.c,665 :: 		destroy_row(i);
0x1163	0x0867      	MOVF       main_i_L0, 0
0x1164	0x1683      	BSF        STATUS, 5
0x1165	0x00CD      	MOVWF      FARG_destroy_row_row
0x1166	0x120A      	BCF        PCLATH, 4
0x1167	0x26AD      	CALL       _destroy_row
0x1168	0x160A      	BSF        PCLATH, 4
;tetris.c,666 :: 		} while (i > 0);
0x1169	0x1283      	BCF        STATUS, 5
0x116A	0x0868      	MOVF       main_i_L0+1, 0
0x116B	0x3C00      	SUBLW      0
0x116C	0x1D03      	BTFSS      STATUS, 2
0x116D	0x2970      	GOTO       L__main251
0x116E	0x0867      	MOVF       main_i_L0, 0
0x116F	0x3C00      	SUBLW      0
L__main251:
0x1170	0x1C03      	BTFSS      STATUS, 0
0x1171	0x295F      	GOTO       L_main176
;tetris.c,668 :: 		game_over();
0x1172	0x158A      	BSF        PCLATH, 3
0x1173	0x120A      	BCF        PCLATH, 4
0x1174	0x250A      	CALL       _game_over
0x1175	0x118A      	BCF        PCLATH, 3
0x1176	0x160A      	BSF        PCLATH, 4
;tetris.c,669 :: 		mukke_stop();
0x1177	0x120A      	BCF        PCLATH, 4
0x1178	0x27EB      	CALL       _mukke_stop
0x1179	0x160A      	BSF        PCLATH, 4
;tetris.c,671 :: 		if ( check_highscore() ) {
0x117A	0x158A      	BSF        PCLATH, 3
0x117B	0x120A      	BCF        PCLATH, 4
0x117C	0x2000      	CALL       _check_highscore
0x117D	0x118A      	BCF        PCLATH, 3
0x117E	0x160A      	BSF        PCLATH, 4
0x117F	0x0870      	MOVF       R0, 0
0x1180	0x1903      	BTFSC      STATUS, 2
0x1181	0x2987      	GOTO       L_main179
;tetris.c,672 :: 		show_highscore();
0x1182	0x158A      	BSF        PCLATH, 3
0x1183	0x120A      	BCF        PCLATH, 4
0x1184	0x2351      	CALL       _show_highscore
0x1185	0x118A      	BCF        PCLATH, 3
0x1186	0x160A      	BSF        PCLATH, 4
;tetris.c,673 :: 		}
L_main179:
;tetris.c,675 :: 		goto mostevilrestart
0x1187	0x280E      	GOTO       ___main_mostevilrestart
;tetris.c,676 :: 		}
L_main175:
;tetris.c,678 :: 		while (! round_finished) {
L_main180:
0x1188	0x1283      	BCF        STATUS, 5
0x1189	0x086C      	MOVF       main_round_finished_L0, 0
0x118A	0x1D03      	BTFSS      STATUS, 2
0x118B	0x2BFF      	GOTO       L_main181
;tetris.c,679 :: 		if (block_pos_y > 0) {
0x118C	0x085C      	MOVF       _block_pos_y, 0
0x118D	0x3C00      	SUBLW      0
0x118E	0x1803      	BTFSC      STATUS, 0
0x118F	0x299D      	GOTO       L_main182
;tetris.c,680 :: 		draw_shape(0, block_pos_x, block_pos_y);
0x1190	0x1683      	BSF        STATUS, 5
0x1191	0x01CD      	CLRF       FARG_draw_shape_c
0x1192	0x1283      	BCF        STATUS, 5
0x1193	0x085A      	MOVF       _block_pos_x, 0
0x1194	0x1683      	BSF        STATUS, 5
0x1195	0x00CE      	MOVWF      FARG_draw_shape_x
0x1196	0x1283      	BCF        STATUS, 5
0x1197	0x085C      	MOVF       _block_pos_y, 0
0x1198	0x1683      	BSF        STATUS, 5
0x1199	0x00CF      	MOVWF      FARG_draw_shape_y
0x119A	0x120A      	BCF        PCLATH, 4
0x119B	0x26FC      	CALL       _draw_shape
0x119C	0x160A      	BSF        PCLATH, 4
;tetris.c,681 :: 		}
L_main182:
0x119D	0x1683      	BSF        STATUS, 5
;tetris.c,682 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x119E	0x3001      	MOVLW      1
0x119F	0x00CD      	MOVWF      FARG_draw_shape_c
0x11A0	0x1283      	BCF        STATUS, 5
0x11A1	0x085A      	MOVF       _block_pos_x, 0
0x11A2	0x1683      	BSF        STATUS, 5
0x11A3	0x00CE      	MOVWF      FARG_draw_shape_x
0x11A4	0x1283      	BCF        STATUS, 5
0x11A5	0x085C      	MOVF       _block_pos_y, 0
0x11A6	0x1683      	BSF        STATUS, 5
0x11A7	0x00CF      	MOVWF      FARG_draw_shape_y
0x11A8	0x120A      	BCF        PCLATH, 4
0x11A9	0x26FC      	CALL       _draw_shape
0x11AA	0x160A      	BSF        PCLATH, 4
;tetris.c,684 :: 		for (i=0; i<(round_delay); i++) {
0x11AB	0x1283      	BCF        STATUS, 5
0x11AC	0x01E7      	CLRF       main_i_L0
0x11AD	0x01E8      	CLRF       main_i_L0+1
L_main183:
0x11AE	0x0852      	MOVF       _round_delay+1, 0
0x11AF	0x0268      	SUBWF      main_i_L0+1, 0
0x11B0	0x1D03      	BTFSS      STATUS, 2
0x11B1	0x29B4      	GOTO       L__main252
0x11B2	0x0851      	MOVF       _round_delay, 0
0x11B3	0x0267      	SUBWF      main_i_L0, 0
L__main252:
0x11B4	0x1803      	BTFSC      STATUS, 0
0x11B5	0x2AC0      	GOTO       L_main184
;tetris.c,686 :: 		if ( (PORTC & KEY3) && (! (key_flags & KEY3)) ) {
0x11B6	0x1E87      	BTFSS      PORTC, 5
0x11B7	0x29FB      	GOTO       L_main188
0x11B8	0x1ADD      	BTFSC      _key_flags, 5
0x11B9	0x29FB      	GOTO       L_main188
L__main222:
;tetris.c,687 :: 		key_flags |= KEY3;
0x11BA	0x16DD      	BSF        _key_flags, 5
;tetris.c,688 :: 		draw_shape(0, block_pos_x, block_pos_y);
0x11BB	0x1683      	BSF        STATUS, 5
0x11BC	0x01CD      	CLRF       FARG_draw_shape_c
0x11BD	0x1283      	BCF        STATUS, 5
0x11BE	0x085A      	MOVF       _block_pos_x, 0
0x11BF	0x1683      	BSF        STATUS, 5
0x11C0	0x00CE      	MOVWF      FARG_draw_shape_x
0x11C1	0x1283      	BCF        STATUS, 5
0x11C2	0x085C      	MOVF       _block_pos_y, 0
0x11C3	0x1683      	BSF        STATUS, 5
0x11C4	0x00CF      	MOVWF      FARG_draw_shape_y
0x11C5	0x120A      	BCF        PCLATH, 4
0x11C6	0x26FC      	CALL       _draw_shape
0x11C7	0x160A      	BSF        PCLATH, 4
;tetris.c,689 :: 		check_and_update_position(block_pos_x, block_pos_y, block_type_current, (rotation + 1) % 4);
0x11C8	0x1283      	BCF        STATUS, 5
0x11C9	0x085A      	MOVF       _block_pos_x, 0
0x11CA	0x1683      	BSF        STATUS, 5
0x11CB	0x00CD      	MOVWF      FARG_check_and_update_position_x
0x11CC	0x1283      	BCF        STATUS, 5
0x11CD	0x085C      	MOVF       _block_pos_y, 0
0x11CE	0x1683      	BSF        STATUS, 5
0x11CF	0x00CE      	MOVWF      FARG_check_and_update_position_y
0x11D0	0x1283      	BCF        STATUS, 5
0x11D1	0x086E      	MOVF       main_block_type_current_L0, 0
0x11D2	0x1683      	BSF        STATUS, 5
0x11D3	0x00CF      	MOVWF      FARG_check_and_update_position_type
0x11D4	0x1283      	BCF        STATUS, 5
0x11D5	0x085B      	MOVF       _rotation, 0
0x11D6	0x3E01      	ADDLW      1
0x11D7	0x00F0      	MOVWF      R0
0x11D8	0x01F1      	CLRF       R0+1
0x11D9	0x1803      	BTFSC      STATUS, 0
0x11DA	0x0AF1      	INCF       R0+1, 1
0x11DB	0x3004      	MOVLW      4
0x11DC	0x00F4      	MOVWF      R4
0x11DD	0x3000      	MOVLW      0
0x11DE	0x00F5      	MOVWF      R4+1
0x11DF	0x120A      	BCF        PCLATH, 4
0x11E0	0x2207      	CALL       _Div_16x16_S
0x11E1	0x160A      	BSF        PCLATH, 4
0x11E2	0x0878      	MOVF       R8, 0
0x11E3	0x00F0      	MOVWF      R0
0x11E4	0x0879      	MOVF       R8+1, 0
0x11E5	0x00F1      	MOVWF      R0+1
0x11E6	0x0870      	MOVF       R0, 0
0x11E7	0x1683      	BSF        STATUS, 5
0x11E8	0x00D0      	MOVWF      FARG_check_and_update_position_rot
0x11E9	0x120A      	BCF        PCLATH, 4
0x11EA	0x25C6      	CALL       _check_and_update_position
0x11EB	0x160A      	BSF        PCLATH, 4
;tetris.c,690 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x11EC	0x3001      	MOVLW      1
0x11ED	0x1683      	BSF        STATUS, 5
0x11EE	0x1303      	BCF        STATUS, 6
0x11EF	0x00CD      	MOVWF      FARG_draw_shape_c
0x11F0	0x1283      	BCF        STATUS, 5
0x11F1	0x085A      	MOVF       _block_pos_x, 0
0x11F2	0x1683      	BSF        STATUS, 5
0x11F3	0x00CE      	MOVWF      FARG_draw_shape_x
0x11F4	0x1283      	BCF        STATUS, 5
0x11F5	0x085C      	MOVF       _block_pos_y, 0
0x11F6	0x1683      	BSF        STATUS, 5
0x11F7	0x00CF      	MOVWF      FARG_draw_shape_y
0x11F8	0x120A      	BCF        PCLATH, 4
0x11F9	0x26FC      	CALL       _draw_shape
0x11FA	0x160A      	BSF        PCLATH, 4
;tetris.c,691 :: 		}
L_main188:
;tetris.c,693 :: 		if ( (PORTC & KEY1) && (! (key_flags & KEY1)) ) {
0x11FB	0x1283      	BCF        STATUS, 5
0x11FC	0x1F87      	BTFSS      PORTC, 7
0x11FD	0x2A30      	GOTO       L_main191
0x11FE	0x1BDD      	BTFSC      _key_flags, 7
0x11FF	0x2A30      	GOTO       L_main191
L__main221:
;tetris.c,694 :: 		key_flags |= KEY1;
0x1200	0x17DD      	BSF        _key_flags, 7
;tetris.c,695 :: 		draw_shape(0, block_pos_x, block_pos_y);
0x1201	0x1683      	BSF        STATUS, 5
0x1202	0x01CD      	CLRF       FARG_draw_shape_c
0x1203	0x1283      	BCF        STATUS, 5
0x1204	0x085A      	MOVF       _block_pos_x, 0
0x1205	0x1683      	BSF        STATUS, 5
0x1206	0x00CE      	MOVWF      FARG_draw_shape_x
0x1207	0x1283      	BCF        STATUS, 5
0x1208	0x085C      	MOVF       _block_pos_y, 0
0x1209	0x1683      	BSF        STATUS, 5
0x120A	0x00CF      	MOVWF      FARG_draw_shape_y
0x120B	0x120A      	BCF        PCLATH, 4
0x120C	0x26FC      	CALL       _draw_shape
0x120D	0x160A      	BSF        PCLATH, 4
;tetris.c,696 :: 		check_and_update_position(block_pos_x - 1, block_pos_y, block_type_current, rotation);
0x120E	0x1283      	BCF        STATUS, 5
0x120F	0x035A      	DECF       _block_pos_x, 0
0x1210	0x1683      	BSF        STATUS, 5
0x1211	0x00CD      	MOVWF      FARG_check_and_update_position_x
0x1212	0x1283      	BCF        STATUS, 5
0x1213	0x085C      	MOVF       _block_pos_y, 0
0x1214	0x1683      	BSF        STATUS, 5
0x1215	0x00CE      	MOVWF      FARG_check_and_update_position_y
0x1216	0x1283      	BCF        STATUS, 5
0x1217	0x086E      	MOVF       main_block_type_current_L0, 0
0x1218	0x1683      	BSF        STATUS, 5
0x1219	0x00CF      	MOVWF      FARG_check_and_update_position_type
0x121A	0x1283      	BCF        STATUS, 5
0x121B	0x085B      	MOVF       _rotation, 0
0x121C	0x1683      	BSF        STATUS, 5
0x121D	0x00D0      	MOVWF      FARG_check_and_update_position_rot
0x121E	0x120A      	BCF        PCLATH, 4
0x121F	0x25C6      	CALL       _check_and_update_position
0x1220	0x160A      	BSF        PCLATH, 4
;tetris.c,697 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x1221	0x3001      	MOVLW      1
0x1222	0x1683      	BSF        STATUS, 5
0x1223	0x1303      	BCF        STATUS, 6
0x1224	0x00CD      	MOVWF      FARG_draw_shape_c
0x1225	0x1283      	BCF        STATUS, 5
0x1226	0x085A      	MOVF       _block_pos_x, 0
0x1227	0x1683      	BSF        STATUS, 5
0x1228	0x00CE      	MOVWF      FARG_draw_shape_x
0x1229	0x1283      	BCF        STATUS, 5
0x122A	0x085C      	MOVF       _block_pos_y, 0
0x122B	0x1683      	BSF        STATUS, 5
0x122C	0x00CF      	MOVWF      FARG_draw_shape_y
0x122D	0x120A      	BCF        PCLATH, 4
0x122E	0x26FC      	CALL       _draw_shape
0x122F	0x160A      	BSF        PCLATH, 4
;tetris.c,698 :: 		}
L_main191:
;tetris.c,700 :: 		if ( (PORTC & KEY2) && (! (key_flags & KEY2)) ) {
0x1230	0x1283      	BCF        STATUS, 5
0x1231	0x1F07      	BTFSS      PORTC, 6
0x1232	0x2A65      	GOTO       L_main194
0x1233	0x1B5D      	BTFSC      _key_flags, 6
0x1234	0x2A65      	GOTO       L_main194
L__main220:
;tetris.c,701 :: 		key_flags |= KEY2;
0x1235	0x175D      	BSF        _key_flags, 6
;tetris.c,702 :: 		draw_shape(0, block_pos_x, block_pos_y);
0x1236	0x1683      	BSF        STATUS, 5
0x1237	0x01CD      	CLRF       FARG_draw_shape_c
0x1238	0x1283      	BCF        STATUS, 5
0x1239	0x085A      	MOVF       _block_pos_x, 0
0x123A	0x1683      	BSF        STATUS, 5
0x123B	0x00CE      	MOVWF      FARG_draw_shape_x
0x123C	0x1283      	BCF        STATUS, 5
0x123D	0x085C      	MOVF       _block_pos_y, 0
0x123E	0x1683      	BSF        STATUS, 5
0x123F	0x00CF      	MOVWF      FARG_draw_shape_y
0x1240	0x120A      	BCF        PCLATH, 4
0x1241	0x26FC      	CALL       _draw_shape
0x1242	0x160A      	BSF        PCLATH, 4
;tetris.c,703 :: 		check_and_update_position(block_pos_x + 1, block_pos_y, block_type_current, rotation);
0x1243	0x1283      	BCF        STATUS, 5
0x1244	0x0A5A      	INCF       _block_pos_x, 0
0x1245	0x1683      	BSF        STATUS, 5
0x1246	0x00CD      	MOVWF      FARG_check_and_update_position_x
0x1247	0x1283      	BCF        STATUS, 5
0x1248	0x085C      	MOVF       _block_pos_y, 0
0x1249	0x1683      	BSF        STATUS, 5
0x124A	0x00CE      	MOVWF      FARG_check_and_update_position_y
0x124B	0x1283      	BCF        STATUS, 5
0x124C	0x086E      	MOVF       main_block_type_current_L0, 0
0x124D	0x1683      	BSF        STATUS, 5
0x124E	0x00CF      	MOVWF      FARG_check_and_update_position_type
0x124F	0x1283      	BCF        STATUS, 5
0x1250	0x085B      	MOVF       _rotation, 0
0x1251	0x1683      	BSF        STATUS, 5
0x1252	0x00D0      	MOVWF      FARG_check_and_update_position_rot
0x1253	0x120A      	BCF        PCLATH, 4
0x1254	0x25C6      	CALL       _check_and_update_position
0x1255	0x160A      	BSF        PCLATH, 4
;tetris.c,704 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x1256	0x3001      	MOVLW      1
0x1257	0x1683      	BSF        STATUS, 5
0x1258	0x1303      	BCF        STATUS, 6
0x1259	0x00CD      	MOVWF      FARG_draw_shape_c
0x125A	0x1283      	BCF        STATUS, 5
0x125B	0x085A      	MOVF       _block_pos_x, 0
0x125C	0x1683      	BSF        STATUS, 5
0x125D	0x00CE      	MOVWF      FARG_draw_shape_x
0x125E	0x1283      	BCF        STATUS, 5
0x125F	0x085C      	MOVF       _block_pos_y, 0
0x1260	0x1683      	BSF        STATUS, 5
0x1261	0x00CF      	MOVWF      FARG_draw_shape_y
0x1262	0x120A      	BCF        PCLATH, 4
0x1263	0x26FC      	CALL       _draw_shape
0x1264	0x160A      	BSF        PCLATH, 4
;tetris.c,705 :: 		}
L_main194:
;tetris.c,708 :: 		if ( PORTC & KEY4 ) {
0x1265	0x1283      	BCF        STATUS, 5
0x1266	0x1E07      	BTFSS      PORTC, 4
0x1267	0x2A85      	GOTO       L_main195
;tetris.c,709 :: 		random_seed = (random_seed + block_pos_y ) % 7;
0x1268	0x085C      	MOVF       _block_pos_y, 0
0x1269	0x076B      	ADDWF      main_random_seed_L0, 0
0x126A	0x00F0      	MOVWF      R0
0x126B	0x01F1      	CLRF       R0+1
0x126C	0x1803      	BTFSC      STATUS, 0
0x126D	0x0AF1      	INCF       R0+1, 1
0x126E	0x3007      	MOVLW      7
0x126F	0x00F4      	MOVWF      R4
0x1270	0x3000      	MOVLW      0
0x1271	0x00F5      	MOVWF      R4+1
0x1272	0x120A      	BCF        PCLATH, 4
0x1273	0x2207      	CALL       _Div_16x16_S
0x1274	0x160A      	BSF        PCLATH, 4
0x1275	0x0878      	MOVF       R8, 0
0x1276	0x00F0      	MOVWF      R0
0x1277	0x0879      	MOVF       R8+1, 0
0x1278	0x00F1      	MOVWF      R0+1
0x1279	0x0870      	MOVF       R0, 0
0x127A	0x00EB      	MOVWF      main_random_seed_L0
;tetris.c,710 :: 		if (i >= 100)
0x127B	0x3000      	MOVLW      0
0x127C	0x0268      	SUBWF      main_i_L0+1, 0
0x127D	0x1D03      	BTFSS      STATUS, 2
0x127E	0x2A81      	GOTO       L__main253
0x127F	0x3064      	MOVLW      100
0x1280	0x0267      	SUBWF      main_i_L0, 0
L__main253:
0x1281	0x1C03      	BTFSS      STATUS, 0
0x1282	0x2A84      	GOTO       L_main196
;tetris.c,711 :: 		continue;
0x1283	0x2ABC      	GOTO       L_main185
L_main196:
;tetris.c,712 :: 		} else {
0x1284	0x2AAF      	GOTO       L_main197
L_main195:
;tetris.c,713 :: 		if (PORTC & 0xf0) {
0x1285	0x30F0      	MOVLW      240
0x1286	0x0507      	ANDWF      PORTC, 0
0x1287	0x00F0      	MOVWF      R0
0x1288	0x1903      	BTFSC      STATUS, 2
0x1289	0x2A9C      	GOTO       L_main198
;tetris.c,714 :: 		random_seed = i % 7;
0x128A	0x3007      	MOVLW      7
0x128B	0x00F4      	MOVWF      R4
0x128C	0x3000      	MOVLW      0
0x128D	0x00F5      	MOVWF      R4+1
0x128E	0x0867      	MOVF       main_i_L0, 0
0x128F	0x00F0      	MOVWF      R0
0x1290	0x0868      	MOVF       main_i_L0+1, 0
0x1291	0x00F1      	MOVWF      R0+1
0x1292	0x120A      	BCF        PCLATH, 4
0x1293	0x2184      	CALL       _Div_16x16_U
0x1294	0x160A      	BSF        PCLATH, 4
0x1295	0x0878      	MOVF       R8, 0
0x1296	0x00F0      	MOVWF      R0
0x1297	0x0879      	MOVF       R8+1, 0
0x1298	0x00F1      	MOVWF      R0+1
0x1299	0x0870      	MOVF       R0, 0
0x129A	0x00EB      	MOVWF      main_random_seed_L0
;tetris.c,715 :: 		} else {
0x129B	0x2AAF      	GOTO       L_main199
L_main198:
;tetris.c,716 :: 		random_seed = (random_seed + block_pos_y ) % 7;
0x129C	0x085C      	MOVF       _block_pos_y, 0
0x129D	0x076B      	ADDWF      main_random_seed_L0, 0
0x129E	0x00F0      	MOVWF      R0
0x129F	0x01F1      	CLRF       R0+1
0x12A0	0x1803      	BTFSC      STATUS, 0
0x12A1	0x0AF1      	INCF       R0+1, 1
0x12A2	0x3007      	MOVLW      7
0x12A3	0x00F4      	MOVWF      R4
0x12A4	0x3000      	MOVLW      0
0x12A5	0x00F5      	MOVWF      R4+1
0x12A6	0x120A      	BCF        PCLATH, 4
0x12A7	0x2207      	CALL       _Div_16x16_S
0x12A8	0x160A      	BSF        PCLATH, 4
0x12A9	0x0878      	MOVF       R8, 0
0x12AA	0x00F0      	MOVWF      R0
0x12AB	0x0879      	MOVF       R8+1, 0
0x12AC	0x00F1      	MOVWF      R0+1
0x12AD	0x0870      	MOVF       R0, 0
0x12AE	0x00EB      	MOVWF      main_random_seed_L0
;tetris.c,717 :: 		}
L_main199:
;tetris.c,718 :: 		}
L_main197:
;tetris.c,720 :: 		key_flags &= PORTC &0xf0;
0x12AF	0x30F0      	MOVLW      240
0x12B0	0x0507      	ANDWF      PORTC, 0
0x12B1	0x00F0      	MOVWF      R0
0x12B2	0x0870      	MOVF       R0, 0
0x12B3	0x05DD      	ANDWF      _key_flags, 1
;tetris.c,722 :: 		Delay_ms(1);
0x12B4	0x3007      	MOVLW      7
0x12B5	0x00FC      	MOVWF      R12
0x12B6	0x307D      	MOVLW      125
0x12B7	0x00FD      	MOVWF      R13
L_main200:
0x12B8	0x0BFD      	DECFSZ     R13, 1
0x12B9	0x2AB8      	GOTO       L_main200
0x12BA	0x0BFC      	DECFSZ     R12, 1
0x12BB	0x2AB8      	GOTO       L_main200
;tetris.c,723 :: 		}
L_main185:
;tetris.c,684 :: 		for (i=0; i<(round_delay); i++) {
0x12BC	0x0AE7      	INCF       main_i_L0, 1
0x12BD	0x1903      	BTFSC      STATUS, 2
0x12BE	0x0AE8      	INCF       main_i_L0+1, 1
;tetris.c,723 :: 		}
0x12BF	0x29AE      	GOTO       L_main183
L_main184:
;tetris.c,726 :: 		draw_shape(0, block_pos_x, block_pos_y);
0x12C0	0x1683      	BSF        STATUS, 5
0x12C1	0x01CD      	CLRF       FARG_draw_shape_c
0x12C2	0x1283      	BCF        STATUS, 5
0x12C3	0x085A      	MOVF       _block_pos_x, 0
0x12C4	0x1683      	BSF        STATUS, 5
0x12C5	0x00CE      	MOVWF      FARG_draw_shape_x
0x12C6	0x1283      	BCF        STATUS, 5
0x12C7	0x085C      	MOVF       _block_pos_y, 0
0x12C8	0x1683      	BSF        STATUS, 5
0x12C9	0x00CF      	MOVWF      FARG_draw_shape_y
0x12CA	0x120A      	BCF        PCLATH, 4
0x12CB	0x26FC      	CALL       _draw_shape
0x12CC	0x160A      	BSF        PCLATH, 4
;tetris.c,727 :: 		if ( ! check_and_update_position(block_pos_x, block_pos_y + 1, block_type_current, rotation) ) {
0x12CD	0x1283      	BCF        STATUS, 5
0x12CE	0x085A      	MOVF       _block_pos_x, 0
0x12CF	0x1683      	BSF        STATUS, 5
0x12D0	0x00CD      	MOVWF      FARG_check_and_update_position_x
0x12D1	0x1283      	BCF        STATUS, 5
0x12D2	0x0A5C      	INCF       _block_pos_y, 0
0x12D3	0x1683      	BSF        STATUS, 5
0x12D4	0x00CE      	MOVWF      FARG_check_and_update_position_y
0x12D5	0x1283      	BCF        STATUS, 5
0x12D6	0x086E      	MOVF       main_block_type_current_L0, 0
0x12D7	0x1683      	BSF        STATUS, 5
0x12D8	0x00CF      	MOVWF      FARG_check_and_update_position_type
0x12D9	0x1283      	BCF        STATUS, 5
0x12DA	0x085B      	MOVF       _rotation, 0
0x12DB	0x1683      	BSF        STATUS, 5
0x12DC	0x00D0      	MOVWF      FARG_check_and_update_position_rot
0x12DD	0x120A      	BCF        PCLATH, 4
0x12DE	0x25C6      	CALL       _check_and_update_position
0x12DF	0x160A      	BSF        PCLATH, 4
0x12E0	0x1283      	BCF        STATUS, 5
0x12E1	0x1303      	BCF        STATUS, 6
0x12E2	0x0870      	MOVF       R0, 0
0x12E3	0x1D03      	BTFSS      STATUS, 2
0x12E4	0x2BF0      	GOTO       L_main201
;tetris.c,728 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x12E5	0x3001      	MOVLW      1
0x12E6	0x1683      	BSF        STATUS, 5
0x12E7	0x00CD      	MOVWF      FARG_draw_shape_c
0x12E8	0x1283      	BCF        STATUS, 5
0x12E9	0x085A      	MOVF       _block_pos_x, 0
0x12EA	0x1683      	BSF        STATUS, 5
0x12EB	0x00CE      	MOVWF      FARG_draw_shape_x
0x12EC	0x1283      	BCF        STATUS, 5
0x12ED	0x085C      	MOVF       _block_pos_y, 0
0x12EE	0x1683      	BSF        STATUS, 5
0x12EF	0x00CF      	MOVWF      FARG_draw_shape_y
0x12F0	0x120A      	BCF        PCLATH, 4
0x12F1	0x26FC      	CALL       _draw_shape
0x12F2	0x160A      	BSF        PCLATH, 4
;tetris.c,729 :: 		round_finished = 1;
0x12F3	0x3001      	MOVLW      1
0x12F4	0x1283      	BCF        STATUS, 5
0x12F5	0x00EC      	MOVWF      main_round_finished_L0
;tetris.c,730 :: 		for (i=0; i < 5; i++) {
0x12F6	0x01E7      	CLRF       main_i_L0
0x12F7	0x01E8      	CLRF       main_i_L0+1
L_main202:
0x12F8	0x3000      	MOVLW      0
0x12F9	0x0268      	SUBWF      main_i_L0+1, 0
0x12FA	0x1D03      	BTFSS      STATUS, 2
0x12FB	0x2AFE      	GOTO       L__main254
0x12FC	0x3005      	MOVLW      5
0x12FD	0x0267      	SUBWF      main_i_L0, 0
L__main254:
0x12FE	0x1803      	BTFSC      STATUS, 0
0x12FF	0x2B45      	GOTO       L_main203
;tetris.c,731 :: 		tmp = (unsigned int)curr_shape_matrix[i] << block_pos_x;
0x1300	0x0867      	MOVF       main_i_L0, 0
0x1301	0x3E60      	ADDLW      _curr_shape_matrix
0x1302	0x0084      	MOVWF      FSR
0x1303	0x0800      	MOVF       INDF, 0
0x1304	0x00F1      	MOVWF      R1
0x1305	0x01F2      	CLRF       R1+1
0x1306	0x085A      	MOVF       _block_pos_x, 0
0x1307	0x00F0      	MOVWF      R0
0x1308	0x0871      	MOVF       R1, 0
0x1309	0x00F4      	MOVWF      R4
0x130A	0x0872      	MOVF       R1+1, 0
0x130B	0x00F5      	MOVWF      R4+1
0x130C	0x0870      	MOVF       R0, 0
L__main255:
0x130D	0x1903      	BTFSC      STATUS, 2
0x130E	0x2B14      	GOTO       L__main256
0x130F	0x0DF4      	RLF        R4, 1
0x1310	0x0DF5      	RLF        R4+1, 1
0x1311	0x1074      	BCF        R4, 0
0x1312	0x3EFF      	ADDLW      255
0x1313	0x2B0D      	GOTO       L__main255
L__main256:
;tetris.c,732 :: 		playfield[i + (block_pos_y-2)] |=  ( tmp >> 2 );
0x1314	0x3002      	MOVLW      2
0x1315	0x025C      	SUBWF      _block_pos_y, 0
0x1316	0x00F0      	MOVWF      R0
0x1317	0x01F1      	CLRF       R0+1
0x1318	0x1C03      	BTFSS      STATUS, 0
0x1319	0x03F1      	DECF       R0+1, 1
0x131A	0x0870      	MOVF       R0, 0
0x131B	0x0767      	ADDWF      main_i_L0, 0
0x131C	0x00F2      	MOVWF      R2
0x131D	0x0868      	MOVF       main_i_L0+1, 0
0x131E	0x1803      	BTFSC      STATUS, 0
0x131F	0x3E01      	ADDLW      1
0x1320	0x0771      	ADDWF      R0+1, 0
0x1321	0x00F3      	MOVWF      R2+1
0x1322	0x0872      	MOVF       R2, 0
0x1323	0x00F0      	MOVWF      R0
0x1324	0x0DF0      	RLF        R0, 1
0x1325	0x1070      	BCF        R0, 0
0x1326	0x0870      	MOVF       R0, 0
0x1327	0x3EA0      	ADDLW      _playfield
0x1328	0x00F3      	MOVWF      R3
0x1329	0x0874      	MOVF       R4, 0
0x132A	0x00F0      	MOVWF      R0
0x132B	0x0875      	MOVF       R4+1, 0
0x132C	0x00F1      	MOVWF      R0+1
0x132D	0x0CF1      	RRF        R0+1, 1
0x132E	0x0CF0      	RRF        R0, 1
0x132F	0x13F1      	BCF        R0+1, 7
0x1330	0x0CF1      	RRF        R0+1, 1
0x1331	0x0CF0      	RRF        R0, 1
0x1332	0x13F1      	BCF        R0+1, 7
0x1333	0x0873      	MOVF       R3, 0
0x1334	0x0084      	MOVWF      FSR
0x1335	0x0800      	MOVF       INDF, 0
0x1336	0x04F0      	IORWF      R0, 1
0x1337	0x0A84      	INCF       FSR, 1
0x1338	0x0800      	MOVF       INDF, 0
0x1339	0x04F1      	IORWF      R0+1, 1
0x133A	0x0873      	MOVF       R3, 0
0x133B	0x0084      	MOVWF      FSR
0x133C	0x0870      	MOVF       R0, 0
0x133D	0x0080      	MOVWF      INDF
0x133E	0x0871      	MOVF       R0+1, 0
0x133F	0x0A84      	INCF       FSR, 1
0x1340	0x0080      	MOVWF      INDF
;tetris.c,730 :: 		for (i=0; i < 5; i++) {
0x1341	0x0AE7      	INCF       main_i_L0, 1
0x1342	0x1903      	BTFSC      STATUS, 2
0x1343	0x0AE8      	INCF       main_i_L0+1, 1
;tetris.c,733 :: 		}
0x1344	0x2AF8      	GOTO       L_main202
L_main203:
;tetris.c,736 :: 		i=20;
0x1345	0x3014      	MOVLW      20
0x1346	0x00E7      	MOVWF      main_i_L0
0x1347	0x3000      	MOVLW      0
0x1348	0x00E8      	MOVWF      main_i_L0+1
;tetris.c,737 :: 		round_removed_rows = 0;
0x1349	0x01ED      	CLRF       main_round_removed_rows_L0
;tetris.c,738 :: 		do {
L_main205:
;tetris.c,739 :: 		i--;
0x134A	0x3001      	MOVLW      1
0x134B	0x02E7      	SUBWF      main_i_L0, 1
0x134C	0x1C03      	BTFSS      STATUS, 0
0x134D	0x03E8      	DECF       main_i_L0+1, 1
;tetris.c,740 :: 		if (playfield[i] >= 16383) {
0x134E	0x0867      	MOVF       main_i_L0, 0
0x134F	0x00F0      	MOVWF      R0
0x1350	0x0DF0      	RLF        R0, 1
0x1351	0x1070      	BCF        R0, 0
0x1352	0x0870      	MOVF       R0, 0
0x1353	0x3EA0      	ADDLW      _playfield
0x1354	0x0084      	MOVWF      FSR
0x1355	0x0800      	MOVF       INDF, 0
0x1356	0x00F1      	MOVWF      R1
0x1357	0x0A84      	INCF       FSR, 1
0x1358	0x0800      	MOVF       INDF, 0
0x1359	0x00F2      	MOVWF      R1+1
0x135A	0x303F      	MOVLW      63
0x135B	0x0272      	SUBWF      R1+1, 0
0x135C	0x1D03      	BTFSS      STATUS, 2
0x135D	0x2B60      	GOTO       L__main257
0x135E	0x30FF      	MOVLW      255
0x135F	0x0271      	SUBWF      R1, 0
L__main257:
0x1360	0x1C03      	BTFSS      STATUS, 0
0x1361	0x2BDE      	GOTO       L_main208
;tetris.c,741 :: 		destroy_row(i);
0x1362	0x0867      	MOVF       main_i_L0, 0
0x1363	0x1683      	BSF        STATUS, 5
0x1364	0x00CD      	MOVWF      FARG_destroy_row_row
0x1365	0x120A      	BCF        PCLATH, 4
0x1366	0x26AD      	CALL       _destroy_row
0x1367	0x160A      	BSF        PCLATH, 4
;tetris.c,742 :: 		lower_rows(0,i);
0x1368	0x01CD      	CLRF       FARG_lower_rows_start
0x1369	0x1283      	BCF        STATUS, 5
0x136A	0x0867      	MOVF       main_i_L0, 0
0x136B	0x1683      	BSF        STATUS, 5
0x136C	0x00CE      	MOVWF      FARG_lower_rows_end
0x136D	0x120A      	BCF        PCLATH, 4
0x136E	0x2789      	CALL       _lower_rows
0x136F	0x160A      	BSF        PCLATH, 4
;tetris.c,743 :: 		for (j=i; j>0; j--) {
0x1370	0x1283      	BCF        STATUS, 5
0x1371	0x0867      	MOVF       main_i_L0, 0
0x1372	0x00E9      	MOVWF      main_j_L0
0x1373	0x0868      	MOVF       main_i_L0+1, 0
0x1374	0x00EA      	MOVWF      main_j_L0+1
L_main209:
0x1375	0x086A      	MOVF       main_j_L0+1, 0
0x1376	0x3C00      	SUBLW      0
0x1377	0x1D03      	BTFSS      STATUS, 2
0x1378	0x2B7B      	GOTO       L__main258
0x1379	0x0869      	MOVF       main_j_L0, 0
0x137A	0x3C00      	SUBLW      0
L__main258:
0x137B	0x1803      	BTFSC      STATUS, 0
0x137C	0x2BA4      	GOTO       L_main210
;tetris.c,744 :: 		playfield[j] = playfield[j-1];
0x137D	0x0869      	MOVF       main_j_L0, 0
0x137E	0x00F0      	MOVWF      R0
0x137F	0x0DF0      	RLF        R0, 1
0x1380	0x1070      	BCF        R0, 0
0x1381	0x0870      	MOVF       R0, 0
0x1382	0x3EA0      	ADDLW      _playfield
0x1383	0x00F4      	MOVWF      R4
0x1384	0x3001      	MOVLW      1
0x1385	0x0269      	SUBWF      main_j_L0, 0
0x1386	0x00F2      	MOVWF      R2
0x1387	0x3000      	MOVLW      0
0x1388	0x1C03      	BTFSS      STATUS, 0
0x1389	0x3E01      	ADDLW      1
0x138A	0x026A      	SUBWF      main_j_L0+1, 0
0x138B	0x00F3      	MOVWF      R2+1
0x138C	0x0872      	MOVF       R2, 0
0x138D	0x00F0      	MOVWF      R0
0x138E	0x0DF0      	RLF        R0, 1
0x138F	0x1070      	BCF        R0, 0
0x1390	0x0870      	MOVF       R0, 0
0x1391	0x3EA0      	ADDLW      _playfield
0x1392	0x0084      	MOVWF      FSR
0x1393	0x0800      	MOVF       INDF, 0
0x1394	0x00F0      	MOVWF      R0
0x1395	0x0A84      	INCF       FSR, 1
0x1396	0x0800      	MOVF       INDF, 0
0x1397	0x00F1      	MOVWF      R0+1
0x1398	0x0874      	MOVF       R4, 0
0x1399	0x0084      	MOVWF      FSR
0x139A	0x0870      	MOVF       R0, 0
0x139B	0x0080      	MOVWF      INDF
0x139C	0x0871      	MOVF       R0+1, 0
0x139D	0x0A84      	INCF       FSR, 1
0x139E	0x0080      	MOVWF      INDF
;tetris.c,743 :: 		for (j=i; j>0; j--) {
0x139F	0x3001      	MOVLW      1
0x13A0	0x02E9      	SUBWF      main_j_L0, 1
0x13A1	0x1C03      	BTFSS      STATUS, 0
0x13A2	0x03EA      	DECF       main_j_L0+1, 1
;tetris.c,745 :: 		}
0x13A3	0x2B75      	GOTO       L_main209
L_main210:
;tetris.c,746 :: 		i++;
0x13A4	0x0AE7      	INCF       main_i_L0, 1
0x13A5	0x1903      	BTFSC      STATUS, 2
0x13A6	0x0AE8      	INCF       main_i_L0+1, 1
;tetris.c,747 :: 		removed_rows++;
0x13A7	0x0AE5      	INCF       _removed_rows, 1
0x13A8	0x1903      	BTFSC      STATUS, 2
0x13A9	0x0AE6      	INCF       _removed_rows+1, 1
;tetris.c,748 :: 		round_removed_rows++;
0x13AA	0x0AED      	INCF       main_round_removed_rows_L0, 1
;tetris.c,749 :: 		score += (20 * level) * round_removed_rows;
0x13AB	0x085F      	MOVF       _level, 0
0x13AC	0x00F0      	MOVWF      R0
0x13AD	0x3014      	MOVLW      20
0x13AE	0x00F4      	MOVWF      R4
0x13AF	0x120A      	BCF        PCLATH, 4
0x13B0	0x2270      	CALL       _Mul_8x8_U
0x13B1	0x160A      	BSF        PCLATH, 4
0x13B2	0x086D      	MOVF       main_round_removed_rows_L0, 0
0x13B3	0x00F4      	MOVWF      R4
0x13B4	0x01F5      	CLRF       R4+1
0x13B5	0x120A      	BCF        PCLATH, 4
0x13B6	0x21A1      	CALL       _Mul_16x16_U
0x13B7	0x160A      	BSF        PCLATH, 4
0x13B8	0x0870      	MOVF       R0, 0
0x13B9	0x07D8      	ADDWF      _score, 1
0x13BA	0x0871      	MOVF       R0+1, 0
0x13BB	0x1803      	BTFSC      STATUS, 0
0x13BC	0x3E01      	ADDLW      1
0x13BD	0x07D9      	ADDWF      _score+1, 1
;tetris.c,750 :: 		if (level < 10) {
0x13BE	0x300A      	MOVLW      10
0x13BF	0x025F      	SUBWF      _level, 0
0x13C0	0x1803      	BTFSC      STATUS, 0
0x13C1	0x2BDE      	GOTO       L_main212
;tetris.c,751 :: 		if ((removed_rows % 10) == 0) {
0x13C2	0x300A      	MOVLW      10
0x13C3	0x00F4      	MOVWF      R4
0x13C4	0x3000      	MOVLW      0
0x13C5	0x00F5      	MOVWF      R4+1
0x13C6	0x0865      	MOVF       _removed_rows, 0
0x13C7	0x00F0      	MOVWF      R0
0x13C8	0x0866      	MOVF       _removed_rows+1, 0
0x13C9	0x00F1      	MOVWF      R0+1
0x13CA	0x120A      	BCF        PCLATH, 4
0x13CB	0x2184      	CALL       _Div_16x16_U
0x13CC	0x160A      	BSF        PCLATH, 4
0x13CD	0x0878      	MOVF       R8, 0
0x13CE	0x00F0      	MOVWF      R0
0x13CF	0x0879      	MOVF       R8+1, 0
0x13D0	0x00F1      	MOVWF      R0+1
0x13D1	0x3000      	MOVLW      0
0x13D2	0x0671      	XORWF      R0+1, 0
0x13D3	0x1D03      	BTFSS      STATUS, 2
0x13D4	0x2BD7      	GOTO       L__main259
0x13D5	0x3000      	MOVLW      0
0x13D6	0x0670      	XORWF      R0, 0
L__main259:
0x13D7	0x1D03      	BTFSS      STATUS, 2
0x13D8	0x2BDE      	GOTO       L_main213
;tetris.c,752 :: 		level++;
0x13D9	0x0ADF      	INCF       _level, 1
;tetris.c,753 :: 		round_delay -= 90;
0x13DA	0x305A      	MOVLW      90
0x13DB	0x02D1      	SUBWF      _round_delay, 1
0x13DC	0x1C03      	BTFSS      STATUS, 0
0x13DD	0x03D2      	DECF       _round_delay+1, 1
;tetris.c,754 :: 		}
L_main213:
;tetris.c,755 :: 		}
L_main212:
;tetris.c,756 :: 		}
L_main208:
;tetris.c,758 :: 		} while (i > 0);
0x13DE	0x0868      	MOVF       main_i_L0+1, 0
0x13DF	0x3C00      	SUBLW      0
0x13E0	0x1D03      	BTFSS      STATUS, 2
0x13E1	0x2BE4      	GOTO       L__main260
0x13E2	0x0867      	MOVF       main_i_L0, 0
0x13E3	0x3C00      	SUBLW      0
L__main260:
0x13E4	0x1C03      	BTFSS      STATUS, 0
0x13E5	0x2B4A      	GOTO       L_main205
;tetris.c,760 :: 		if (round_removed_rows > 0) {
0x13E6	0x086D      	MOVF       main_round_removed_rows_L0, 0
0x13E7	0x3C00      	SUBLW      0
0x13E8	0x1803      	BTFSC      STATUS, 0
0x13E9	0x2BEF      	GOTO       L_main214
;tetris.c,761 :: 		update_scoreboard();
0x13EA	0x158A      	BSF        PCLATH, 3
0x13EB	0x120A      	BCF        PCLATH, 4
0x13EC	0x256F      	CALL       _update_scoreboard
0x13ED	0x118A      	BCF        PCLATH, 3
0x13EE	0x160A      	BSF        PCLATH, 4
;tetris.c,762 :: 		}
L_main214:
;tetris.c,764 :: 		} else {
0x13EF	0x2BFE      	GOTO       L_main215
L_main201:
0x13F0	0x1683      	BSF        STATUS, 5
;tetris.c,765 :: 		draw_shape(1, block_pos_x, block_pos_y);
0x13F1	0x3001      	MOVLW      1
0x13F2	0x00CD      	MOVWF      FARG_draw_shape_c
0x13F3	0x1283      	BCF        STATUS, 5
0x13F4	0x085A      	MOVF       _block_pos_x, 0
0x13F5	0x1683      	BSF        STATUS, 5
0x13F6	0x00CE      	MOVWF      FARG_draw_shape_x
0x13F7	0x1283      	BCF        STATUS, 5
0x13F8	0x085C      	MOVF       _block_pos_y, 0
0x13F9	0x1683      	BSF        STATUS, 5
0x13FA	0x00CF      	MOVWF      FARG_draw_shape_y
0x13FB	0x120A      	BCF        PCLATH, 4
0x13FC	0x26FC      	CALL       _draw_shape
0x13FD	0x160A      	BSF        PCLATH, 4
;tetris.c,766 :: 		}
L_main215:
;tetris.c,769 :: 		}
0x13FE	0x2988      	GOTO       L_main180
L_main181:
;tetris.c,771 :: 		}
0x13FF	0x290C      	GOTO       L_main173
;tetris.c,772 :: 		}
0x1400	0x2C00      	GOTO       $+0
; end of _main
0x18FA	0x3028      	MOVLW      40
0x18FB	0x0084      	MOVWF      FSR
0x18FC	0x3027      	MOVLW      39
0x18FD	0x1283      	BCF        STATUS, 5
0x18FE	0x1303      	BCF        STATUS, 6
0x18FF	0x00F0      	MOVWF      R0
0x1900	0x30D2      	MOVLW      210
0x1901	0x00A6      	MOVWF      ___DoICPAddr
0x1902	0x3017      	MOVLW      23
0x1903	0x00A7      	MOVWF      39
0x1904	0x120A      	BCF        PCLATH, 4
0x1905	0x244D      	CALL       3149
0x1906	0x160A      	BSF        PCLATH, 4
0x1907	0x0008      	RETURN
;tetris.c,0 :: ?lstr_10_tetris
0x07F0	0x3452 ;?lstr_10_tetris+0
0x07F1	0x3443 ;?lstr_10_tetris+1
0x07F2	0x3436 ;?lstr_10_tetris+2
0x07F3	0x343A ;?lstr_10_tetris+3
0x07F4	0x3420 ;?lstr_10_tetris+4
0x07F5	0x3448 ;?lstr_10_tetris+5
0x07F6	0x3469 ;?lstr_10_tetris+6
0x07F7	0x3467 ;?lstr_10_tetris+7
0x07F8	0x3468 ;?lstr_10_tetris+8
0x07F9	0x3473 ;?lstr_10_tetris+9
0x07FA	0x3463 ;?lstr_10_tetris+10
0x07FB	0x346F ;?lstr_10_tetris+11
0x07FC	0x3472 ;?lstr_10_tetris+12
0x07FD	0x3465 ;?lstr_10_tetris+13
0x07FE	0x3473 ;?lstr_10_tetris+14
0x07FF	0x3400 ;?lstr_10_tetris+15
; end of ?lstr_10_tetris
;ks0108.c,4 :: ks0108_font5x7
0x0E1C	0x3400 ;ks0108_font5x7+0
0x0E1D	0x3400 ;ks0108_font5x7+1
0x0E1E	0x3400 ;ks0108_font5x7+2
0x0E1F	0x3400 ;ks0108_font5x7+3
0x0E20	0x3400 ;ks0108_font5x7+4
0x0E21	0x3400 ;ks0108_font5x7+5
0x0E22	0x3400 ;ks0108_font5x7+6
0x0E23	0x345F ;ks0108_font5x7+7
0x0E24	0x3400 ;ks0108_font5x7+8
0x0E25	0x3400 ;ks0108_font5x7+9
0x0E26	0x3400 ;ks0108_font5x7+10
0x0E27	0x3407 ;ks0108_font5x7+11
0x0E28	0x3400 ;ks0108_font5x7+12
0x0E29	0x3407 ;ks0108_font5x7+13
0x0E2A	0x3400 ;ks0108_font5x7+14
0x0E2B	0x3414 ;ks0108_font5x7+15
0x0E2C	0x347F ;ks0108_font5x7+16
0x0E2D	0x3414 ;ks0108_font5x7+17
0x0E2E	0x347F ;ks0108_font5x7+18
0x0E2F	0x3414 ;ks0108_font5x7+19
0x0E30	0x3424 ;ks0108_font5x7+20
0x0E31	0x342A ;ks0108_font5x7+21
0x0E32	0x347F ;ks0108_font5x7+22
0x0E33	0x342A ;ks0108_font5x7+23
0x0E34	0x3412 ;ks0108_font5x7+24
0x0E35	0x3423 ;ks0108_font5x7+25
0x0E36	0x3413 ;ks0108_font5x7+26
0x0E37	0x3408 ;ks0108_font5x7+27
0x0E38	0x3464 ;ks0108_font5x7+28
0x0E39	0x3462 ;ks0108_font5x7+29
0x0E3A	0x3436 ;ks0108_font5x7+30
0x0E3B	0x3449 ;ks0108_font5x7+31
0x0E3C	0x3455 ;ks0108_font5x7+32
0x0E3D	0x3422 ;ks0108_font5x7+33
0x0E3E	0x3450 ;ks0108_font5x7+34
0x0E3F	0x3400 ;ks0108_font5x7+35
0x0E40	0x3405 ;ks0108_font5x7+36
0x0E41	0x3403 ;ks0108_font5x7+37
0x0E42	0x3400 ;ks0108_font5x7+38
0x0E43	0x3400 ;ks0108_font5x7+39
0x0E44	0x3400 ;ks0108_font5x7+40
0x0E45	0x341C ;ks0108_font5x7+41
0x0E46	0x3422 ;ks0108_font5x7+42
0x0E47	0x3441 ;ks0108_font5x7+43
0x0E48	0x3400 ;ks0108_font5x7+44
0x0E49	0x3400 ;ks0108_font5x7+45
0x0E4A	0x3441 ;ks0108_font5x7+46
0x0E4B	0x3422 ;ks0108_font5x7+47
0x0E4C	0x341C ;ks0108_font5x7+48
0x0E4D	0x3400 ;ks0108_font5x7+49
0x0E4E	0x3408 ;ks0108_font5x7+50
0x0E4F	0x342A ;ks0108_font5x7+51
0x0E50	0x341C ;ks0108_font5x7+52
0x0E51	0x342A ;ks0108_font5x7+53
0x0E52	0x3408 ;ks0108_font5x7+54
0x0E53	0x3408 ;ks0108_font5x7+55
0x0E54	0x3408 ;ks0108_font5x7+56
0x0E55	0x343E ;ks0108_font5x7+57
0x0E56	0x3408 ;ks0108_font5x7+58
0x0E57	0x3408 ;ks0108_font5x7+59
0x0E58	0x3400 ;ks0108_font5x7+60
0x0E59	0x3450 ;ks0108_font5x7+61
0x0E5A	0x3430 ;ks0108_font5x7+62
0x0E5B	0x3400 ;ks0108_font5x7+63
0x0E5C	0x3400 ;ks0108_font5x7+64
0x0E5D	0x3408 ;ks0108_font5x7+65
0x0E5E	0x3408 ;ks0108_font5x7+66
0x0E5F	0x3408 ;ks0108_font5x7+67
0x0E60	0x3408 ;ks0108_font5x7+68
0x0E61	0x3408 ;ks0108_font5x7+69
0x0E62	0x3400 ;ks0108_font5x7+70
0x0E63	0x3430 ;ks0108_font5x7+71
0x0E64	0x3430 ;ks0108_font5x7+72
0x0E65	0x3400 ;ks0108_font5x7+73
0x0E66	0x3400 ;ks0108_font5x7+74
0x0E67	0x3420 ;ks0108_font5x7+75
0x0E68	0x3410 ;ks0108_font5x7+76
0x0E69	0x3408 ;ks0108_font5x7+77
0x0E6A	0x3404 ;ks0108_font5x7+78
0x0E6B	0x3402 ;ks0108_font5x7+79
0x0E6C	0x343E ;ks0108_font5x7+80
0x0E6D	0x3451 ;ks0108_font5x7+81
0x0E6E	0x3449 ;ks0108_font5x7+82
0x0E6F	0x3445 ;ks0108_font5x7+83
0x0E70	0x343E ;ks0108_font5x7+84
0x0E71	0x3400 ;ks0108_font5x7+85
0x0E72	0x3442 ;ks0108_font5x7+86
0x0E73	0x347F ;ks0108_font5x7+87
0x0E74	0x3440 ;ks0108_font5x7+88
0x0E75	0x3400 ;ks0108_font5x7+89
0x0E76	0x3442 ;ks0108_font5x7+90
0x0E77	0x3461 ;ks0108_font5x7+91
0x0E78	0x3451 ;ks0108_font5x7+92
0x0E79	0x3449 ;ks0108_font5x7+93
0x0E7A	0x3446 ;ks0108_font5x7+94
0x0E7B	0x3421 ;ks0108_font5x7+95
0x0E7C	0x3441 ;ks0108_font5x7+96
0x0E7D	0x3445 ;ks0108_font5x7+97
0x0E7E	0x344B ;ks0108_font5x7+98
0x0E7F	0x3431 ;ks0108_font5x7+99
0x0E80	0x3418 ;ks0108_font5x7+100
0x0E81	0x3414 ;ks0108_font5x7+101
0x0E82	0x3412 ;ks0108_font5x7+102
0x0E83	0x347F ;ks0108_font5x7+103
0x0E84	0x3410 ;ks0108_font5x7+104
0x0E85	0x3427 ;ks0108_font5x7+105
0x0E86	0x3445 ;ks0108_font5x7+106
0x0E87	0x3445 ;ks0108_font5x7+107
0x0E88	0x3445 ;ks0108_font5x7+108
0x0E89	0x3439 ;ks0108_font5x7+109
0x0E8A	0x343C ;ks0108_font5x7+110
0x0E8B	0x344A ;ks0108_font5x7+111
0x0E8C	0x3449 ;ks0108_font5x7+112
0x0E8D	0x3449 ;ks0108_font5x7+113
0x0E8E	0x3430 ;ks0108_font5x7+114
0x0E8F	0x3401 ;ks0108_font5x7+115
0x0E90	0x3471 ;ks0108_font5x7+116
0x0E91	0x3409 ;ks0108_font5x7+117
0x0E92	0x3405 ;ks0108_font5x7+118
0x0E93	0x3403 ;ks0108_font5x7+119
0x0E94	0x3436 ;ks0108_font5x7+120
0x0E95	0x3449 ;ks0108_font5x7+121
0x0E96	0x3449 ;ks0108_font5x7+122
0x0E97	0x3449 ;ks0108_font5x7+123
0x0E98	0x3436 ;ks0108_font5x7+124
0x0E99	0x3406 ;ks0108_font5x7+125
0x0E9A	0x3449 ;ks0108_font5x7+126
0x0E9B	0x3449 ;ks0108_font5x7+127
0x0E9C	0x3429 ;ks0108_font5x7+128
0x0E9D	0x341E ;ks0108_font5x7+129
0x0E9E	0x3400 ;ks0108_font5x7+130
0x0E9F	0x3436 ;ks0108_font5x7+131
0x0EA0	0x3436 ;ks0108_font5x7+132
0x0EA1	0x3400 ;ks0108_font5x7+133
0x0EA2	0x3400 ;ks0108_font5x7+134
0x0EA3	0x3400 ;ks0108_font5x7+135
0x0EA4	0x3456 ;ks0108_font5x7+136
0x0EA5	0x3436 ;ks0108_font5x7+137
0x0EA6	0x3400 ;ks0108_font5x7+138
0x0EA7	0x3400 ;ks0108_font5x7+139
0x0EA8	0x3400 ;ks0108_font5x7+140
0x0EA9	0x3408 ;ks0108_font5x7+141
0x0EAA	0x3414 ;ks0108_font5x7+142
0x0EAB	0x3422 ;ks0108_font5x7+143
0x0EAC	0x3441 ;ks0108_font5x7+144
0x0EAD	0x3414 ;ks0108_font5x7+145
0x0EAE	0x3414 ;ks0108_font5x7+146
0x0EAF	0x3414 ;ks0108_font5x7+147
0x0EB0	0x3414 ;ks0108_font5x7+148
0x0EB1	0x3414 ;ks0108_font5x7+149
0x0EB2	0x3441 ;ks0108_font5x7+150
0x0EB3	0x3422 ;ks0108_font5x7+151
0x0EB4	0x3414 ;ks0108_font5x7+152
0x0EB5	0x3408 ;ks0108_font5x7+153
0x0EB6	0x3400 ;ks0108_font5x7+154
0x0EB7	0x3402 ;ks0108_font5x7+155
0x0EB8	0x3401 ;ks0108_font5x7+156
0x0EB9	0x3451 ;ks0108_font5x7+157
0x0EBA	0x3409 ;ks0108_font5x7+158
0x0EBB	0x3406 ;ks0108_font5x7+159
0x0EBC	0x3432 ;ks0108_font5x7+160
0x0EBD	0x3449 ;ks0108_font5x7+161
0x0EBE	0x3479 ;ks0108_font5x7+162
0x0EBF	0x3441 ;ks0108_font5x7+163
0x0EC0	0x343E ;ks0108_font5x7+164
0x0EC1	0x347E ;ks0108_font5x7+165
0x0EC2	0x3411 ;ks0108_font5x7+166
0x0EC3	0x3411 ;ks0108_font5x7+167
0x0EC4	0x3411 ;ks0108_font5x7+168
0x0EC5	0x347E ;ks0108_font5x7+169
0x0EC6	0x347F ;ks0108_font5x7+170
0x0EC7	0x3449 ;ks0108_font5x7+171
0x0EC8	0x3449 ;ks0108_font5x7+172
0x0EC9	0x3449 ;ks0108_font5x7+173
0x0ECA	0x3436 ;ks0108_font5x7+174
0x0ECB	0x343E ;ks0108_font5x7+175
0x0ECC	0x3441 ;ks0108_font5x7+176
0x0ECD	0x3441 ;ks0108_font5x7+177
0x0ECE	0x3441 ;ks0108_font5x7+178
0x0ECF	0x3422 ;ks0108_font5x7+179
0x0ED0	0x347F ;ks0108_font5x7+180
0x0ED1	0x3441 ;ks0108_font5x7+181
0x0ED2	0x3441 ;ks0108_font5x7+182
0x0ED3	0x3422 ;ks0108_font5x7+183
0x0ED4	0x341C ;ks0108_font5x7+184
0x0ED5	0x347F ;ks0108_font5x7+185
0x0ED6	0x3449 ;ks0108_font5x7+186
0x0ED7	0x3449 ;ks0108_font5x7+187
0x0ED8	0x3449 ;ks0108_font5x7+188
0x0ED9	0x3441 ;ks0108_font5x7+189
0x0EDA	0x347F ;ks0108_font5x7+190
0x0EDB	0x3409 ;ks0108_font5x7+191
0x0EDC	0x3409 ;ks0108_font5x7+192
0x0EDD	0x3401 ;ks0108_font5x7+193
0x0EDE	0x3401 ;ks0108_font5x7+194
0x0EDF	0x343E ;ks0108_font5x7+195
0x0EE0	0x3441 ;ks0108_font5x7+196
0x0EE1	0x3441 ;ks0108_font5x7+197
0x0EE2	0x3451 ;ks0108_font5x7+198
0x0EE3	0x3432 ;ks0108_font5x7+199
0x0EE4	0x347F ;ks0108_font5x7+200
0x0EE5	0x3408 ;ks0108_font5x7+201
0x0EE6	0x3408 ;ks0108_font5x7+202
0x0EE7	0x3408 ;ks0108_font5x7+203
0x0EE8	0x347F ;ks0108_font5x7+204
0x0EE9	0x3400 ;ks0108_font5x7+205
0x0EEA	0x3441 ;ks0108_font5x7+206
0x0EEB	0x347F ;ks0108_font5x7+207
0x0EEC	0x3441 ;ks0108_font5x7+208
0x0EED	0x3400 ;ks0108_font5x7+209
0x0EEE	0x3420 ;ks0108_font5x7+210
0x0EEF	0x3440 ;ks0108_font5x7+211
0x0EF0	0x3441 ;ks0108_font5x7+212
0x0EF1	0x343F ;ks0108_font5x7+213
0x0EF2	0x3401 ;ks0108_font5x7+214
0x0EF3	0x347F ;ks0108_font5x7+215
0x0EF4	0x3408 ;ks0108_font5x7+216
0x0EF5	0x3414 ;ks0108_font5x7+217
0x0EF6	0x3422 ;ks0108_font5x7+218
0x0EF7	0x3441 ;ks0108_font5x7+219
0x0EF8	0x347F ;ks0108_font5x7+220
0x0EF9	0x3440 ;ks0108_font5x7+221
0x0EFA	0x3440 ;ks0108_font5x7+222
0x0EFB	0x3440 ;ks0108_font5x7+223
0x0EFC	0x3440 ;ks0108_font5x7+224
0x0EFD	0x347F ;ks0108_font5x7+225
0x0EFE	0x3402 ;ks0108_font5x7+226
0x0EFF	0x3404 ;ks0108_font5x7+227
0x0F00	0x3402 ;ks0108_font5x7+228
0x0F01	0x347F ;ks0108_font5x7+229
0x0F02	0x347F ;ks0108_font5x7+230
0x0F03	0x3404 ;ks0108_font5x7+231
0x0F04	0x3408 ;ks0108_font5x7+232
0x0F05	0x3410 ;ks0108_font5x7+233
0x0F06	0x347F ;ks0108_font5x7+234
0x0F07	0x343E ;ks0108_font5x7+235
0x0F08	0x3441 ;ks0108_font5x7+236
0x0F09	0x3441 ;ks0108_font5x7+237
0x0F0A	0x3441 ;ks0108_font5x7+238
0x0F0B	0x343E ;ks0108_font5x7+239
0x0F0C	0x347F ;ks0108_font5x7+240
0x0F0D	0x3409 ;ks0108_font5x7+241
0x0F0E	0x3409 ;ks0108_font5x7+242
0x0F0F	0x3409 ;ks0108_font5x7+243
0x0F10	0x3406 ;ks0108_font5x7+244
0x0F11	0x343E ;ks0108_font5x7+245
0x0F12	0x3441 ;ks0108_font5x7+246
0x0F13	0x3451 ;ks0108_font5x7+247
0x0F14	0x3421 ;ks0108_font5x7+248
0x0F15	0x345E ;ks0108_font5x7+249
0x0F16	0x347F ;ks0108_font5x7+250
0x0F17	0x3409 ;ks0108_font5x7+251
0x0F18	0x3419 ;ks0108_font5x7+252
0x0F19	0x3429 ;ks0108_font5x7+253
0x0F1A	0x3446 ;ks0108_font5x7+254
0x0F1B	0x3446 ;ks0108_font5x7+255
0x0F1C	0x3449 ;ks0108_font5x7+256
0x0F1D	0x3449 ;ks0108_font5x7+257
0x0F1E	0x3449 ;ks0108_font5x7+258
0x0F1F	0x3431 ;ks0108_font5x7+259
0x0F20	0x3401 ;ks0108_font5x7+260
0x0F21	0x3401 ;ks0108_font5x7+261
0x0F22	0x347F ;ks0108_font5x7+262
0x0F23	0x3401 ;ks0108_font5x7+263
0x0F24	0x3401 ;ks0108_font5x7+264
0x0F25	0x343F ;ks0108_font5x7+265
0x0F26	0x3440 ;ks0108_font5x7+266
0x0F27	0x3440 ;ks0108_font5x7+267
0x0F28	0x3440 ;ks0108_font5x7+268
0x0F29	0x343F ;ks0108_font5x7+269
0x0F2A	0x341F ;ks0108_font5x7+270
0x0F2B	0x3420 ;ks0108_font5x7+271
0x0F2C	0x3440 ;ks0108_font5x7+272
0x0F2D	0x3420 ;ks0108_font5x7+273
0x0F2E	0x341F ;ks0108_font5x7+274
0x0F2F	0x347F ;ks0108_font5x7+275
0x0F30	0x3420 ;ks0108_font5x7+276
0x0F31	0x3418 ;ks0108_font5x7+277
0x0F32	0x3420 ;ks0108_font5x7+278
0x0F33	0x347F ;ks0108_font5x7+279
0x0F34	0x3463 ;ks0108_font5x7+280
0x0F35	0x3414 ;ks0108_font5x7+281
0x0F36	0x3408 ;ks0108_font5x7+282
0x0F37	0x3414 ;ks0108_font5x7+283
0x0F38	0x3463 ;ks0108_font5x7+284
0x0F39	0x3403 ;ks0108_font5x7+285
0x0F3A	0x3404 ;ks0108_font5x7+286
0x0F3B	0x3478 ;ks0108_font5x7+287
0x0F3C	0x3404 ;ks0108_font5x7+288
0x0F3D	0x3403 ;ks0108_font5x7+289
0x0F3E	0x3461 ;ks0108_font5x7+290
0x0F3F	0x3451 ;ks0108_font5x7+291
0x0F40	0x3449 ;ks0108_font5x7+292
0x0F41	0x3445 ;ks0108_font5x7+293
0x0F42	0x3443 ;ks0108_font5x7+294
0x0F43	0x3400 ;ks0108_font5x7+295
0x0F44	0x3400 ;ks0108_font5x7+296
0x0F45	0x347F ;ks0108_font5x7+297
0x0F46	0x3441 ;ks0108_font5x7+298
0x0F47	0x3441 ;ks0108_font5x7+299
0x0F48	0x3402 ;ks0108_font5x7+300
0x0F49	0x3404 ;ks0108_font5x7+301
0x0F4A	0x3408 ;ks0108_font5x7+302
0x0F4B	0x3410 ;ks0108_font5x7+303
0x0F4C	0x3420 ;ks0108_font5x7+304
0x0F4D	0x3441 ;ks0108_font5x7+305
0x0F4E	0x3441 ;ks0108_font5x7+306
0x0F4F	0x347F ;ks0108_font5x7+307
0x0F50	0x3400 ;ks0108_font5x7+308
0x0F51	0x3400 ;ks0108_font5x7+309
0x0F52	0x3404 ;ks0108_font5x7+310
0x0F53	0x3402 ;ks0108_font5x7+311
0x0F54	0x3401 ;ks0108_font5x7+312
0x0F55	0x3402 ;ks0108_font5x7+313
0x0F56	0x3404 ;ks0108_font5x7+314
0x0F57	0x3440 ;ks0108_font5x7+315
0x0F58	0x3440 ;ks0108_font5x7+316
0x0F59	0x3440 ;ks0108_font5x7+317
0x0F5A	0x3440 ;ks0108_font5x7+318
0x0F5B	0x3440 ;ks0108_font5x7+319
0x0F5C	0x3400 ;ks0108_font5x7+320
0x0F5D	0x3401 ;ks0108_font5x7+321
0x0F5E	0x3402 ;ks0108_font5x7+322
0x0F5F	0x3404 ;ks0108_font5x7+323
0x0F60	0x3400 ;ks0108_font5x7+324
0x0F61	0x3420 ;ks0108_font5x7+325
0x0F62	0x3454 ;ks0108_font5x7+326
0x0F63	0x3454 ;ks0108_font5x7+327
0x0F64	0x3454 ;ks0108_font5x7+328
0x0F65	0x3478 ;ks0108_font5x7+329
0x0F66	0x347F ;ks0108_font5x7+330
0x0F67	0x3448 ;ks0108_font5x7+331
0x0F68	0x3444 ;ks0108_font5x7+332
0x0F69	0x3444 ;ks0108_font5x7+333
0x0F6A	0x3438 ;ks0108_font5x7+334
0x0F6B	0x3438 ;ks0108_font5x7+335
0x0F6C	0x3444 ;ks0108_font5x7+336
0x0F6D	0x3444 ;ks0108_font5x7+337
0x0F6E	0x3444 ;ks0108_font5x7+338
0x0F6F	0x3420 ;ks0108_font5x7+339
0x0F70	0x3438 ;ks0108_font5x7+340
0x0F71	0x3444 ;ks0108_font5x7+341
0x0F72	0x3444 ;ks0108_font5x7+342
0x0F73	0x3448 ;ks0108_font5x7+343
0x0F74	0x347F ;ks0108_font5x7+344
0x0F75	0x3438 ;ks0108_font5x7+345
0x0F76	0x3454 ;ks0108_font5x7+346
0x0F77	0x3454 ;ks0108_font5x7+347
0x0F78	0x3454 ;ks0108_font5x7+348
0x0F79	0x3418 ;ks0108_font5x7+349
0x0F7A	0x3408 ;ks0108_font5x7+350
0x0F7B	0x347E ;ks0108_font5x7+351
0x0F7C	0x3409 ;ks0108_font5x7+352
0x0F7D	0x3401 ;ks0108_font5x7+353
0x0F7E	0x3402 ;ks0108_font5x7+354
0x0F7F	0x3408 ;ks0108_font5x7+355
0x0F80	0x3414 ;ks0108_font5x7+356
0x0F81	0x3454 ;ks0108_font5x7+357
0x0F82	0x3454 ;ks0108_font5x7+358
0x0F83	0x343C ;ks0108_font5x7+359
0x0F84	0x347F ;ks0108_font5x7+360
0x0F85	0x3408 ;ks0108_font5x7+361
0x0F86	0x3404 ;ks0108_font5x7+362
0x0F87	0x3404 ;ks0108_font5x7+363
0x0F88	0x3478 ;ks0108_font5x7+364
0x0F89	0x3400 ;ks0108_font5x7+365
0x0F8A	0x3444 ;ks0108_font5x7+366
0x0F8B	0x347D ;ks0108_font5x7+367
0x0F8C	0x3440 ;ks0108_font5x7+368
0x0F8D	0x3400 ;ks0108_font5x7+369
0x0F8E	0x3420 ;ks0108_font5x7+370
0x0F8F	0x3440 ;ks0108_font5x7+371
0x0F90	0x3444 ;ks0108_font5x7+372
0x0F91	0x343D ;ks0108_font5x7+373
0x0F92	0x3400 ;ks0108_font5x7+374
0x0F93	0x3400 ;ks0108_font5x7+375
0x0F94	0x347F ;ks0108_font5x7+376
0x0F95	0x3410 ;ks0108_font5x7+377
0x0F96	0x3428 ;ks0108_font5x7+378
0x0F97	0x3444 ;ks0108_font5x7+379
0x0F98	0x3400 ;ks0108_font5x7+380
0x0F99	0x3441 ;ks0108_font5x7+381
0x0F9A	0x347F ;ks0108_font5x7+382
0x0F9B	0x3440 ;ks0108_font5x7+383
0x0F9C	0x3400 ;ks0108_font5x7+384
0x0F9D	0x347C ;ks0108_font5x7+385
0x0F9E	0x3404 ;ks0108_font5x7+386
0x0F9F	0x3418 ;ks0108_font5x7+387
0x0FA0	0x3404 ;ks0108_font5x7+388
0x0FA1	0x3478 ;ks0108_font5x7+389
0x0FA2	0x347C ;ks0108_font5x7+390
0x0FA3	0x3408 ;ks0108_font5x7+391
0x0FA4	0x3404 ;ks0108_font5x7+392
0x0FA5	0x3404 ;ks0108_font5x7+393
0x0FA6	0x3478 ;ks0108_font5x7+394
0x0FA7	0x3438 ;ks0108_font5x7+395
0x0FA8	0x3444 ;ks0108_font5x7+396
0x0FA9	0x3444 ;ks0108_font5x7+397
0x0FAA	0x3444 ;ks0108_font5x7+398
0x0FAB	0x3438 ;ks0108_font5x7+399
0x0FAC	0x347C ;ks0108_font5x7+400
0x0FAD	0x3414 ;ks0108_font5x7+401
0x0FAE	0x3414 ;ks0108_font5x7+402
0x0FAF	0x3414 ;ks0108_font5x7+403
0x0FB0	0x3408 ;ks0108_font5x7+404
0x0FB1	0x3408 ;ks0108_font5x7+405
0x0FB2	0x3414 ;ks0108_font5x7+406
0x0FB3	0x3414 ;ks0108_font5x7+407
0x0FB4	0x3418 ;ks0108_font5x7+408
0x0FB5	0x347C ;ks0108_font5x7+409
0x0FB6	0x347C ;ks0108_font5x7+410
0x0FB7	0x3408 ;ks0108_font5x7+411
0x0FB8	0x3404 ;ks0108_font5x7+412
0x0FB9	0x3404 ;ks0108_font5x7+413
0x0FBA	0x3408 ;ks0108_font5x7+414
0x0FBB	0x3448 ;ks0108_font5x7+415
0x0FBC	0x3454 ;ks0108_font5x7+416
0x0FBD	0x3454 ;ks0108_font5x7+417
0x0FBE	0x3454 ;ks0108_font5x7+418
0x0FBF	0x3420 ;ks0108_font5x7+419
0x0FC0	0x3404 ;ks0108_font5x7+420
0x0FC1	0x343F ;ks0108_font5x7+421
0x0FC2	0x3444 ;ks0108_font5x7+422
0x0FC3	0x3440 ;ks0108_font5x7+423
0x0FC4	0x3420 ;ks0108_font5x7+424
0x0FC5	0x343C ;ks0108_font5x7+425
0x0FC6	0x3440 ;ks0108_font5x7+426
0x0FC7	0x3440 ;ks0108_font5x7+427
0x0FC8	0x3420 ;ks0108_font5x7+428
0x0FC9	0x347C ;ks0108_font5x7+429
0x0FCA	0x341C ;ks0108_font5x7+430
0x0FCB	0x3420 ;ks0108_font5x7+431
0x0FCC	0x3440 ;ks0108_font5x7+432
0x0FCD	0x3420 ;ks0108_font5x7+433
0x0FCE	0x341C ;ks0108_font5x7+434
0x0FCF	0x343C ;ks0108_font5x7+435
0x0FD0	0x3440 ;ks0108_font5x7+436
0x0FD1	0x3430 ;ks0108_font5x7+437
0x0FD2	0x3440 ;ks0108_font5x7+438
0x0FD3	0x343C ;ks0108_font5x7+439
0x0FD4	0x3444 ;ks0108_font5x7+440
0x0FD5	0x3428 ;ks0108_font5x7+441
0x0FD6	0x3410 ;ks0108_font5x7+442
0x0FD7	0x3428 ;ks0108_font5x7+443
0x0FD8	0x3444 ;ks0108_font5x7+444
0x0FD9	0x340C ;ks0108_font5x7+445
0x0FDA	0x3450 ;ks0108_font5x7+446
0x0FDB	0x3450 ;ks0108_font5x7+447
0x0FDC	0x3450 ;ks0108_font5x7+448
0x0FDD	0x343C ;ks0108_font5x7+449
0x0FDE	0x3444 ;ks0108_font5x7+450
0x0FDF	0x3464 ;ks0108_font5x7+451
0x0FE0	0x3454 ;ks0108_font5x7+452
0x0FE1	0x344C ;ks0108_font5x7+453
0x0FE2	0x3444 ;ks0108_font5x7+454
0x0FE3	0x3400 ;ks0108_font5x7+455
0x0FE4	0x3408 ;ks0108_font5x7+456
0x0FE5	0x3436 ;ks0108_font5x7+457
0x0FE6	0x3441 ;ks0108_font5x7+458
0x0FE7	0x3400 ;ks0108_font5x7+459
0x0FE8	0x3400 ;ks0108_font5x7+460
0x0FE9	0x3400 ;ks0108_font5x7+461
0x0FEA	0x347F ;ks0108_font5x7+462
0x0FEB	0x3400 ;ks0108_font5x7+463
0x0FEC	0x3400 ;ks0108_font5x7+464
0x0FED	0x3400 ;ks0108_font5x7+465
0x0FEE	0x3441 ;ks0108_font5x7+466
0x0FEF	0x3436 ;ks0108_font5x7+467
0x0FF0	0x3408 ;ks0108_font5x7+468
0x0FF1	0x3400 ;ks0108_font5x7+469
0x0FF2	0x3408 ;ks0108_font5x7+470
0x0FF3	0x3408 ;ks0108_font5x7+471
0x0FF4	0x342A ;ks0108_font5x7+472
0x0FF5	0x341C ;ks0108_font5x7+473
0x0FF6	0x3408 ;ks0108_font5x7+474
0x0FF7	0x3408 ;ks0108_font5x7+475
0x0FF8	0x341C ;ks0108_font5x7+476
0x0FF9	0x342A ;ks0108_font5x7+477
0x0FFA	0x3408 ;ks0108_font5x7+478
0x0FFB	0x3408 ;ks0108_font5x7+479
; end of ks0108_font5x7
;ks0108.c,5 :: ks0108_title_bitmap
0x1404	0x3400 ;ks0108_title_bitmap+0
0x1405	0x3400 ;ks0108_title_bitmap+1
0x1406	0x3400 ;ks0108_title_bitmap+2
0x1407	0x3400 ;ks0108_title_bitmap+3
0x1408	0x3400 ;ks0108_title_bitmap+4
0x1409	0x3400 ;ks0108_title_bitmap+5
0x140A	0x3400 ;ks0108_title_bitmap+6
0x140B	0x3400 ;ks0108_title_bitmap+7
0x140C	0x3400 ;ks0108_title_bitmap+8
0x140D	0x3400 ;ks0108_title_bitmap+9
0x140E	0x3400 ;ks0108_title_bitmap+10
0x140F	0x3400 ;ks0108_title_bitmap+11
0x1410	0x3400 ;ks0108_title_bitmap+12
0x1411	0x3400 ;ks0108_title_bitmap+13
0x1412	0x3400 ;ks0108_title_bitmap+14
0x1413	0x3400 ;ks0108_title_bitmap+15
0x1414	0x3400 ;ks0108_title_bitmap+16
0x1415	0x3400 ;ks0108_title_bitmap+17
0x1416	0x3400 ;ks0108_title_bitmap+18
0x1417	0x3400 ;ks0108_title_bitmap+19
0x1418	0x3400 ;ks0108_title_bitmap+20
0x1419	0x3400 ;ks0108_title_bitmap+21
0x141A	0x3400 ;ks0108_title_bitmap+22
0x141B	0x3400 ;ks0108_title_bitmap+23
0x141C	0x3400 ;ks0108_title_bitmap+24
0x141D	0x3400 ;ks0108_title_bitmap+25
0x141E	0x3400 ;ks0108_title_bitmap+26
0x141F	0x3400 ;ks0108_title_bitmap+27
0x1420	0x3400 ;ks0108_title_bitmap+28
0x1421	0x3400 ;ks0108_title_bitmap+29
0x1422	0x3400 ;ks0108_title_bitmap+30
0x1423	0x3400 ;ks0108_title_bitmap+31
0x1424	0x3400 ;ks0108_title_bitmap+32
0x1425	0x3400 ;ks0108_title_bitmap+33
0x1426	0x3400 ;ks0108_title_bitmap+34
0x1427	0x3400 ;ks0108_title_bitmap+35
0x1428	0x3400 ;ks0108_title_bitmap+36
0x1429	0x3400 ;ks0108_title_bitmap+37
0x142A	0x3400 ;ks0108_title_bitmap+38
0x142B	0x3400 ;ks0108_title_bitmap+39
0x142C	0x3400 ;ks0108_title_bitmap+40
0x142D	0x3400 ;ks0108_title_bitmap+41
0x142E	0x3400 ;ks0108_title_bitmap+42
0x142F	0x3400 ;ks0108_title_bitmap+43
0x1430	0x3400 ;ks0108_title_bitmap+44
0x1431	0x3400 ;ks0108_title_bitmap+45
0x1432	0x3400 ;ks0108_title_bitmap+46
0x1433	0x3400 ;ks0108_title_bitmap+47
0x1434	0x3400 ;ks0108_title_bitmap+48
0x1435	0x3400 ;ks0108_title_bitmap+49
0x1436	0x3400 ;ks0108_title_bitmap+50
0x1437	0x3400 ;ks0108_title_bitmap+51
0x1438	0x3400 ;ks0108_title_bitmap+52
0x1439	0x3400 ;ks0108_title_bitmap+53
0x143A	0x3400 ;ks0108_title_bitmap+54
0x143B	0x3400 ;ks0108_title_bitmap+55
0x143C	0x3400 ;ks0108_title_bitmap+56
0x143D	0x347E ;ks0108_title_bitmap+57
0x143E	0x347E ;ks0108_title_bitmap+58
0x143F	0x347E ;ks0108_title_bitmap+59
0x1440	0x34FE ;ks0108_title_bitmap+60
0x1441	0x34FE ;ks0108_title_bitmap+61
0x1442	0x34FE ;ks0108_title_bitmap+62
0x1443	0x34FE ;ks0108_title_bitmap+63
0x1444	0x34FE ;ks0108_title_bitmap+64
0x1445	0x34FE ;ks0108_title_bitmap+65
0x1446	0x347E ;ks0108_title_bitmap+66
0x1447	0x347E ;ks0108_title_bitmap+67
0x1448	0x347E ;ks0108_title_bitmap+68
0x1449	0x347E ;ks0108_title_bitmap+69
0x144A	0x347E ;ks0108_title_bitmap+70
0x144B	0x347E ;ks0108_title_bitmap+71
0x144C	0x347E ;ks0108_title_bitmap+72
0x144D	0x347E ;ks0108_title_bitmap+73
0x144E	0x347E ;ks0108_title_bitmap+74
0x144F	0x347E ;ks0108_title_bitmap+75
0x1450	0x347E ;ks0108_title_bitmap+76
0x1451	0x347E ;ks0108_title_bitmap+77
0x1452	0x347E ;ks0108_title_bitmap+78
0x1453	0x347E ;ks0108_title_bitmap+79
0x1454	0x347E ;ks0108_title_bitmap+80
0x1455	0x347E ;ks0108_title_bitmap+81
0x1456	0x347E ;ks0108_title_bitmap+82
0x1457	0x3400 ;ks0108_title_bitmap+83
0x1458	0x3400 ;ks0108_title_bitmap+84
0x1459	0x3400 ;ks0108_title_bitmap+85
0x145A	0x3400 ;ks0108_title_bitmap+86
0x145B	0x3400 ;ks0108_title_bitmap+87
0x145C	0x3400 ;ks0108_title_bitmap+88
0x145D	0x3400 ;ks0108_title_bitmap+89
0x145E	0x3400 ;ks0108_title_bitmap+90
0x145F	0x3400 ;ks0108_title_bitmap+91
0x1460	0x3400 ;ks0108_title_bitmap+92
0x1461	0x3400 ;ks0108_title_bitmap+93
0x1462	0x3400 ;ks0108_title_bitmap+94
0x1463	0x3400 ;ks0108_title_bitmap+95
0x1464	0x3400 ;ks0108_title_bitmap+96
0x1465	0x3400 ;ks0108_title_bitmap+97
0x1466	0x3400 ;ks0108_title_bitmap+98
0x1467	0x3400 ;ks0108_title_bitmap+99
0x1468	0x3400 ;ks0108_title_bitmap+100
0x1469	0x3400 ;ks0108_title_bitmap+101
0x146A	0x3400 ;ks0108_title_bitmap+102
0x146B	0x3400 ;ks0108_title_bitmap+103
0x146C	0x3400 ;ks0108_title_bitmap+104
0x146D	0x3400 ;ks0108_title_bitmap+105
0x146E	0x3400 ;ks0108_title_bitmap+106
0x146F	0x3400 ;ks0108_title_bitmap+107
0x1470	0x3400 ;ks0108_title_bitmap+108
0x1471	0x3400 ;ks0108_title_bitmap+109
0x1472	0x3400 ;ks0108_title_bitmap+110
0x1473	0x3400 ;ks0108_title_bitmap+111
0x1474	0x3400 ;ks0108_title_bitmap+112
0x1475	0x3400 ;ks0108_title_bitmap+113
0x1476	0x3400 ;ks0108_title_bitmap+114
0x1477	0x3400 ;ks0108_title_bitmap+115
0x1478	0x3400 ;ks0108_title_bitmap+116
0x1479	0x3400 ;ks0108_title_bitmap+117
0x147A	0x3400 ;ks0108_title_bitmap+118
0x147B	0x3400 ;ks0108_title_bitmap+119
0x147C	0x3400 ;ks0108_title_bitmap+120
0x147D	0x3400 ;ks0108_title_bitmap+121
0x147E	0x3400 ;ks0108_title_bitmap+122
0x147F	0x3400 ;ks0108_title_bitmap+123
0x1480	0x3400 ;ks0108_title_bitmap+124
0x1481	0x3400 ;ks0108_title_bitmap+125
0x1482	0x3400 ;ks0108_title_bitmap+126
0x1483	0x3400 ;ks0108_title_bitmap+127
0x1484	0x3400 ;ks0108_title_bitmap+128
0x1485	0x3400 ;ks0108_title_bitmap+129
0x1486	0x3400 ;ks0108_title_bitmap+130
0x1487	0x3400 ;ks0108_title_bitmap+131
0x1488	0x3400 ;ks0108_title_bitmap+132
0x1489	0x3400 ;ks0108_title_bitmap+133
0x148A	0x3400 ;ks0108_title_bitmap+134
0x148B	0x3400 ;ks0108_title_bitmap+135
0x148C	0x3400 ;ks0108_title_bitmap+136
0x148D	0x3400 ;ks0108_title_bitmap+137
0x148E	0x3400 ;ks0108_title_bitmap+138
0x148F	0x3400 ;ks0108_title_bitmap+139
0x1490	0x3400 ;ks0108_title_bitmap+140
0x1491	0x3400 ;ks0108_title_bitmap+141
0x1492	0x3400 ;ks0108_title_bitmap+142
0x1493	0x3400 ;ks0108_title_bitmap+143
0x1494	0x3400 ;ks0108_title_bitmap+144
0x1495	0x3400 ;ks0108_title_bitmap+145
0x1496	0x3400 ;ks0108_title_bitmap+146
0x1497	0x3400 ;ks0108_title_bitmap+147
0x1498	0x3400 ;ks0108_title_bitmap+148
0x1499	0x3400 ;ks0108_title_bitmap+149
0x149A	0x3400 ;ks0108_title_bitmap+150
0x149B	0x34F0 ;ks0108_title_bitmap+151
0x149C	0x34F0 ;ks0108_title_bitmap+152
0x149D	0x34F0 ;ks0108_title_bitmap+153
0x149E	0x34F0 ;ks0108_title_bitmap+154
0x149F	0x34F0 ;ks0108_title_bitmap+155
0x14A0	0x34F0 ;ks0108_title_bitmap+156
0x14A1	0x34F0 ;ks0108_title_bitmap+157
0x14A2	0x34F0 ;ks0108_title_bitmap+158
0x14A3	0x34F0 ;ks0108_title_bitmap+159
0x14A4	0x34F0 ;ks0108_title_bitmap+160
0x14A5	0x34F0 ;ks0108_title_bitmap+161
0x14A6	0x34F0 ;ks0108_title_bitmap+162
0x14A7	0x34F0 ;ks0108_title_bitmap+163
0x14A8	0x3400 ;ks0108_title_bitmap+164
0x14A9	0x34F0 ;ks0108_title_bitmap+165
0x14AA	0x34F0 ;ks0108_title_bitmap+166
0x14AB	0x34F0 ;ks0108_title_bitmap+167
0x14AC	0x34F0 ;ks0108_title_bitmap+168
0x14AD	0x34F0 ;ks0108_title_bitmap+169
0x14AE	0x34F0 ;ks0108_title_bitmap+170
0x14AF	0x3400 ;ks0108_title_bitmap+171
0x14B0	0x3400 ;ks0108_title_bitmap+172
0x14B1	0x34F0 ;ks0108_title_bitmap+173
0x14B2	0x34F0 ;ks0108_title_bitmap+174
0x14B3	0x34F0 ;ks0108_title_bitmap+175
0x14B4	0x34F0 ;ks0108_title_bitmap+176
0x14B5	0x34F0 ;ks0108_title_bitmap+177
0x14B6	0x34F0 ;ks0108_title_bitmap+178
0x14B7	0x34F0 ;ks0108_title_bitmap+179
0x14B8	0x34F0 ;ks0108_title_bitmap+180
0x14B9	0x34F0 ;ks0108_title_bitmap+181
0x14BA	0x34F0 ;ks0108_title_bitmap+182
0x14BB	0x34F0 ;ks0108_title_bitmap+183
0x14BC	0x34F0 ;ks0108_title_bitmap+184
0x14BD	0x34F0 ;ks0108_title_bitmap+185
0x14BE	0x34F0 ;ks0108_title_bitmap+186
0x14BF	0x3400 ;ks0108_title_bitmap+187
0x14C0	0x34FF ;ks0108_title_bitmap+188
0x14C1	0x34FF ;ks0108_title_bitmap+189
0x14C2	0x34FF ;ks0108_title_bitmap+190
0x14C3	0x34FF ;ks0108_title_bitmap+191
0x14C4	0x34FF ;ks0108_title_bitmap+192
0x14C5	0x34FF ;ks0108_title_bitmap+193
0x14C6	0x3400 ;ks0108_title_bitmap+194
0x14C7	0x3400 ;ks0108_title_bitmap+195
0x14C8	0x3400 ;ks0108_title_bitmap+196
0x14C9	0x34F0 ;ks0108_title_bitmap+197
0x14CA	0x34F0 ;ks0108_title_bitmap+198
0x14CB	0x34F0 ;ks0108_title_bitmap+199
0x14CC	0x34F0 ;ks0108_title_bitmap+200
0x14CD	0x34F0 ;ks0108_title_bitmap+201
0x14CE	0x34F0 ;ks0108_title_bitmap+202
0x14CF	0x34F0 ;ks0108_title_bitmap+203
0x14D0	0x34F0 ;ks0108_title_bitmap+204
0x14D1	0x34F0 ;ks0108_title_bitmap+205
0x14D2	0x34F0 ;ks0108_title_bitmap+206
0x14D3	0x34F0 ;ks0108_title_bitmap+207
0x14D4	0x34F0 ;ks0108_title_bitmap+208
0x14D5	0x34F0 ;ks0108_title_bitmap+209
0x14D6	0x34E0 ;ks0108_title_bitmap+210
0x14D7	0x3400 ;ks0108_title_bitmap+211
0x14D8	0x3400 ;ks0108_title_bitmap+212
0x14D9	0x34F0 ;ks0108_title_bitmap+213
0x14DA	0x34F0 ;ks0108_title_bitmap+214
0x14DB	0x34F0 ;ks0108_title_bitmap+215
0x14DC	0x34F0 ;ks0108_title_bitmap+216
0x14DD	0x34F0 ;ks0108_title_bitmap+217
0x14DE	0x34F0 ;ks0108_title_bitmap+218
0x14DF	0x3400 ;ks0108_title_bitmap+219
0x14E0	0x3400 ;ks0108_title_bitmap+220
0x14E1	0x34F0 ;ks0108_title_bitmap+221
0x14E2	0x34F0 ;ks0108_title_bitmap+222
0x14E3	0x34F0 ;ks0108_title_bitmap+223
0x14E4	0x34F0 ;ks0108_title_bitmap+224
0x14E5	0x34F0 ;ks0108_title_bitmap+225
0x14E6	0x34F0 ;ks0108_title_bitmap+226
0x14E7	0x34F0 ;ks0108_title_bitmap+227
0x14E8	0x34F0 ;ks0108_title_bitmap+228
0x14E9	0x34F0 ;ks0108_title_bitmap+229
0x14EA	0x34F0 ;ks0108_title_bitmap+230
0x14EB	0x34F0 ;ks0108_title_bitmap+231
0x14EC	0x34F0 ;ks0108_title_bitmap+232
0x14ED	0x34F0 ;ks0108_title_bitmap+233
0x14EE	0x34F0 ;ks0108_title_bitmap+234
0x14EF	0x3400 ;ks0108_title_bitmap+235
0x14F0	0x3400 ;ks0108_title_bitmap+236
0x14F1	0x3400 ;ks0108_title_bitmap+237
0x14F2	0x3400 ;ks0108_title_bitmap+238
0x14F3	0x3400 ;ks0108_title_bitmap+239
0x14F4	0x3400 ;ks0108_title_bitmap+240
0x14F5	0x3400 ;ks0108_title_bitmap+241
0x14F6	0x3400 ;ks0108_title_bitmap+242
0x14F7	0x3400 ;ks0108_title_bitmap+243
0x14F8	0x3400 ;ks0108_title_bitmap+244
0x14F9	0x3400 ;ks0108_title_bitmap+245
0x14FA	0x3400 ;ks0108_title_bitmap+246
0x14FB	0x3400 ;ks0108_title_bitmap+247
0x14FC	0x3400 ;ks0108_title_bitmap+248
0x14FD	0x3400 ;ks0108_title_bitmap+249
0x14FE	0x3400 ;ks0108_title_bitmap+250
0x14FF	0x3400 ;ks0108_title_bitmap+251
0x1500	0x3400 ;ks0108_title_bitmap+252
0x1501	0x3400 ;ks0108_title_bitmap+253
0x1502	0x3400 ;ks0108_title_bitmap+254
0x1503	0x3400 ;ks0108_title_bitmap+255
0x1504	0x3400 ;ks0108_title_bitmap+256
0x1505	0x3400 ;ks0108_title_bitmap+257
0x1506	0x3400 ;ks0108_title_bitmap+258
0x1507	0x3400 ;ks0108_title_bitmap+259
0x1508	0x3400 ;ks0108_title_bitmap+260
0x1509	0x3400 ;ks0108_title_bitmap+261
0x150A	0x3400 ;ks0108_title_bitmap+262
0x150B	0x3400 ;ks0108_title_bitmap+263
0x150C	0x3400 ;ks0108_title_bitmap+264
0x150D	0x3400 ;ks0108_title_bitmap+265
0x150E	0x3400 ;ks0108_title_bitmap+266
0x150F	0x3400 ;ks0108_title_bitmap+267
0x1510	0x3400 ;ks0108_title_bitmap+268
0x1511	0x3400 ;ks0108_title_bitmap+269
0x1512	0x3400 ;ks0108_title_bitmap+270
0x1513	0x3400 ;ks0108_title_bitmap+271
0x1514	0x3400 ;ks0108_title_bitmap+272
0x1515	0x3400 ;ks0108_title_bitmap+273
0x1516	0x3400 ;ks0108_title_bitmap+274
0x1517	0x3400 ;ks0108_title_bitmap+275
0x1518	0x3400 ;ks0108_title_bitmap+276
0x1519	0x3400 ;ks0108_title_bitmap+277
0x151A	0x3400 ;ks0108_title_bitmap+278
0x151B	0x34FF ;ks0108_title_bitmap+279
0x151C	0x34FF ;ks0108_title_bitmap+280
0x151D	0x34FF ;ks0108_title_bitmap+281
0x151E	0x34FF ;ks0108_title_bitmap+282
0x151F	0x34FF ;ks0108_title_bitmap+283
0x1520	0x34FF ;ks0108_title_bitmap+284
0x1521	0x3403 ;ks0108_title_bitmap+285
0x1522	0x3403 ;ks0108_title_bitmap+286
0x1523	0x3403 ;ks0108_title_bitmap+287
0x1524	0x3403 ;ks0108_title_bitmap+288
0x1525	0x34FF ;ks0108_title_bitmap+289
0x1526	0x34FF ;ks0108_title_bitmap+290
0x1527	0x34FF ;ks0108_title_bitmap+291
0x1528	0x3400 ;ks0108_title_bitmap+292
0x1529	0x34FF ;ks0108_title_bitmap+293
0x152A	0x34FF ;ks0108_title_bitmap+294
0x152B	0x34FF ;ks0108_title_bitmap+295
0x152C	0x34FF ;ks0108_title_bitmap+296
0x152D	0x34FF ;ks0108_title_bitmap+297
0x152E	0x34FF ;ks0108_title_bitmap+298
0x152F	0x3400 ;ks0108_title_bitmap+299
0x1530	0x3400 ;ks0108_title_bitmap+300
0x1531	0x34FF ;ks0108_title_bitmap+301
0x1532	0x34FF ;ks0108_title_bitmap+302
0x1533	0x34FF ;ks0108_title_bitmap+303
0x1534	0x34FF ;ks0108_title_bitmap+304
0x1535	0x34FF ;ks0108_title_bitmap+305
0x1536	0x34FF ;ks0108_title_bitmap+306
0x1537	0x3403 ;ks0108_title_bitmap+307
0x1538	0x3403 ;ks0108_title_bitmap+308
0x1539	0x3403 ;ks0108_title_bitmap+309
0x153A	0x3403 ;ks0108_title_bitmap+310
0x153B	0x3403 ;ks0108_title_bitmap+311
0x153C	0x3403 ;ks0108_title_bitmap+312
0x153D	0x3403 ;ks0108_title_bitmap+313
0x153E	0x3403 ;ks0108_title_bitmap+314
0x153F	0x3400 ;ks0108_title_bitmap+315
0x1540	0x34FF ;ks0108_title_bitmap+316
0x1541	0x34FF ;ks0108_title_bitmap+317
0x1542	0x34FF ;ks0108_title_bitmap+318
0x1543	0x34FF ;ks0108_title_bitmap+319
0x1544	0x34FF ;ks0108_title_bitmap+320
0x1545	0x34FF ;ks0108_title_bitmap+321
0x1546	0x3400 ;ks0108_title_bitmap+322
0x1547	0x3400 ;ks0108_title_bitmap+323
0x1548	0x3400 ;ks0108_title_bitmap+324
0x1549	0x34FF ;ks0108_title_bitmap+325
0x154A	0x34FF ;ks0108_title_bitmap+326
0x154B	0x34FF ;ks0108_title_bitmap+327
0x154C	0x34FF ;ks0108_title_bitmap+328
0x154D	0x34FF ;ks0108_title_bitmap+329
0x154E	0x34FF ;ks0108_title_bitmap+330
0x154F	0x3403 ;ks0108_title_bitmap+331
0x1550	0x3403 ;ks0108_title_bitmap+332
0x1551	0x3403 ;ks0108_title_bitmap+333
0x1552	0x3403 ;ks0108_title_bitmap+334
0x1553	0x3403 ;ks0108_title_bitmap+335
0x1554	0x34FF ;ks0108_title_bitmap+336
0x1555	0x34FF ;ks0108_title_bitmap+337
0x1556	0x34FF ;ks0108_title_bitmap+338
0x1557	0x3400 ;ks0108_title_bitmap+339
0x1558	0x3400 ;ks0108_title_bitmap+340
0x1559	0x34FF ;ks0108_title_bitmap+341
0x155A	0x34FF ;ks0108_title_bitmap+342
0x155B	0x34FF ;ks0108_title_bitmap+343
0x155C	0x34FF ;ks0108_title_bitmap+344
0x155D	0x34FF ;ks0108_title_bitmap+345
0x155E	0x34FF ;ks0108_title_bitmap+346
0x155F	0x3400 ;ks0108_title_bitmap+347
0x1560	0x3400 ;ks0108_title_bitmap+348
0x1561	0x34FF ;ks0108_title_bitmap+349
0x1562	0x34FF ;ks0108_title_bitmap+350
0x1563	0x34FF ;ks0108_title_bitmap+351
0x1564	0x34FF ;ks0108_title_bitmap+352
0x1565	0x34FF ;ks0108_title_bitmap+353
0x1566	0x34FF ;ks0108_title_bitmap+354
0x1567	0x3403 ;ks0108_title_bitmap+355
0x1568	0x3403 ;ks0108_title_bitmap+356
0x1569	0x3403 ;ks0108_title_bitmap+357
0x156A	0x3403 ;ks0108_title_bitmap+358
0x156B	0x3403 ;ks0108_title_bitmap+359
0x156C	0x3403 ;ks0108_title_bitmap+360
0x156D	0x3403 ;ks0108_title_bitmap+361
0x156E	0x3403 ;ks0108_title_bitmap+362
0x156F	0x3400 ;ks0108_title_bitmap+363
0x1570	0x3400 ;ks0108_title_bitmap+364
0x1571	0x3400 ;ks0108_title_bitmap+365
0x1572	0x3400 ;ks0108_title_bitmap+366
0x1573	0x3400 ;ks0108_title_bitmap+367
0x1574	0x3400 ;ks0108_title_bitmap+368
0x1575	0x3400 ;ks0108_title_bitmap+369
0x1576	0x3400 ;ks0108_title_bitmap+370
0x1577	0x3400 ;ks0108_title_bitmap+371
0x1578	0x3400 ;ks0108_title_bitmap+372
0x1579	0x3400 ;ks0108_title_bitmap+373
0x157A	0x3400 ;ks0108_title_bitmap+374
0x157B	0x3400 ;ks0108_title_bitmap+375
0x157C	0x3400 ;ks0108_title_bitmap+376
0x157D	0x3400 ;ks0108_title_bitmap+377
0x157E	0x3400 ;ks0108_title_bitmap+378
0x157F	0x3400 ;ks0108_title_bitmap+379
0x1580	0x3400 ;ks0108_title_bitmap+380
0x1581	0x3400 ;ks0108_title_bitmap+381
0x1582	0x3400 ;ks0108_title_bitmap+382
0x1583	0x3400 ;ks0108_title_bitmap+383
0x1584	0x3400 ;ks0108_title_bitmap+384
0x1585	0x3400 ;ks0108_title_bitmap+385
0x1586	0x3400 ;ks0108_title_bitmap+386
0x1587	0x3400 ;ks0108_title_bitmap+387
0x1588	0x3400 ;ks0108_title_bitmap+388
0x1589	0x3400 ;ks0108_title_bitmap+389
0x158A	0x3400 ;ks0108_title_bitmap+390
0x158B	0x3400 ;ks0108_title_bitmap+391
0x158C	0x3400 ;ks0108_title_bitmap+392
0x158D	0x3400 ;ks0108_title_bitmap+393
0x158E	0x3400 ;ks0108_title_bitmap+394
0x158F	0x3400 ;ks0108_title_bitmap+395
0x1590	0x3400 ;ks0108_title_bitmap+396
0x1591	0x3400 ;ks0108_title_bitmap+397
0x1592	0x3400 ;ks0108_title_bitmap+398
0x1593	0x3400 ;ks0108_title_bitmap+399
0x1594	0x3400 ;ks0108_title_bitmap+400
0x1595	0x3400 ;ks0108_title_bitmap+401
0x1596	0x3400 ;ks0108_title_bitmap+402
0x1597	0x3400 ;ks0108_title_bitmap+403
0x1598	0x3400 ;ks0108_title_bitmap+404
0x1599	0x3400 ;ks0108_title_bitmap+405
0x159A	0x3400 ;ks0108_title_bitmap+406
0x159B	0x34FF ;ks0108_title_bitmap+407
0x159C	0x34FF ;ks0108_title_bitmap+408
0x159D	0x34FF ;ks0108_title_bitmap+409
0x159E	0x34FF ;ks0108_title_bitmap+410
0x159F	0x34FF ;ks0108_title_bitmap+411
0x15A0	0x34FF ;ks0108_title_bitmap+412
0x15A1	0x34E0 ;ks0108_title_bitmap+413
0x15A2	0x34E0 ;ks0108_title_bitmap+414
0x15A3	0x34E0 ;ks0108_title_bitmap+415
0x15A4	0x34E0 ;ks0108_title_bitmap+416
0x15A5	0x34FF ;ks0108_title_bitmap+417
0x15A6	0x34FF ;ks0108_title_bitmap+418
0x15A7	0x34FF ;ks0108_title_bitmap+419
0x15A8	0x3400 ;ks0108_title_bitmap+420
0x15A9	0x34FF ;ks0108_title_bitmap+421
0x15AA	0x34FF ;ks0108_title_bitmap+422
0x15AB	0x34FF ;ks0108_title_bitmap+423
0x15AC	0x34FF ;ks0108_title_bitmap+424
0x15AD	0x34FF ;ks0108_title_bitmap+425
0x15AE	0x34FF ;ks0108_title_bitmap+426
0x15AF	0x3400 ;ks0108_title_bitmap+427
0x15B0	0x3400 ;ks0108_title_bitmap+428
0x15B1	0x34FF ;ks0108_title_bitmap+429
0x15B2	0x34FF ;ks0108_title_bitmap+430
0x15B3	0x34FF ;ks0108_title_bitmap+431
0x15B4	0x34FF ;ks0108_title_bitmap+432
0x15B5	0x34FF ;ks0108_title_bitmap+433
0x15B6	0x34FF ;ks0108_title_bitmap+434
0x15B7	0x3400 ;ks0108_title_bitmap+435
0x15B8	0x3400 ;ks0108_title_bitmap+436
0x15B9	0x3400 ;ks0108_title_bitmap+437
0x15BA	0x3400 ;ks0108_title_bitmap+438
0x15BB	0x3400 ;ks0108_title_bitmap+439
0x15BC	0x3400 ;ks0108_title_bitmap+440
0x15BD	0x3400 ;ks0108_title_bitmap+441
0x15BE	0x3400 ;ks0108_title_bitmap+442
0x15BF	0x3400 ;ks0108_title_bitmap+443
0x15C0	0x34FF ;ks0108_title_bitmap+444
0x15C1	0x34FF ;ks0108_title_bitmap+445
0x15C2	0x34FF ;ks0108_title_bitmap+446
0x15C3	0x34FF ;ks0108_title_bitmap+447
0x15C4	0x34FF ;ks0108_title_bitmap+448
0x15C5	0x34FF ;ks0108_title_bitmap+449
0x15C6	0x3400 ;ks0108_title_bitmap+450
0x15C7	0x3400 ;ks0108_title_bitmap+451
0x15C8	0x3400 ;ks0108_title_bitmap+452
0x15C9	0x34FF ;ks0108_title_bitmap+453
0x15CA	0x34FF ;ks0108_title_bitmap+454
0x15CB	0x34FF ;ks0108_title_bitmap+455
0x15CC	0x34FF ;ks0108_title_bitmap+456
0x15CD	0x34FF ;ks0108_title_bitmap+457
0x15CE	0x34FF ;ks0108_title_bitmap+458
0x15CF	0x34E0 ;ks0108_title_bitmap+459
0x15D0	0x34E0 ;ks0108_title_bitmap+460
0x15D1	0x34E0 ;ks0108_title_bitmap+461
0x15D2	0x34E0 ;ks0108_title_bitmap+462
0x15D3	0x34E0 ;ks0108_title_bitmap+463
0x15D4	0x34FF ;ks0108_title_bitmap+464
0x15D5	0x34FF ;ks0108_title_bitmap+465
0x15D6	0x34FF ;ks0108_title_bitmap+466
0x15D7	0x3400 ;ks0108_title_bitmap+467
0x15D8	0x3400 ;ks0108_title_bitmap+468
0x15D9	0x34FF ;ks0108_title_bitmap+469
0x15DA	0x34FF ;ks0108_title_bitmap+470
0x15DB	0x34FF ;ks0108_title_bitmap+471
0x15DC	0x34FF ;ks0108_title_bitmap+472
0x15DD	0x34FF ;ks0108_title_bitmap+473
0x15DE	0x34FF ;ks0108_title_bitmap+474
0x15DF	0x3400 ;ks0108_title_bitmap+475
0x15E0	0x3400 ;ks0108_title_bitmap+476
0x15E1	0x347F ;ks0108_title_bitmap+477
0x15E2	0x34FF ;ks0108_title_bitmap+478
0x15E3	0x34FF ;ks0108_title_bitmap+479
0x15E4	0x34FF ;ks0108_title_bitmap+480
0x15E5	0x34FF ;ks0108_title_bitmap+481
0x15E6	0x34FF ;ks0108_title_bitmap+482
0x15E7	0x34E0 ;ks0108_title_bitmap+483
0x15E8	0x34E0 ;ks0108_title_bitmap+484
0x15E9	0x34E0 ;ks0108_title_bitmap+485
0x15EA	0x34E0 ;ks0108_title_bitmap+486
0x15EB	0x34E0 ;ks0108_title_bitmap+487
0x15EC	0x34E0 ;ks0108_title_bitmap+488
0x15ED	0x34E0 ;ks0108_title_bitmap+489
0x15EE	0x34C0 ;ks0108_title_bitmap+490
0x15EF	0x3400 ;ks0108_title_bitmap+491
0x15F0	0x3400 ;ks0108_title_bitmap+492
0x15F1	0x3400 ;ks0108_title_bitmap+493
0x15F2	0x3400 ;ks0108_title_bitmap+494
0x15F3	0x3400 ;ks0108_title_bitmap+495
0x15F4	0x3400 ;ks0108_title_bitmap+496
0x15F5	0x3400 ;ks0108_title_bitmap+497
0x15F6	0x3400 ;ks0108_title_bitmap+498
0x15F7	0x3400 ;ks0108_title_bitmap+499
0x15F8	0x3400 ;ks0108_title_bitmap+500
0x15F9	0x3400 ;ks0108_title_bitmap+501
0x15FA	0x3400 ;ks0108_title_bitmap+502
0x15FB	0x3400 ;ks0108_title_bitmap+503
0x15FC	0x3400 ;ks0108_title_bitmap+504
0x15FD	0x3400 ;ks0108_title_bitmap+505
0x15FE	0x3400 ;ks0108_title_bitmap+506
0x15FF	0x3400 ;ks0108_title_bitmap+507
0x1600	0x3400 ;ks0108_title_bitmap+508
0x1601	0x3400 ;ks0108_title_bitmap+509
0x1602	0x3400 ;ks0108_title_bitmap+510
0x1603	0x3400 ;ks0108_title_bitmap+511
0x1604	0x3400 ;ks0108_title_bitmap+512
0x1605	0x3400 ;ks0108_title_bitmap+513
0x1606	0x3400 ;ks0108_title_bitmap+514
0x1607	0x3400 ;ks0108_title_bitmap+515
0x1608	0x3400 ;ks0108_title_bitmap+516
0x1609	0x3400 ;ks0108_title_bitmap+517
0x160A	0x3400 ;ks0108_title_bitmap+518
0x160B	0x3400 ;ks0108_title_bitmap+519
0x160C	0x3400 ;ks0108_title_bitmap+520
0x160D	0x3400 ;ks0108_title_bitmap+521
0x160E	0x3400 ;ks0108_title_bitmap+522
0x160F	0x3400 ;ks0108_title_bitmap+523
0x1610	0x3400 ;ks0108_title_bitmap+524
0x1611	0x3400 ;ks0108_title_bitmap+525
0x1612	0x3400 ;ks0108_title_bitmap+526
0x1613	0x3400 ;ks0108_title_bitmap+527
0x1614	0x3400 ;ks0108_title_bitmap+528
0x1615	0x3400 ;ks0108_title_bitmap+529
0x1616	0x3400 ;ks0108_title_bitmap+530
0x1617	0x3400 ;ks0108_title_bitmap+531
0x1618	0x3400 ;ks0108_title_bitmap+532
0x1619	0x3400 ;ks0108_title_bitmap+533
0x161A	0x3400 ;ks0108_title_bitmap+534
0x161B	0x34FF ;ks0108_title_bitmap+535
0x161C	0x34FF ;ks0108_title_bitmap+536
0x161D	0x34FF ;ks0108_title_bitmap+537
0x161E	0x34FF ;ks0108_title_bitmap+538
0x161F	0x34FF ;ks0108_title_bitmap+539
0x1620	0x34FF ;ks0108_title_bitmap+540
0x1621	0x3400 ;ks0108_title_bitmap+541
0x1622	0x3400 ;ks0108_title_bitmap+542
0x1623	0x3400 ;ks0108_title_bitmap+543
0x1624	0x3400 ;ks0108_title_bitmap+544
0x1625	0x3400 ;ks0108_title_bitmap+545
0x1626	0x3400 ;ks0108_title_bitmap+546
0x1627	0x3400 ;ks0108_title_bitmap+547
0x1628	0x3400 ;ks0108_title_bitmap+548
0x1629	0x347F ;ks0108_title_bitmap+549
0x162A	0x347F ;ks0108_title_bitmap+550
0x162B	0x347F ;ks0108_title_bitmap+551
0x162C	0x347F ;ks0108_title_bitmap+552
0x162D	0x347F ;ks0108_title_bitmap+553
0x162E	0x347F ;ks0108_title_bitmap+554
0x162F	0x3400 ;ks0108_title_bitmap+555
0x1630	0x3400 ;ks0108_title_bitmap+556
0x1631	0x347F ;ks0108_title_bitmap+557
0x1632	0x347F ;ks0108_title_bitmap+558
0x1633	0x347F ;ks0108_title_bitmap+559
0x1634	0x347F ;ks0108_title_bitmap+560
0x1635	0x347F ;ks0108_title_bitmap+561
0x1636	0x347F ;ks0108_title_bitmap+562
0x1637	0x3470 ;ks0108_title_bitmap+563
0x1638	0x3470 ;ks0108_title_bitmap+564
0x1639	0x3470 ;ks0108_title_bitmap+565
0x163A	0x3470 ;ks0108_title_bitmap+566
0x163B	0x3470 ;ks0108_title_bitmap+567
0x163C	0x3470 ;ks0108_title_bitmap+568
0x163D	0x3470 ;ks0108_title_bitmap+569
0x163E	0x3470 ;ks0108_title_bitmap+570
0x163F	0x3400 ;ks0108_title_bitmap+571
0x1640	0x347F ;ks0108_title_bitmap+572
0x1641	0x347F ;ks0108_title_bitmap+573
0x1642	0x347F ;ks0108_title_bitmap+574
0x1643	0x347F ;ks0108_title_bitmap+575
0x1644	0x347F ;ks0108_title_bitmap+576
0x1645	0x347F ;ks0108_title_bitmap+577
0x1646	0x3400 ;ks0108_title_bitmap+578
0x1647	0x3400 ;ks0108_title_bitmap+579
0x1648	0x3400 ;ks0108_title_bitmap+580
0x1649	0x347F ;ks0108_title_bitmap+581
0x164A	0x347F ;ks0108_title_bitmap+582
0x164B	0x347F ;ks0108_title_bitmap+583
0x164C	0x347F ;ks0108_title_bitmap+584
0x164D	0x347F ;ks0108_title_bitmap+585
0x164E	0x347F ;ks0108_title_bitmap+586
0x164F	0x3401 ;ks0108_title_bitmap+587
0x1650	0x3407 ;ks0108_title_bitmap+588
0x1651	0x341F ;ks0108_title_bitmap+589
0x1652	0x347F ;ks0108_title_bitmap+590
0x1653	0x347F ;ks0108_title_bitmap+591
0x1654	0x347C ;ks0108_title_bitmap+592
0x1655	0x3460 ;ks0108_title_bitmap+593
0x1656	0x3400 ;ks0108_title_bitmap+594
0x1657	0x3400 ;ks0108_title_bitmap+595
0x1658	0x3400 ;ks0108_title_bitmap+596
0x1659	0x347F ;ks0108_title_bitmap+597
0x165A	0x347F ;ks0108_title_bitmap+598
0x165B	0x347F ;ks0108_title_bitmap+599
0x165C	0x347F ;ks0108_title_bitmap+600
0x165D	0x347F ;ks0108_title_bitmap+601
0x165E	0x347F ;ks0108_title_bitmap+602
0x165F	0x3400 ;ks0108_title_bitmap+603
0x1660	0x3400 ;ks0108_title_bitmap+604
0x1661	0x3470 ;ks0108_title_bitmap+605
0x1662	0x3470 ;ks0108_title_bitmap+606
0x1663	0x3470 ;ks0108_title_bitmap+607
0x1664	0x3470 ;ks0108_title_bitmap+608
0x1665	0x3470 ;ks0108_title_bitmap+609
0x1666	0x3470 ;ks0108_title_bitmap+610
0x1667	0x3470 ;ks0108_title_bitmap+611
0x1668	0x3470 ;ks0108_title_bitmap+612
0x1669	0x3470 ;ks0108_title_bitmap+613
0x166A	0x3470 ;ks0108_title_bitmap+614
0x166B	0x3470 ;ks0108_title_bitmap+615
0x166C	0x347F ;ks0108_title_bitmap+616
0x166D	0x347F ;ks0108_title_bitmap+617
0x166E	0x347F ;ks0108_title_bitmap+618
0x166F	0x3400 ;ks0108_title_bitmap+619
0x1670	0x3400 ;ks0108_title_bitmap+620
0x1671	0x3400 ;ks0108_title_bitmap+621
0x1672	0x3400 ;ks0108_title_bitmap+622
0x1673	0x3400 ;ks0108_title_bitmap+623
0x1674	0x3400 ;ks0108_title_bitmap+624
0x1675	0x3400 ;ks0108_title_bitmap+625
0x1676	0x3400 ;ks0108_title_bitmap+626
0x1677	0x3400 ;ks0108_title_bitmap+627
0x1678	0x3400 ;ks0108_title_bitmap+628
0x1679	0x3400 ;ks0108_title_bitmap+629
0x167A	0x3400 ;ks0108_title_bitmap+630
0x167B	0x3400 ;ks0108_title_bitmap+631
0x167C	0x3400 ;ks0108_title_bitmap+632
0x167D	0x3400 ;ks0108_title_bitmap+633
0x167E	0x3400 ;ks0108_title_bitmap+634
0x167F	0x3400 ;ks0108_title_bitmap+635
0x1680	0x3400 ;ks0108_title_bitmap+636
0x1681	0x3400 ;ks0108_title_bitmap+637
0x1682	0x3400 ;ks0108_title_bitmap+638
0x1683	0x3400 ;ks0108_title_bitmap+639
0x1684	0x3400 ;ks0108_title_bitmap+640
0x1685	0x3400 ;ks0108_title_bitmap+641
0x1686	0x3400 ;ks0108_title_bitmap+642
0x1687	0x3400 ;ks0108_title_bitmap+643
0x1688	0x3400 ;ks0108_title_bitmap+644
0x1689	0x3400 ;ks0108_title_bitmap+645
0x168A	0x3400 ;ks0108_title_bitmap+646
0x168B	0x3420 ;ks0108_title_bitmap+647
0x168C	0x3430 ;ks0108_title_bitmap+648
0x168D	0x3438 ;ks0108_title_bitmap+649
0x168E	0x3438 ;ks0108_title_bitmap+650
0x168F	0x3438 ;ks0108_title_bitmap+651
0x1690	0x3438 ;ks0108_title_bitmap+652
0x1691	0x3438 ;ks0108_title_bitmap+653
0x1692	0x3438 ;ks0108_title_bitmap+654
0x1693	0x3438 ;ks0108_title_bitmap+655
0x1694	0x3438 ;ks0108_title_bitmap+656
0x1695	0x3438 ;ks0108_title_bitmap+657
0x1696	0x3438 ;ks0108_title_bitmap+658
0x1697	0x3438 ;ks0108_title_bitmap+659
0x1698	0x3438 ;ks0108_title_bitmap+660
0x1699	0x3438 ;ks0108_title_bitmap+661
0x169A	0x3438 ;ks0108_title_bitmap+662
0x169B	0x343F ;ks0108_title_bitmap+663
0x169C	0x343F ;ks0108_title_bitmap+664
0x169D	0x343F ;ks0108_title_bitmap+665
0x169E	0x343F ;ks0108_title_bitmap+666
0x169F	0x343F ;ks0108_title_bitmap+667
0x16A0	0x343F ;ks0108_title_bitmap+668
0x16A1	0x3400 ;ks0108_title_bitmap+669
0x16A2	0x3400 ;ks0108_title_bitmap+670
0x16A3	0x3400 ;ks0108_title_bitmap+671
0x16A4	0x3400 ;ks0108_title_bitmap+672
0x16A5	0x3400 ;ks0108_title_bitmap+673
0x16A6	0x3400 ;ks0108_title_bitmap+674
0x16A7	0x3400 ;ks0108_title_bitmap+675
0x16A8	0x3400 ;ks0108_title_bitmap+676
0x16A9	0x3438 ;ks0108_title_bitmap+677
0x16AA	0x3438 ;ks0108_title_bitmap+678
0x16AB	0x3438 ;ks0108_title_bitmap+679
0x16AC	0x3438 ;ks0108_title_bitmap+680
0x16AD	0x3438 ;ks0108_title_bitmap+681
0x16AE	0x3438 ;ks0108_title_bitmap+682
0x16AF	0x3438 ;ks0108_title_bitmap+683
0x16B0	0x3438 ;ks0108_title_bitmap+684
0x16B1	0x3438 ;ks0108_title_bitmap+685
0x16B2	0x3438 ;ks0108_title_bitmap+686
0x16B3	0x3438 ;ks0108_title_bitmap+687
0x16B4	0x3438 ;ks0108_title_bitmap+688
0x16B5	0x3438 ;ks0108_title_bitmap+689
0x16B6	0x3438 ;ks0108_title_bitmap+690
0x16B7	0x3438 ;ks0108_title_bitmap+691
0x16B8	0x3438 ;ks0108_title_bitmap+692
0x16B9	0x3438 ;ks0108_title_bitmap+693
0x16BA	0x3438 ;ks0108_title_bitmap+694
0x16BB	0x3438 ;ks0108_title_bitmap+695
0x16BC	0x3438 ;ks0108_title_bitmap+696
0x16BD	0x3438 ;ks0108_title_bitmap+697
0x16BE	0x3438 ;ks0108_title_bitmap+698
0x16BF	0x3438 ;ks0108_title_bitmap+699
0x16C0	0x3438 ;ks0108_title_bitmap+700
0x16C1	0x3438 ;ks0108_title_bitmap+701
0x16C2	0x3438 ;ks0108_title_bitmap+702
0x16C3	0x3438 ;ks0108_title_bitmap+703
0x16C4	0x3438 ;ks0108_title_bitmap+704
0x16C5	0x3438 ;ks0108_title_bitmap+705
0x16C6	0x3438 ;ks0108_title_bitmap+706
0x16C7	0x3438 ;ks0108_title_bitmap+707
0x16C8	0x3438 ;ks0108_title_bitmap+708
0x16C9	0x3438 ;ks0108_title_bitmap+709
0x16CA	0x3438 ;ks0108_title_bitmap+710
0x16CB	0x3438 ;ks0108_title_bitmap+711
0x16CC	0x3438 ;ks0108_title_bitmap+712
0x16CD	0x3438 ;ks0108_title_bitmap+713
0x16CE	0x3438 ;ks0108_title_bitmap+714
0x16CF	0x3438 ;ks0108_title_bitmap+715
0x16D0	0x3438 ;ks0108_title_bitmap+716
0x16D1	0x3438 ;ks0108_title_bitmap+717
0x16D2	0x3438 ;ks0108_title_bitmap+718
0x16D3	0x3438 ;ks0108_title_bitmap+719
0x16D4	0x3438 ;ks0108_title_bitmap+720
0x16D5	0x3438 ;ks0108_title_bitmap+721
0x16D6	0x3438 ;ks0108_title_bitmap+722
0x16D7	0x3438 ;ks0108_title_bitmap+723
0x16D8	0x3438 ;ks0108_title_bitmap+724
0x16D9	0x3438 ;ks0108_title_bitmap+725
0x16DA	0x3438 ;ks0108_title_bitmap+726
0x16DB	0x3438 ;ks0108_title_bitmap+727
0x16DC	0x3438 ;ks0108_title_bitmap+728
0x16DD	0x3438 ;ks0108_title_bitmap+729
0x16DE	0x3438 ;ks0108_title_bitmap+730
0x16DF	0x3438 ;ks0108_title_bitmap+731
0x16E0	0x3438 ;ks0108_title_bitmap+732
0x16E1	0x3438 ;ks0108_title_bitmap+733
0x16E2	0x3438 ;ks0108_title_bitmap+734
0x16E3	0x3438 ;ks0108_title_bitmap+735
0x16E4	0x3438 ;ks0108_title_bitmap+736
0x16E5	0x3438 ;ks0108_title_bitmap+737
0x16E6	0x3438 ;ks0108_title_bitmap+738
0x16E7	0x3438 ;ks0108_title_bitmap+739
0x16E8	0x3438 ;ks0108_title_bitmap+740
0x16E9	0x3438 ;ks0108_title_bitmap+741
0x16EA	0x3438 ;ks0108_title_bitmap+742
0x16EB	0x3438 ;ks0108_title_bitmap+743
0x16EC	0x3438 ;ks0108_title_bitmap+744
0x16ED	0x3438 ;ks0108_title_bitmap+745
0x16EE	0x3438 ;ks0108_title_bitmap+746
0x16EF	0x3438 ;ks0108_title_bitmap+747
0x16F0	0x3438 ;ks0108_title_bitmap+748
0x16F1	0x3438 ;ks0108_title_bitmap+749
0x16F2	0x3438 ;ks0108_title_bitmap+750
0x16F3	0x3438 ;ks0108_title_bitmap+751
0x16F4	0x3438 ;ks0108_title_bitmap+752
0x16F5	0x3438 ;ks0108_title_bitmap+753
0x16F6	0x3438 ;ks0108_title_bitmap+754
0x16F7	0x3438 ;ks0108_title_bitmap+755
0x16F8	0x3438 ;ks0108_title_bitmap+756
0x16F9	0x3438 ;ks0108_title_bitmap+757
0x16FA	0x3438 ;ks0108_title_bitmap+758
0x16FB	0x3438 ;ks0108_title_bitmap+759
0x16FC	0x3438 ;ks0108_title_bitmap+760
0x16FD	0x3430 ;ks0108_title_bitmap+761
0x16FE	0x3420 ;ks0108_title_bitmap+762
0x16FF	0x3400 ;ks0108_title_bitmap+763
0x1700	0x3400 ;ks0108_title_bitmap+764
0x1701	0x3400 ;ks0108_title_bitmap+765
0x1702	0x3400 ;ks0108_title_bitmap+766
0x1703	0x3400 ;ks0108_title_bitmap+767
; end of ks0108_title_bitmap
;mukke.c,41 :: _song
0x1704	0x3409 ;_song+0
0x1705	0x3404 ;_song+1
0x1706	0x3404 ;_song+2
0x1707	0x3402 ;_song+3
0x1708	0x3405 ;_song+4
0x1709	0x3402 ;_song+5
0x170A	0x3407 ;_song+6
0x170B	0x3404 ;_song+7
0x170C	0x3405 ;_song+8
0x170D	0x3402 ;_song+9
0x170E	0x3404 ;_song+10
0x170F	0x3402 ;_song+11
0x1710	0x3402 ;_song+12
0x1711	0x3404 ;_song+13
0x1712	0x3402 ;_song+14
0x1713	0x3402 ;_song+15
0x1714	0x3405 ;_song+16
0x1715	0x3402 ;_song+17
0x1716	0x3409 ;_song+18
0x1717	0x3404 ;_song+19
0x1718	0x3407 ;_song+20
0x1719	0x3402 ;_song+21
0x171A	0x3405 ;_song+22
0x171B	0x3402 ;_song+23
0x171C	0x3404 ;_song+24
0x171D	0x3406 ;_song+25
0x171E	0x3405 ;_song+26
0x171F	0x3402 ;_song+27
0x1720	0x3407 ;_song+28
0x1721	0x3404 ;_song+29
0x1722	0x3409 ;_song+30
0x1723	0x3402 ;_song+31
0x1724	0x3405 ;_song+32
0x1725	0x3402 ;_song+33
0x1726	0x3405 ;_song+34
0x1727	0x3404 ;_song+35
0x1728	0x3402 ;_song+36
0x1729	0x3404 ;_song+37
0x172A	0x3402 ;_song+38
0x172B	0x3406 ;_song+39
0x172C	0x3402 ;_song+40
0x172D	0x3402 ;_song+41
0x172E	0x3407 ;_song+42
0x172F	0x3404 ;_song+43
0x1730	0x3402 ;_song+44
0x1731	0x3402 ;_song+45
0x1732	0x3407 ;_song+46
0x1733	0x3402 ;_song+47
0x1734	0x340E ;_song+48
0x1735	0x3404 ;_song+49
0x1736	0x340C ;_song+50
0x1737	0x3402 ;_song+51
0x1738	0x340A ;_song+52
0x1739	0x3402 ;_song+53
0x173A	0x3409 ;_song+54
0x173B	0x3404 ;_song+55
0x173C	0x3405 ;_song+56
0x173D	0x3404 ;_song+57
0x173E	0x3409 ;_song+58
0x173F	0x3404 ;_song+59
0x1740	0x340A ;_song+60
0x1741	0x3404 ;_song+61
0x1742	0x3410 ;_song+62
0x1743	0x3402 ;_song+63
0x1744	0x340E ;_song+64
0x1745	0x3402 ;_song+65
0x1746	0x3410 ;_song+66
0x1747	0x3402 ;_song+67
0x1748	0x340E ;_song+68
0x1749	0x3402 ;_song+69
0x174A	0x3410 ;_song+70
0x174B	0x3402 ;_song+71
0x174C	0x340E ;_song+72
0x174D	0x3402 ;_song+73
0x174E	0x3411 ;_song+74
0x174F	0x3402 ;_song+75
0x1750	0x3413 ;_song+76
0x1751	0x3402 ;_song+77
0x1752	0x3411 ;_song+78
0x1753	0x3402 ;_song+79
0x1754	0x3410 ;_song+80
0x1755	0x3402 ;_song+81
0x1756	0x3410 ;_song+82
0x1757	0x3404 ;_song+83
0x1758	0x340E ;_song+84
0x1759	0x3406 ;_song+85
0x175A	0x3404 ;_song+86
0x175B	0x3402 ;_song+87
0x175C	0x3404 ;_song+88
0x175D	0x3404 ;_song+89
0x175E	0x3404 ;_song+90
0x175F	0x3402 ;_song+91
0x1760	0x3405 ;_song+92
0x1761	0x3402 ;_song+93
0x1762	0x3407 ;_song+94
0x1763	0x3404 ;_song+95
0x1764	0x3407 ;_song+96
0x1765	0x3402 ;_song+97
0x1766	0x3409 ;_song+98
0x1767	0x3402 ;_song+99
0x1768	0x3405 ;_song+100
0x1769	0x3404 ;_song+101
0x176A	0x3402 ;_song+102
0x176B	0x3404 ;_song+103
0x176C	0x3402 ;_song+104
0x176D	0x3408 ;_song+105
0x176E	0x3409 ;_song+106
0x176F	0x3404 ;_song+107
0x1770	0x3409 ;_song+108
0x1771	0x3404 ;_song+109
0x1772	0x3405 ;_song+110
0x1773	0x3404 ;_song+111
0x1774	0x3409 ;_song+112
0x1775	0x3404 ;_song+113
0x1776	0x3407 ;_song+114
0x1777	0x3404 ;_song+115
0x1778	0x3409 ;_song+116
0x1779	0x3404 ;_song+117
0x177A	0x3404 ;_song+118
0x177B	0x3404 ;_song+119
0x177C	0x3409 ;_song+120
0x177D	0x3404 ;_song+121
0x177E	0x3402 ;_song+122
0x177F	0x3404 ;_song+123
0x1780	0x3405 ;_song+124
0x1781	0x3404 ;_song+125
0x1782	0x3409 ;_song+126
0x1783	0x3404 ;_song+127
0x1784	0x340D ;_song+128
0x1785	0x3404 ;_song+129
0x1786	0x3404 ;_song+130
0x1787	0x3408 ;_song+131
0x1788	0x340A ;_song+132
0x1789	0x3404 ;_song+133
0x178A	0x340E ;_song+134
0x178B	0x3404 ;_song+135
0x178C	0x3407 ;_song+136
0x178D	0x3404 ;_song+137
0x178E	0x3411 ;_song+138
0x178F	0x3404 ;_song+139
0x1790	0x3409 ;_song+140
0x1791	0x3404 ;_song+141
0x1792	0x340A ;_song+142
0x1793	0x3404 ;_song+143
0x1794	0x3405 ;_song+144
0x1795	0x3404 ;_song+145
0x1796	0x3404 ;_song+146
0x1797	0x3404 ;_song+147
0x1798	0x3409 ;_song+148
0x1799	0x3404 ;_song+149
0x179A	0x3407 ;_song+150
0x179B	0x3404 ;_song+151
0x179C	0x3405 ;_song+152
0x179D	0x3404 ;_song+153
0x179E	0x3404 ;_song+154
0x179F	0x3404 ;_song+155
0x17A0	0x3402 ;_song+156
0x17A1	0x3410 ;_song+157
; end of _song
;mukke.c,7 :: _notes
0x17A2	0x34EE ;_notes+0
0x17A3	0x342C ;_notes+1
0x17A4	0x34E1 ;_notes+2
0x17A5	0x343C ;_notes+3
0x17A6	0x34D4 ;_notes+4
0x17A7	0x342C ;_notes+5
0x17A8	0x34C8 ;_notes+6
0x17A9	0x342C ;_notes+7
0x17AA	0x34BD ;_notes+8
0x17AB	0x343C ;_notes+9
0x17AC	0x34B2 ;_notes+10
0x17AD	0x342C ;_notes+11
0x17AE	0x34A8 ;_notes+12
0x17AF	0x342C ;_notes+13
0x17B0	0x349E ;_notes+14
0x17B1	0x343C ;_notes+15
0x17B2	0x3496 ;_notes+16
0x17B3	0x341C ;_notes+17
0x17B4	0x348D ;_notes+18
0x17B5	0x340C ;_notes+19
0x17B6	0x3485 ;_notes+20
0x17B7	0x340C ;_notes+21
0x17B8	0x347E ;_notes+22
0x17B9	0x341C ;_notes+23
0x17BA	0x3476 ;_notes+24
0x17BB	0x343C ;_notes+25
0x17BC	0x3470 ;_notes+26
0x17BD	0x342C ;_notes+27
0x17BE	0x3469 ;_notes+28
0x17BF	0x341C ;_notes+29
0x17C0	0x3463 ;_notes+30
0x17C1	0x341C ;_notes+31
0x17C2	0x345E ;_notes+32
0x17C3	0x342C ;_notes+33
0x17C4	0x3458 ;_notes+34
0x17C5	0x343C ;_notes+35
0x17C6	0x3453 ;_notes+36
0x17C7	0x341C ;_notes+37
0x17C8	0x344F ;_notes+38
0x17C9	0x340C ;_notes+39
0x17CA	0x344A ;_notes+40
0x17CB	0x343C ;_notes+41
0x17CC	0x3446 ;_notes+42
0x17CD	0x342C ;_notes+43
0x17CE	0x3442 ;_notes+44
0x17CF	0x342C ;_notes+45
0x17D0	0x343E ;_notes+46
0x17D1	0x343C ;_notes+47
; end of _notes
;tetris.c,0 :: ?ICS?lstr7_tetris
0x17D2	0x344C ;?ICS?lstr7_tetris+0
0x17D3	0x3465 ;?ICS?lstr7_tetris+1
0x17D4	0x3476 ;?ICS?lstr7_tetris+2
0x17D5	0x343A ;?ICS?lstr7_tetris+3
0x17D6	0x3420 ;?ICS?lstr7_tetris+4
0x17D7	0x3420 ;?ICS?lstr7_tetris+5
0x17D8	0x3420 ;?ICS?lstr7_tetris+6
0x17D9	0x3420 ;?ICS?lstr7_tetris+7
0x17DA	0x3420 ;?ICS?lstr7_tetris+8
0x17DB	0x3420 ;?ICS?lstr7_tetris+9
0x17DC	0x3400 ;?ICS?lstr7_tetris+10
; end of ?ICS?lstr7_tetris
;tetris.c,0 :: ?ICS?lstr1_tetris
0x17DD	0x3420 ;?ICS?lstr1_tetris+0
0x17DE	0x3420 ;?ICS?lstr1_tetris+1
0x17DF	0x3420 ;?ICS?lstr1_tetris+2
0x17E0	0x3420 ;?ICS?lstr1_tetris+3
0x17E1	0x3420 ;?ICS?lstr1_tetris+4
0x17E2	0x3400 ;?ICS?lstr1_tetris+5
; end of ?ICS?lstr1_tetris
;tetris.c,0 :: ?ICS?lstr6_tetris
0x17E3	0x3452 ;?ICS?lstr6_tetris+0
0x17E4	0x346F ;?ICS?lstr6_tetris+1
0x17E5	0x3477 ;?ICS?lstr6_tetris+2
0x17E6	0x343A ;?ICS?lstr6_tetris+3
0x17E7	0x3420 ;?ICS?lstr6_tetris+4
0x17E8	0x3420 ;?ICS?lstr6_tetris+5
0x17E9	0x3420 ;?ICS?lstr6_tetris+6
0x17EA	0x3420 ;?ICS?lstr6_tetris+7
0x17EB	0x3420 ;?ICS?lstr6_tetris+8
0x17EC	0x3420 ;?ICS?lstr6_tetris+9
0x17ED	0x3400 ;?ICS?lstr6_tetris+10
; end of ?ICS?lstr6_tetris
;tetris.c,0 :: ?ICS?lstr8_tetris
0x17EE	0x3453 ;?ICS?lstr8_tetris+0
0x17EF	0x3463 ;?ICS?lstr8_tetris+1
0x17F0	0x3472 ;?ICS?lstr8_tetris+2
0x17F1	0x343A ;?ICS?lstr8_tetris+3
0x17F2	0x3420 ;?ICS?lstr8_tetris+4
0x17F3	0x3420 ;?ICS?lstr8_tetris+5
0x17F4	0x3420 ;?ICS?lstr8_tetris+6
0x17F5	0x3420 ;?ICS?lstr8_tetris+7
0x17F6	0x3420 ;?ICS?lstr8_tetris+8
0x17F7	0x3420 ;?ICS?lstr8_tetris+9
0x17F8	0x3400 ;?ICS?lstr8_tetris+10
; end of ?ICS?lstr8_tetris
;tetris.c,0 :: ?lstr_5_tetris
0x17F9	0x344E ;?lstr_5_tetris+0
0x17FA	0x3465 ;?lstr_5_tetris+1
0x17FB	0x3478 ;?lstr_5_tetris+2
0x17FC	0x3474 ;?lstr_5_tetris+3
0x17FD	0x3420 ;?lstr_5_tetris+4
0x17FE	0x343A ;?lstr_5_tetris+5
0x17FF	0x3400 ;?lstr_5_tetris+6
; end of ?lstr_5_tetris
;tetris.c,25 :: _shapes_matrix
0x1800	0x3404 ;_shapes_matrix+0
0x1801	0x3400 ;_shapes_matrix+1
0x1802	0x3400 ;_shapes_matrix+2
0x1803	0x3400 ;_shapes_matrix+3
0x1804	0x3400 ;_shapes_matrix+4
0x1805	0x3400 ;_shapes_matrix+5
0x1806	0x3400 ;_shapes_matrix+6
0x1807	0x3404 ;_shapes_matrix+7
0x1808	0x3404 ;_shapes_matrix+8
0x1809	0x3404 ;_shapes_matrix+9
0x180A	0x3406 ;_shapes_matrix+10
0x180B	0x3404 ;_shapes_matrix+11
0x180C	0x3404 ;_shapes_matrix+12
0x180D	0x3404 ;_shapes_matrix+13
0x180E	0x3404 ;_shapes_matrix+14
0x180F	0x3404 ;_shapes_matrix+15
0x1810	0x3404 ;_shapes_matrix+16
0x1811	0x3406 ;_shapes_matrix+17
0x1812	0x3406 ;_shapes_matrix+18
0x1813	0x340C ;_shapes_matrix+19
0x1814	0x340C ;_shapes_matrix+20
0x1815	0x3404 ;_shapes_matrix+21
0x1816	0x340C ;_shapes_matrix+22
0x1817	0x3406 ;_shapes_matrix+23
0x1818	0x3400 ;_shapes_matrix+24
0x1819	0x3402 ;_shapes_matrix+25
0x181A	0x3404 ;_shapes_matrix+26
0x181B	0x3408 ;_shapes_matrix+27
0x181C	0x3400 ;_shapes_matrix+28
0x181D	0x3400 ;_shapes_matrix+29
0x181E	0x3400 ;_shapes_matrix+30
0x181F	0x3400 ;_shapes_matrix+31
0x1820	0x3400 ;_shapes_matrix+32
0x1821	0x3400 ;_shapes_matrix+33
0x1822	0x3400 ;_shapes_matrix+34
0x1823	0x3400 ;_shapes_matrix+35
0x1824	0x3400 ;_shapes_matrix+36
0x1825	0x3400 ;_shapes_matrix+37
0x1826	0x3400 ;_shapes_matrix+38
0x1827	0x3400 ;_shapes_matrix+39
0x1828	0x3400 ;_shapes_matrix+40
0x1829	0x3400 ;_shapes_matrix+41
0x182A	0x3400 ;_shapes_matrix+42
0x182B	0x3400 ;_shapes_matrix+43
0x182C	0x3402 ;_shapes_matrix+44
0x182D	0x3406 ;_shapes_matrix+45
0x182E	0x3406 ;_shapes_matrix+46
0x182F	0x3400 ;_shapes_matrix+47
0x1830	0x3400 ;_shapes_matrix+48
0x1831	0x341E ;_shapes_matrix+49
0x1832	0x340E ;_shapes_matrix+50
0x1833	0x340E ;_shapes_matrix+51
0x1834	0x3406 ;_shapes_matrix+52
0x1835	0x340C ;_shapes_matrix+53
0x1836	0x340E ;_shapes_matrix+54
0x1837	0x340C ;_shapes_matrix+55
0x1838	0x3400 ;_shapes_matrix+56
0x1839	0x3402 ;_shapes_matrix+57
0x183A	0x3400 ;_shapes_matrix+58
0x183B	0x3400 ;_shapes_matrix+59
0x183C	0x3400 ;_shapes_matrix+60
0x183D	0x3404 ;_shapes_matrix+61
0x183E	0x3406 ;_shapes_matrix+62
0x183F	0x3400 ;_shapes_matrix+63
0x1840	0x3400 ;_shapes_matrix+64
0x1841	0x3400 ;_shapes_matrix+65
0x1842	0x3400 ;_shapes_matrix+66
0x1843	0x3400 ;_shapes_matrix+67
0x1844	0x3400 ;_shapes_matrix+68
0x1845	0x3400 ;_shapes_matrix+69
0x1846	0x3400 ;_shapes_matrix+70
0x1847	0x3400 ;_shapes_matrix+71
0x1848	0x3400 ;_shapes_matrix+72
0x1849	0x3400 ;_shapes_matrix+73
0x184A	0x3400 ;_shapes_matrix+74
0x184B	0x3400 ;_shapes_matrix+75
0x184C	0x3400 ;_shapes_matrix+76
0x184D	0x3404 ;_shapes_matrix+77
0x184E	0x3406 ;_shapes_matrix+78
0x184F	0x340C ;_shapes_matrix+79
0x1850	0x3406 ;_shapes_matrix+80
0x1851	0x3408 ;_shapes_matrix+81
0x1852	0x3404 ;_shapes_matrix+82
0x1853	0x3402 ;_shapes_matrix+83
0x1854	0x3404 ;_shapes_matrix+84
0x1855	0x3404 ;_shapes_matrix+85
0x1856	0x3404 ;_shapes_matrix+86
0x1857	0x3406 ;_shapes_matrix+87
0x1858	0x340C ;_shapes_matrix+88
0x1859	0x3406 ;_shapes_matrix+89
0x185A	0x3406 ;_shapes_matrix+90
0x185B	0x3404 ;_shapes_matrix+91
0x185C	0x3404 ;_shapes_matrix+92
0x185D	0x3404 ;_shapes_matrix+93
0x185E	0x3400 ;_shapes_matrix+94
0x185F	0x3404 ;_shapes_matrix+95
0x1860	0x3404 ;_shapes_matrix+96
0x1861	0x3404 ;_shapes_matrix+97
0x1862	0x3404 ;_shapes_matrix+98
0x1863	0x3400 ;_shapes_matrix+99
0x1864	0x3400 ;_shapes_matrix+100
0x1865	0x3400 ;_shapes_matrix+101
0x1866	0x3400 ;_shapes_matrix+102
0x1867	0x3400 ;_shapes_matrix+103
0x1868	0x3400 ;_shapes_matrix+104
0x1869	0x3400 ;_shapes_matrix+105
0x186A	0x3400 ;_shapes_matrix+106
0x186B	0x3400 ;_shapes_matrix+107
0x186C	0x3400 ;_shapes_matrix+108
0x186D	0x3400 ;_shapes_matrix+109
0x186E	0x3400 ;_shapes_matrix+110
0x186F	0x3400 ;_shapes_matrix+111
0x1870	0x3400 ;_shapes_matrix+112
0x1871	0x3408 ;_shapes_matrix+113
0x1872	0x3400 ;_shapes_matrix+114
0x1873	0x3406 ;_shapes_matrix+115
0x1874	0x3400 ;_shapes_matrix+116
0x1875	0x3404 ;_shapes_matrix+117
0x1876	0x340C ;_shapes_matrix+118
0x1877	0x341E ;_shapes_matrix+119
0x1878	0x340E ;_shapes_matrix+120
0x1879	0x340E ;_shapes_matrix+121
0x187A	0x3406 ;_shapes_matrix+122
0x187B	0x3406 ;_shapes_matrix+123
0x187C	0x340E ;_shapes_matrix+124
0x187D	0x3406 ;_shapes_matrix+125
0x187E	0x3400 ;_shapes_matrix+126
0x187F	0x3400 ;_shapes_matrix+127
0x1880	0x3408 ;_shapes_matrix+128
0x1881	0x3400 ;_shapes_matrix+129
0x1882	0x340C ;_shapes_matrix+130
0x1883	0x3400 ;_shapes_matrix+131
0x1884	0x3400 ;_shapes_matrix+132
0x1885	0x3400 ;_shapes_matrix+133
0x1886	0x3400 ;_shapes_matrix+134
0x1887	0x3400 ;_shapes_matrix+135
0x1888	0x3400 ;_shapes_matrix+136
0x1889	0x3400 ;_shapes_matrix+137
0x188A	0x3400 ;_shapes_matrix+138
0x188B	0x3400 ;_shapes_matrix+139
; end of _shapes_matrix
;tetris.c,0 :: ?lstr_3_tetris
0x188C	0x3459 ;?lstr_3_tetris+0
0x188D	0x346F ;?lstr_3_tetris+1
0x188E	0x3475 ;?lstr_3_tetris+2
0x188F	0x3420 ;?lstr_3_tetris+3
0x1890	0x3461 ;?lstr_3_tetris+4
0x1891	0x3472 ;?lstr_3_tetris+5
0x1892	0x3465 ;?lstr_3_tetris+6
0x1893	0x3420 ;?lstr_3_tetris+7
0x1894	0x3470 ;?lstr_3_tetris+8
0x1895	0x346C ;?lstr_3_tetris+9
0x1896	0x3461 ;?lstr_3_tetris+10
0x1897	0x3463 ;?lstr_3_tetris+11
0x1898	0x3465 ;?lstr_3_tetris+12
0x1899	0x3464 ;?lstr_3_tetris+13
0x189A	0x3420 ;?lstr_3_tetris+14
0x189B	0x3420 ;?lstr_3_tetris+15
0x189C	0x3420 ;?lstr_3_tetris+16
0x189D	0x3420 ;?lstr_3_tetris+17
0x189E	0x3420 ;?lstr_3_tetris+18
0x189F	0x3400 ;?lstr_3_tetris+19
; end of ?lstr_3_tetris
;tetris.c,0 :: ?lstr_2_tetris
0x18A0	0x3443 ;?lstr_2_tetris+0
0x18A1	0x346F ;?lstr_2_tetris+1
0x18A2	0x346E ;?lstr_2_tetris+2
0x18A3	0x3467 ;?lstr_2_tetris+3
0x18A4	0x3472 ;?lstr_2_tetris+4
0x18A5	0x3461 ;?lstr_2_tetris+5
0x18A6	0x3474 ;?lstr_2_tetris+6
0x18A7	0x3475 ;?lstr_2_tetris+7
0x18A8	0x346C ;?lstr_2_tetris+8
0x18A9	0x3461 ;?lstr_2_tetris+9
0x18AA	0x3474 ;?lstr_2_tetris+10
0x18AB	0x3469 ;?lstr_2_tetris+11
0x18AC	0x346F ;?lstr_2_tetris+12
0x18AD	0x346E ;?lstr_2_tetris+13
0x18AE	0x3473 ;?lstr_2_tetris+14
0x18AF	0x3421 ;?lstr_2_tetris+15
0x18B0	0x3420 ;?lstr_2_tetris+16
0x18B1	0x3420 ;?lstr_2_tetris+17
0x18B2	0x3420 ;?lstr_2_tetris+18
0x18B3	0x3400 ;?lstr_2_tetris+19
; end of ?lstr_2_tetris
;tetris.c,0 :: ?lstr_4_tetris
0x18B4	0x3445 ;?lstr_4_tetris+0
0x18B5	0x346E ;?lstr_4_tetris+1
0x18B6	0x3474 ;?lstr_4_tetris+2
0x18B7	0x3465 ;?lstr_4_tetris+3
0x18B8	0x3472 ;?lstr_4_tetris+4
0x18B9	0x3420 ;?lstr_4_tetris+5
0x18BA	0x346E ;?lstr_4_tetris+6
0x18BB	0x3461 ;?lstr_4_tetris+7
0x18BC	0x346D ;?lstr_4_tetris+8
0x18BD	0x3465 ;?lstr_4_tetris+9
0x18BE	0x343A ;?lstr_4_tetris+10
0x18BF	0x3420 ;?lstr_4_tetris+11
0x18C0	0x3420 ;?lstr_4_tetris+12
0x18C1	0x3420 ;?lstr_4_tetris+13
0x18C2	0x3420 ;?lstr_4_tetris+14
0x18C3	0x3420 ;?lstr_4_tetris+15
0x18C4	0x3420 ;?lstr_4_tetris+16
0x18C5	0x3420 ;?lstr_4_tetris+17
0x18C6	0x3420 ;?lstr_4_tetris+18
0x18C7	0x3400 ;?lstr_4_tetris+19
; end of ?lstr_4_tetris
;tetris.c,65 :: itoa_digits_L0
0x18C8	0x3430 ;itoa_digits_L0+0
0x18C9	0x3431 ;itoa_digits_L0+1
0x18CA	0x3432 ;itoa_digits_L0+2
0x18CB	0x3433 ;itoa_digits_L0+3
0x18CC	0x3434 ;itoa_digits_L0+4
0x18CD	0x3435 ;itoa_digits_L0+5
0x18CE	0x3436 ;itoa_digits_L0+6
0x18CF	0x3437 ;itoa_digits_L0+7
0x18D0	0x3436 ;itoa_digits_L0+8
0x18D1	0x3438 ;itoa_digits_L0+9
0x18D2	0x3439 ;itoa_digits_L0+10
0x18D3	0x3461 ;itoa_digits_L0+11
0x18D4	0x3462 ;itoa_digits_L0+12
0x18D5	0x3463 ;itoa_digits_L0+13
0x18D6	0x3464 ;itoa_digits_L0+14
0x18D7	0x3465 ;itoa_digits_L0+15
0x18D8	0x3466 ;itoa_digits_L0+16
0x18D9	0x3400 ;itoa_digits_L0+17
; end of itoa_digits_L0
;tetris.c,0 :: ?lstr_9_tetris
0x18DA	0x3452 ;?lstr_9_tetris+0
0x18DB	0x3443 ;?lstr_9_tetris+1
0x18DC	0x3437 ;?lstr_9_tetris+2
0x18DD	0x343A ;?lstr_9_tetris+3
0x18DE	0x3420 ;?lstr_9_tetris+4
0x18DF	0x344E ;?lstr_9_tetris+5
0x18E0	0x3465 ;?lstr_9_tetris+6
0x18E1	0x3477 ;?lstr_9_tetris+7
0x18E2	0x3420 ;?lstr_9_tetris+8
0x18E3	0x3447 ;?lstr_9_tetris+9
0x18E4	0x3461 ;?lstr_9_tetris+10
0x18E5	0x346D ;?lstr_9_tetris+11
0x18E6	0x3465 ;?lstr_9_tetris+12
0x18E7	0x3420 ;?lstr_9_tetris+13
0x18E8	0x3420 ;?lstr_9_tetris+14
0x18E9	0x3400 ;?lstr_9_tetris+15
; end of ?lstr_9_tetris
;tetris.c,361 :: check_highscore_suffix_L0
0x18EA	0x3473 ;check_highscore_suffix_L0+0
0x18EB	0x3474 ;check_highscore_suffix_L0+1
0x18EC	0x346E ;check_highscore_suffix_L0+2
0x18ED	0x3464 ;check_highscore_suffix_L0+3
0x18EE	0x3472 ;check_highscore_suffix_L0+4
0x18EF	0x3464 ;check_highscore_suffix_L0+5
0x18F0	0x3474 ;check_highscore_suffix_L0+6
0x18F1	0x3468 ;check_highscore_suffix_L0+7
; end of check_highscore_suffix_L0
;tetris.c,538 :: game_over_tmp_L0
0x18F2	0x3447 ;game_over_tmp_L0+0
0x18F3	0x3441 ;game_over_tmp_L0+1
0x18F4	0x344D ;game_over_tmp_L0+2
0x18F5	0x3445 ;game_over_tmp_L0+3
0x18F6	0x344F ;game_over_tmp_L0+4
0x18F7	0x3456 ;game_over_tmp_L0+5
0x18F8	0x3445 ;game_over_tmp_L0+6
0x18F9	0x3452 ;game_over_tmp_L0+7
; end of game_over_tmp_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [187]    _interrupt
0x00BF      [13]    _ks0108_enable
0x00CC      [22]    _ks0108_command
0x00E2      [52]    _ks0108_locate
0x0116      [44]    _ks0108_data_read
0x0142      [22]    _ks0108_data_write
0x0158      [44]    _Div_16x16_S_L
0x0184      [29]    _Div_16x16_U
0x01A1      [43]    _Mul_16x16_U
0x01CC       [7]    _____DoICP
0x01D3      [52]    _ks0108_pset
0x0207     [105]    _Div_16x16_S
0x0270      [25]    _Mul_8x8_U
0x0289      [11]    _EEPROM_Read
0x0294      [32]    _ks0108_fill
0x02B4      [61]    _itoa
0x02F1     [100]    _ks0108_rect
0x0355      [65]    _build_shape_matrix
0x0396      [34]    _strcpy
0x03B8     [235]    _ks0108_char_portrait
0x04A3      [71]    _ks0108_char
0x04EA      [29]    _EEPROM_Write
0x0507     [191]    _draw_quad
0x05C6     [231]    _check_and_update_position
0x06AD      [79]    _destroy_row
0x06FC      [70]    _draw_shape
0x0742      [71]    _init_gamescreen
0x0789      [98]    _lower_rows
0x07EB       [5]    _mukke_stop
0x0800     [849]    _check_highscore
0x0B51     [252]    _show_highscore
0x0C4D      [13]    ___CC2DW
0x0C5A      [43]    _ks0108_init
0x0C85     [118]    _ks0108_title
0x0CFB      [15]    _mukke_start
0x0D0A     [101]    _game_over
0x0D6F     [173]    _update_scoreboard
0x1000    [1022]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    DC_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    C_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    Z_bit
0x0003       [0]    RP1_bit
0x0003       [0]    IRP_bit
0x0003       [1]    STATUS
0x0003       [0]    RP0_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA3_bit
0x0005       [1]    PORTA
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA4_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [1]    PORTB
0x0006       [0]    RB3_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB1_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC6_bit
0x0007       [1]    PORTC
0x0007       [0]    RC7_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC5_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD0_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD7_bit
0x0008       [1]    PORTD
0x0008       [0]    RD5_bit
0x0008       [0]    RD6_bit
0x0009       [0]    RE0_bit
0x0009       [0]    RE1_bit
0x0009       [1]    PORTE
0x0009       [0]    RE2_bit
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IF_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    PEIE_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [1]    PIR1
0x000C       [0]    PSPIF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TXIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [1]    PIR2
0x000D       [0]    EEIF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    BCLIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1ON_bit
0x0010       [1]    T1CON
0x0010       [0]    TMR1CS_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1SYNC_bit
0x0011       [1]    TMR2
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS1_bit
0x0013       [1]    SSPBUF
0x0014       [0]    CKP_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPM3_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    WCOL_bit
0x0014       [1]    SSPCON
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M3_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M2_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    RX9_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    OERR_bit
0x0018       [0]    FERR_bit
0x0018       [1]    RCSTA
0x0018       [0]    SPEN_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RC9_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [2]    CCPR2
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2X_bit
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2M2_bit
0x001E       [1]    ADRESH
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_bit
0x001F       [0]    ADON_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    ADCS0_bit
0x001F       [1]    ADCON0
0x0026       [2]    ___DoICPAddr
0x0028      [11]    ?lstr7_tetris
0x0033       [6]    ?lstr1_tetris
0x0039      [11]    ?lstr6_tetris
0x0044      [11]    ?lstr8_tetris
0x004F       [1]    ___savePCLATH
0x0050       [1]    ___saveSTATUS
0x0051       [2]    _round_delay
0x0053       [1]    _current_note_delay
0x0054       [1]    _song_position
0x0055       [1]    _ks0108_x
0x0056       [1]    _ks0108_y
0x0057       [1]    _ks0108_page
0x0058       [2]    _score
0x005A       [1]    _block_pos_x
0x005B       [1]    _rotation
0x005C       [1]    _block_pos_y
0x005D       [1]    _key_flags
0x005E       [1]    _beatcount
0x005F       [1]    _level
0x0060       [5]    _curr_shape_matrix
0x0065       [2]    _removed_rows
0x0067       [2]    main_i_L0
0x0069       [2]    main_j_L0
0x006B       [1]    main_random_seed_L0
0x006C       [1]    main_round_finished_L0
0x006D       [1]    main_round_removed_rows_L0
0x006E       [1]    main_block_type_current_L0
0x006F       [1]    main_block_type_next_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PSA_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    T0CS_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB3_bit
0x0087       [0]    TRISC0_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC2_bit
0x0088       [0]    TRISD2_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD4_bit
0x0089       [0]    TRISE2_bit
0x0089       [0]    PSPMODE_bit
0x0089       [1]    TRISE
0x0089       [0]    TRISE0_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    PSPMODE_TRISE_bit
0x0089       [0]    IBOV_bit
0x0089       [0]    OBF_bit
0x0089       [0]    IBF_bit
0x0089       [0]    OBF_TRISE_bit
0x0089       [0]    IBOV_TRISE_bit
0x0089       [0]    IBF_TRISE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    CCP1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    PSPIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TXIE_bit
0x008D       [1]    PIE2
0x008D       [0]    EEIE_bit
0x008D       [0]    CMIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    BCLIE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_POR_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    SEN_bit
0x0091       [0]    RSEN_bit
0x0091       [0]    PEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    S_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    P_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    CKE_bit
0x0094       [0]    D_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    SMP_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    D_A_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    R_W_bit
0x0094       [0]    BF_bit
0x0094       [0]    UA_bit
0x0094       [0]    READ_WRITE_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TX9D_bit
0x0098       [1]    TXSTA
0x0098       [0]    TXD8_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX8_9_bit
0x0099       [1]    SPBRG
0x009C       [0]    CM1_bit
0x009C       [0]    CM0_bit
0x009C       [1]    CMCON
0x009C       [0]    CM2_bit
0x009C       [0]    C2INV_bit
0x009C       [0]    C2OUT_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    CIS_bit
0x009C       [0]    C1INV_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVR1_bit
0x009D       [0]    CVR2_bit
0x009D       [0]    CVROE_bit
0x009D       [0]    CVREN_bit
0x009D       [0]    CVRR_bit
0x009D       [1]    CVRCON
0x009E       [1]    ADRESL
0x009F       [0]    PCFG3_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    PCFG0_bit
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG2_bit
0x009F       [1]    ADCON1
0x00A0      [40]    _playfield
0x00C8       [2]    main_menu1_L0
0x00CA       [2]    main_menu2_L0
0x00CC       [1]    main_menuleft_L0
0x00CD       [1]    game_over_i_L0
0x00CD       [1]    FARG_destroy_row_row
0x00CD      [10]    update_scoreboard_tmp0_L0
0x00CD       [1]    init_gamescreen_i_L0
0x00CD       [1]    FARG_check_and_update_position_x
0x00CD       [2]    show_highscore_addr_L0
0x00CD      [16]    check_highscore_hiscore_record_L0
0x00CD       [1]    FARG_lower_rows_start
0x00CD       [1]    FARG_draw_shape_c
0x00CD       [1]    FARG_ks0108_title_width
0x00CE       [1]    init_gamescreen_y_L0
0x00CE       [1]    FARG_lower_rows_end
0x00CE       [1]    FARG_ks0108_title_hpages
0x00CE       [2]    destroy_row_i_L0
0x00CE       [1]    FARG_draw_shape_x
0x00CE       [1]    FARG_check_and_update_position_y
0x00CE       [2]    game_over_x_L0
0x00CF       [1]    show_highscore_i_L0
0x00CF       [1]    lower_rows_i_L0
0x00CF       [1]    FARG_draw_shape_y
0x00CF       [1]    FARG_check_and_update_position_type
0x00CF       [2]    init_gamescreen_tmp_L0
0x00CF       [2]    ks0108_title_i_L0
0x00D0       [1]    lower_rows_j_L0
0x00D0       [1]    show_highscore_j_L0
0x00D0       [1]    draw_shape_i_L0
0x00D0       [1]    FARG_check_and_update_position_rot
0x00D1       [1]    draw_shape_j_L0
0x00D1       [1]    check_and_update_position_i_L0
0x00D1       [1]    lower_rows_k_L0
0x00D1       [1]    show_highscore_x_L0
0x00D1       [2]    ks0108_title_j_L0
0x00D2       [1]    check_and_update_position_j_L0
0x00D2       [1]    show_highscore_y_L0
0x00D3       [2]    ks0108_title_k_L0
0x00D3       [5]    check_and_update_position_tmp_matrix_L0
0x00D3       [2]    show_highscore_hiscore_L0
0x00D5       [1]    show_highscore_namechar_L0
0x00D6       [5]    show_highscore_scorestr_L0
0x00D7      [10]    update_scoreboard_tmp1_L0
0x00DD      [10]    check_highscore_player_name_L0
0x00E1      [10]    update_scoreboard_tmp2_L0
0x00E7       [1]    check_highscore_i_L0
0x00E8       [1]    check_highscore_j_L0
0x00E9       [1]    check_highscore_k_L0
0x00EA       [1]    check_highscore_x_L0
0x00EB       [1]    update_scoreboard_y_L0
0x00EB       [1]    check_highscore_addr_L0
0x00EC       [2]    check_highscore_hiscore_L0
0x00EC       [1]    update_scoreboard_i_L0
0x00EE       [2]    check_highscore_msg1_L0
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0110       [2]    check_highscore_msg2_L0
0x0112       [2]    check_highscore_msg3_L0
0x0114       [1]    FLOC__check_highscore
0x0115       [1]    FARG_ks0108_rect_x
0x0115       [1]    FARG_EEPROM_Write_Address
0x0115       [1]    FARG_build_shape_matrix_matrix
0x0115       [1]    FARG_ks0108_char_x
0x0115       [1]    FARG_ks0108_fill_pattern
0x0115       [1]    FARG_itoa_target
0x0115       [1]    FARG_strcpy_target
0x0115       [1]    FARG_EEPROM_Read_Address
0x0115       [1]    FARG_draw_quad_x
0x0115       [1]    FARG_ks0108_char_portrait_x
0x0116       [1]    FARG_strcpy_source
0x0116       [1]    FARG_draw_quad_y
0x0116       [2]    FARG_itoa_value
0x0116       [1]    FARG_EEPROM_Write_data_
0x0116       [1]    ks0108_fill_i_L0
0x0116       [1]    FARG_build_shape_matrix_type
0x0116       [1]    FARG_ks0108_char_portrait_y
0x0116       [1]    FARG_ks0108_char_y
0x0116       [1]    FARG_ks0108_rect_y
0x0117       [1]    FARG_ks0108_rect_width
0x0117       [1]    FARG_ks0108_char_portrait_c
0x0117       [1]    FARG_strcpy_length
0x0117       [1]    FARG_build_shape_matrix_rotation
0x0117       [1]    FARG_draw_quad_c
0x0117       [1]    ks0108_fill_j_L0
0x0117       [1]    FARG_ks0108_char_c
0x0118       [1]    FARG_itoa_i
0x0118       [1]    FARG_ks0108_char_invert
0x0118       [1]    FARG_ks0108_char_portrait_invert
0x0118       [1]    build_shape_matrix_i_L0
0x0118       [1]    FARG_draw_quad_addsingle
0x0118       [1]    FARG_ks0108_rect_height
0x0119       [1]    FARG_ks0108_rect_c
0x0119       [2]    draw_quad_i_L0
0x0119       [1]    ks0108_char_i_L0
0x0119       [1]    ks0108_char_portrait_i_L0
0x0119       [2]    FARG_itoa_base
0x0119       [3]    FLOC__build_shape_matrix
0x011A       [1]    ks0108_rect_i_L0
0x011A       [1]    ks0108_char_d_L0
0x011A       [1]    ks0108_char_portrait_k_L0
0x011B       [1]    ks0108_char_portrait_d_L0
0x011B       [1]    ks0108_rect_j_L0
0x011B       [2]    ks0108_char_j_L0
0x011B       [1]    FLOC__itoa
0x011B       [2]    draw_quad_screen_x_L0
0x011C       [1]    ks0108_char_portrait_e_L0
0x011D       [2]    draw_quad_screen_y_L0
0x011D       [1]    ks0108_char_portrait_f_L0
0x011E       [2]    ks0108_char_portrait_j_L0
0x011F       [1]    draw_quad_display_data_L0
0x0120       [1]    draw_quad_box_data_L0
0x0121       [1]    FARG_ks0108_pset_x
0x0122       [1]    FARG_ks0108_pset_y
0x0123       [1]    FARG_ks0108_pset_c
0x0124       [1]    ks0108_pset_display_data_L0
0x0125       [1]    ks0108_data_read_display_data_L0
0x0125       [1]    FARG_ks0108_data_write_d
0x0126       [1]    FARG_ks0108_locate_x
0x0127       [1]    FARG_ks0108_locate_y
0x0128       [1]    ks0108_locate_controller_L0
0x0129       [1]    FARG_ks0108_command_cmd
0x012A       [1]    FARG_ks0108_command_controller
0x018C       [0]    WREN_bit
0x018C       [0]    EEPGD_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    RD_bit
0x018C       [1]    EECON1
0x018C       [0]    WR_bit
0x018D       [1]    EECON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07F0      [16]    ?lstr_10_tetris
0x0E1C     [480]    ks0108_font5x7
0x1404     [768]    ks0108_title_bitmap
0x1704     [158]    _song
0x17A2      [48]    _notes
0x17D2      [11]    ?ICS?lstr7_tetris
0x17DD       [6]    ?ICS?lstr1_tetris
0x17E3      [11]    ?ICS?lstr6_tetris
0x17EE      [11]    ?ICS?lstr8_tetris
0x17F9       [7]    ?lstr_5_tetris
0x1800     [140]    _shapes_matrix
0x188C      [20]    ?lstr_3_tetris
0x18A0      [20]    ?lstr_2_tetris
0x18B4      [20]    ?lstr_4_tetris
0x18C8      [18]    itoa_digits_L0
0x18DA      [16]    ?lstr_9_tetris
0x18EA       [8]    check_highscore_suffix_L0
0x18F2       [8]    game_over_tmp_L0
//** Label List: ** 
//----------------------------------------------
  L_ks0108_fill0
  L_ks0108_fill1
  L_ks0108_fill2
  L_ks0108_fill3
  L_ks0108_fill4
  L_ks0108_fill5
  L_ks0108_locate6
  L_ks0108_locate7
  L_ks0108_command8
  L_ks0108_command9
  L_ks0108_pset10
  L_ks0108_pset11
  L_ks0108_rect12
  L_ks0108_rect13
  L_ks0108_rect14
  L_ks0108_rect15
  L_ks0108_rect16
  L_ks0108_rect17
  L_ks0108_rect18
  L_ks0108_rect19
  L_ks0108_rect20
  L_ks0108_rect21
  L_ks0108_char22
  L_ks0108_char23
  L_ks0108_char24
  L_ks0108_char25
  L_ks0108_char_portrait26
  L_ks0108_char_portrait27
  L_ks0108_char_portrait28
  L_ks0108_char_portrait29
  L_ks0108_char_portrait30
  L_ks0108_char_portrait31
  L_ks0108_char_portrait32
  L_ks0108_char_portrait33
  L_ks0108_char_portrait34
  L_ks0108_char_portrait35
  L_ks0108_char_portrait36
  L_ks0108_char_portrait37
  L_ks0108_char_portrait38
  L_ks0108_title39
  L_ks0108_title40
  L_ks0108_title41
  L_ks0108_title42
  L_ks0108_title43
  L_ks0108_title44
  L_ks0108_title45
  L_ks0108_data_read46
  L_ks0108_data_read47
  L_ks0108_data_write48
  L_ks0108_data_write49
  L__ks0108_rect50
  _ks0108_enable
  _ks0108_init
  _ks0108_fill
  _ks0108_locate
  _ks0108_command
  _ks0108_pset
  L__ks0108_pset51
  L__ks0108_pset52
  L__ks0108_pset53
  L__ks0108_pset54
  _ks0108_rect
  L__ks0108_rect55
  L__ks0108_rect56
  L__ks0108_rect57
  _ks0108_char
  L__ks0108_char58
  L__ks0108_char59
  _ks0108_char_portrait
  L__ks0108_char_portrait60
  L__ks0108_char_portrait61
  L__ks0108_char_portrait62
  L__ks0108_char_portrait63
  L__ks0108_char_portrait64
  L__ks0108_char_portrait65
  L__ks0108_char_portrait66
  L__ks0108_char_portrait67
  L__ks0108_char_portrait68
  L__ks0108_char_portrait69
  L__ks0108_char_portrait70
  L__ks0108_char_portrait71
  L__ks0108_char_portrait72
  L__ks0108_char_portrait73
  _ks0108_title
  L__ks0108_title74
  L__ks0108_title75
  L__ks0108_title76
  L__ks0108_title77
  L__ks0108_title78
  L__ks0108_title79
  L__ks0108_title80
  _ks0108_data_read
  _ks0108_data_write
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L__interrupt9
  _interrupt
  L__interrupt10
  _mukke_start
  _mukke_stop
  L_itoa0
  L_itoa1
  L_itoa2
  L_itoa3
  L_itoa4
  L_strcpy5
  L_strcpy6
  L_strcpy7
  L_draw_quad8
  L_draw_quad9
  L_draw_quad10
  L_draw_quad11
  L_draw_quad12
  L_draw_quad13
  L_draw_quad14
  L_draw_quad15
  L_draw_quad16
  L_draw_quad17
  L_destroy_row18
  L_destroy_row19
  L_destroy_row20
  L_destroy_row21
  L_destroy_row22
  L_lower_rows23
  L_lower_rows24
  L_lower_rows25
  L_lower_rows26
  L_lower_rows27
  L_lower_rows28
  L_lower_rows29
  L_lower_rows30
  L_lower_rows31
  L_lower_rows32
  L_lower_rows33
  L_draw_shape34
  L_draw_shape35
  L_draw_shape36
  L_draw_shape37
  L_draw_shape38
  L_draw_shape39
  L_draw_shape40
  L_build_shape_matrix41
  L_build_shape_matrix42
  L_build_shape_matrix43
  L_check_and_update_position44
  L_check_and_update_position45
  L_check_and_update_position46
  L_check_and_update_position47
  L_check_and_update_position48
  L_check_and_update_position49
  L_check_and_update_position50
  L_check_and_update_position51
  L_check_and_update_position52
  L_check_and_update_position53
  L_check_and_update_position54
  L_check_and_update_position55
  L_check_and_update_position56
  L_check_and_update_position57
  L_show_highscore58
  L_show_highscore59
  L_show_highscore60
  L_show_highscore61
  L_show_highscore62
  L_show_highscore63
  L_show_highscore64
  L_show_highscore65
  L_show_highscore66
  L_show_highscore67
  L_show_highscore68
  L_show_highscore69
  L_show_highscore70
  L_show_highscore71
  L_show_highscore72
  L_check_highscore73
  L_check_highscore74
  L_check_highscore75
  L_check_highscore76
  L_check_highscore77
  L_check_highscore78
  L_check_highscore79
  L_check_highscore80
  L_check_highscore81
  L_check_highscore82
  L_check_highscore83
  L_check_highscore84
  L_check_highscore85
  L_check_highscore86
  L_check_highscore87
  L_check_highscore88
  L_check_highscore89
  L_check_highscore90
  L_check_highscore91
  L_check_highscore92
  L_check_highscore93
  L_check_highscore94
  L_check_highscore95
  L_check_highscore96
  L_check_highscore97
  L_check_highscore98
  L_check_highscore99
  L_check_highscore100
  L_check_highscore101
  L_check_highscore102
  L_check_highscore103
  L_check_highscore104
  L_check_highscore105
  L_check_highscore106
  L_check_highscore107
  L_check_highscore108
  L_check_highscore109
  L_check_highscore110
  L_check_highscore111
  L_check_highscore112
  L_check_highscore113
  L_check_highscore114
  L_check_highscore115
  L_check_highscore116
  L_check_highscore117
  L_check_highscore118
  L_check_highscore119
  L_check_highscore120
  L_check_highscore121
  L_check_highscore122
  L_check_highscore123
  L_check_highscore124
  L_check_highscore125
  L_check_highscore126
  L_check_highscore127
  L_check_highscore128
  L_check_highscore129
  L_check_highscore130
  L_check_highscore131
  L_check_highscore132
  L_check_highscore133
  L_check_highscore134
  L_check_highscore135
  L_check_highscore136
  L_check_highscore137
  L_check_highscore138
  L_check_highscore139
  L_check_highscore140
  L_check_highscore141
  L_check_highscore142
  L_init_gamescreen143
  L_init_gamescreen144
  L_init_gamescreen145
  L_update_scoreboard146
  L_update_scoreboard147
  L_update_scoreboard148
  L_game_over149
  L_game_over150
  L_game_over151
  L_game_over152
  L_game_over153
  L_game_over154
  L_game_over155
  ___main_mostevilrestart
  L_main156
  L_main157
  L_main158
  L_main159
  L_main160
  L_main161
  L_main162
  L_main163
  L_main164
  L_main165
  L_main166
  L_main167
  L_main168
  L_main169
  L_main170
  L_main171
  L_main172
  L_main173
  L_main174
  L_main175
  L_main176
  L_main177
  L_main178
  L_main179
  L_main180
  L_main181
  L_main182
  L_main183
  L_main184
  L_main185
  L_main186
  L_main187
  L_main188
  L_main189
  L_main190
  L_main191
  L_main192
  L_main193
  L_main194
  L_main195
  L_main196
  L_main197
  L_main198
  L_main199
  L_main200
  L_main201
  L_main202
  L_main203
  L_main204
  L_main205
  L_main206
  L_main207
  L_main208
  L_main209
  L_main210
  L_main211
  L_main212
  L_main213
  L_main214
  L_main215
  L__itoa216
  L__draw_quad217
  L__check_highscore218
  L__check_highscore219
  L__main220
  L__main221
  L__main222
  _itoa
  _strcpy
  L__strcpy223
  _draw_quad
  L__draw_quad224
  L__draw_quad225
  L__draw_quad226
  L__draw_quad227
  L__draw_quad228
  L__draw_quad229
  L__draw_quad230
  L__draw_quad231
  L__draw_quad232
  L__draw_quad233
  _destroy_row
  L__destroy_row234
  L__destroy_row235
  L__destroy_row236
  _lower_rows
  L__lower_rows237
  L__lower_rows238
  _draw_shape
  L__draw_shape239
  L__draw_shape240
  _build_shape_matrix
  _check_and_update_position
  L__check_and_update_position241
  L__check_and_update_position242
  L__check_and_update_position243
  L__check_and_update_position244
  L__check_and_update_position245
  L__check_and_update_position246
  L__check_and_update_position247
  _show_highscore
  _check_highscore
  L__check_highscore248
  _init_gamescreen
  _update_scoreboard
  _game_over
  _main
  L__main249
  L__main250
  L__main251
  L__main252
  L__main253
  L__main254
  L__main255
  L__main256
  L__main257
  L__main258
  L__main259
  L__main260
  L_EEPROM_Write0
  L_EEPROM_Write1
  _EEPROM_Read
  _EEPROM_Write
  L__EEPROM_Write2
  L__EEPROM_Write3
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L__interrupt9
  _interrupt
  L__interrupt10
  _mukke_start
  _mukke_stop
